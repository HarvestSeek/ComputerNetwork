{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Notes","title":"Preface"},{"location":"#notes","text":"","title":"Notes"},{"location":"color/","text":"Primary colors Default: Teal Click on a tile to change the primary color of the theme: Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) }) Accent colors Default: Blue Click on a tile to change the accent color of the theme: Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"Color"},{"location":"color/#primary-colors","text":"Default: Teal Click on a tile to change the primary color of the theme: Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) })","title":"Primary colors"},{"location":"color/#accent-colors","text":"Default: Blue Click on a tile to change the accent color of the theme: Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"Accent colors"},{"location":"1-Introduction/1.1/","text":"1. \u5206\u6790\u7b97\u6cd5\uff1a \u8ba1\u7b97\u65f6\u95f4 \u2003\u4ee5\u4e0b\u7684\u6a21\u578b\u57fa\u4e8e\u5355\u5904\u7406\u5668\u8ba1\u7b97\u6a21\u578b\u2014\u2014 RAM \u6a21\u578b\u8fdb\u884c\u8ba8\u8bba\u3002\u5b83\u6ca1\u6709\u5e76\u53d1\u64cd\u4f5c\uff0c\u4e14\u6307\u4ee4\u96c6\u53ea\u5305\u542b\u4e00\u822c\u8ba1\u7b97\u673a\u7684\u5e38\u89c1\u6307\u4ee4\u3002 \u2003\u4e00\u822c\u6765\u8bf4\uff0c\u7b97\u6cd5\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u540c\u6b65\u589e\u957f\uff0c\u6240\u4ee5\u901a\u5e38\u628a\u4e00\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u8868\u793a\u6210\u5176\u8f93\u5165\u89c4\u6a21\u7684\u51fd\u6570\u3002 \u2003\u8f93\u5165\u89c4\u6a21( input size )\u7684\u6700\u4f73\u6982\u5ff5\u4f9d\u8d56\u4e8e\u6240\u7814\u7a76\u7684\u95ee\u9898\uff1b\u4e00\u4e2a\u7b97\u6cd5\u5728\u7279\u5b9a\u8f93\u5165\u4e0a\u7684\u8fd0\u884c\u65f6\u95f4( running time )\u6307\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u6216\u6b65\u6570\u3002 \u2003\u4ee5\u63d2\u5165\u6392\u5e8f\u4e3a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 INSERTION - SORT ( A ) for j = 2 to A . length key = A [ j ] // Insert A [ j ] into the sorted sequence A [ 1 .. j - 1 ] i = j - 1 while i > 0 and A [ i ] > key A [ i + 1 ] = A [ i ] i = i - 1 A [ i + 1 ] = key \u2003\u8fd0\u884c\u65f6\u95f4\u4f30\u8ba1\uff1a \u884c\u6570 \u4ee3\u4ef7 \u6b21\u6570 2 $c_1$ $n$ 3 $c_2$ $n-1$ 5 $c_4$ $n-1$ 6 $c_5$ $\\sum_{j=2}^nt_j$ 7 $c_6$ $\\sum_{j=2}^n(t_j - 1)$ 8 $c_7$ $\\sum_{j=2}^n(t_j - 1)$ 9 $c_8$ $n-1$ \u2003\u6267\u884c\u6bcf\u884c\u4f2a\u4ee3\u7801\u9700\u8981\u5e38\u91cf\u65f6\u95f4\uff0c\u4e14\u4e0d\u540c\u884c\u9700\u8981\u7684\u65f6\u95f4\u53ef\u80fd\u4e0d\u540c\uff0c\u8fd9\u4e0e RAM \u6a21\u578b\u662f\u4e00\u81f4\u7684\u3002 \u2003\u82e5\u53ea\u8003\u8651\u6700\u4f73\u60c5\u51b5\uff0c\u5373\u6570\u7ec4\u5df2\u6392\u597d\u5e8f\uff0c\u5219\u63d2\u5165\u6392\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a $$ \\begin{aligned} T(n) & =c_1n+c_2(n-1)+c_4(n-1)+c_5(n-1)+c_8(n-1) \\\\ & =(c_1+c_2+c_4+c_5+c_8)n-(c_2+c_4+c_5+c_8)\\\\ \\end{aligned} $$ 2. \u589e\u957f\u91cf\u7ea7 \u2003\u4e3a\u4e86\u7b80\u5316\u7b97\u6cd5\u5206\u6790\uff0c\u6211\u4eec\u5e38\u5e38\u9700\u8981\u5ffd\u7565\u9ad8\u9636\u9879\u7cfb\u6570\u548c\u4f4e\u9636\u9879\uff0c\u800c\u662f\u53ea\u5173\u5fc3\u589e\u957f\u91cf\u7ea7( order of growth )\u3002","title":"1.1"},{"location":"1-Introduction/1.1/#1","text":"\u4ee5\u4e0b\u7684\u6a21\u578b\u57fa\u4e8e\u5355\u5904\u7406\u5668\u8ba1\u7b97\u6a21\u578b\u2014\u2014 RAM \u6a21\u578b\u8fdb\u884c\u8ba8\u8bba\u3002\u5b83\u6ca1\u6709\u5e76\u53d1\u64cd\u4f5c\uff0c\u4e14\u6307\u4ee4\u96c6\u53ea\u5305\u542b\u4e00\u822c\u8ba1\u7b97\u673a\u7684\u5e38\u89c1\u6307\u4ee4\u3002 \u2003\u4e00\u822c\u6765\u8bf4\uff0c\u7b97\u6cd5\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u540c\u6b65\u589e\u957f\uff0c\u6240\u4ee5\u901a\u5e38\u628a\u4e00\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u8868\u793a\u6210\u5176\u8f93\u5165\u89c4\u6a21\u7684\u51fd\u6570\u3002 \u2003\u8f93\u5165\u89c4\u6a21( input size )\u7684\u6700\u4f73\u6982\u5ff5\u4f9d\u8d56\u4e8e\u6240\u7814\u7a76\u7684\u95ee\u9898\uff1b\u4e00\u4e2a\u7b97\u6cd5\u5728\u7279\u5b9a\u8f93\u5165\u4e0a\u7684\u8fd0\u884c\u65f6\u95f4( running time )\u6307\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u6216\u6b65\u6570\u3002 \u2003\u4ee5\u63d2\u5165\u6392\u5e8f\u4e3a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 INSERTION - SORT ( A ) for j = 2 to A . length key = A [ j ] // Insert A [ j ] into the sorted sequence A [ 1 .. j - 1 ] i = j - 1 while i > 0 and A [ i ] > key A [ i + 1 ] = A [ i ] i = i - 1 A [ i + 1 ] = key \u2003\u8fd0\u884c\u65f6\u95f4\u4f30\u8ba1\uff1a \u884c\u6570 \u4ee3\u4ef7 \u6b21\u6570 2 $c_1$ $n$ 3 $c_2$ $n-1$ 5 $c_4$ $n-1$ 6 $c_5$ $\\sum_{j=2}^nt_j$ 7 $c_6$ $\\sum_{j=2}^n(t_j - 1)$ 8 $c_7$ $\\sum_{j=2}^n(t_j - 1)$ 9 $c_8$ $n-1$ \u2003\u6267\u884c\u6bcf\u884c\u4f2a\u4ee3\u7801\u9700\u8981\u5e38\u91cf\u65f6\u95f4\uff0c\u4e14\u4e0d\u540c\u884c\u9700\u8981\u7684\u65f6\u95f4\u53ef\u80fd\u4e0d\u540c\uff0c\u8fd9\u4e0e RAM \u6a21\u578b\u662f\u4e00\u81f4\u7684\u3002 \u2003\u82e5\u53ea\u8003\u8651\u6700\u4f73\u60c5\u51b5\uff0c\u5373\u6570\u7ec4\u5df2\u6392\u597d\u5e8f\uff0c\u5219\u63d2\u5165\u6392\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a\uff1a $$ \\begin{aligned} T(n) & =c_1n+c_2(n-1)+c_4(n-1)+c_5(n-1)+c_8(n-1) \\\\ & =(c_1+c_2+c_4+c_5+c_8)n-(c_2+c_4+c_5+c_8)\\\\ \\end{aligned} $$","title":"1. \u5206\u6790\u7b97\u6cd5\uff1a \u8ba1\u7b97\u65f6\u95f4"},{"location":"1-Introduction/1.1/#2","text":"\u4e3a\u4e86\u7b80\u5316\u7b97\u6cd5\u5206\u6790\uff0c\u6211\u4eec\u5e38\u5e38\u9700\u8981\u5ffd\u7565\u9ad8\u9636\u9879\u7cfb\u6570\u548c\u4f4e\u9636\u9879\uff0c\u800c\u662f\u53ea\u5173\u5fc3\u589e\u957f\u91cf\u7ea7( order of growth )\u3002","title":"2. \u589e\u957f\u91cf\u7ea7"},{"location":"1-Introduction/1.2/","text":"1.\u589e\u957f\u7684\u9636 $ \\Theta(1) < \\Theta(lgn) < \\Theta(\\sqrt n) < \\Theta(n) < \\Theta(nlgn) < \\Theta(n^2) < \\Theta(n^3) < \\Theta(2^n) < \\Theta(n!) $ 2.\u540c\u9636\u51fd\u6570\u96c6\u5408 $ \\Theta(g(n)) = \\lbrace \\ f(n) \\ | \\ \\exists c_1 \\text{\u3001} c_2 > 0, \\ n_0 ,\\ \\forall n \\geq n_0, \\ \\ c_1g(n) \\leq f(n) \\leq c_2g(n) \\rbrace $ \u5982\u679c$f(n) \\in \\Theta(g(n)), \\ g(n) $\u4e0e$f(n)$\u540c\u9636\uff0c\u8bb0\u4f5c$ f(n) = \\Theta (g(n))$ 3.\u4f4e\u9636\u51fd\u6570\u96c6\u5408 $O(g(n))=\\lbrace \\ f(n)\\ \\mid \\ \\exists c > 0, \\ n_0, \\ \\forall n \\geq n_0, \\ 0 \\leq f(n) \\leq cg(n)\\rbrace$ 4.\u9ad8\u9636\u51fd\u6570\u96c6\u5408 $\\Omega(g(n))=\\lbrace \\ f(n) \\ \\mid \\ \\exists c > 0, \\ n_0, \\ \\forall n \\geq n_0, \\ 0 \\leq cg(n) \\leq f(n) \\rbrace$ 5.\u4e25\u683c\u4f4e\u9636 $o(g(n))=\\lbrace \\ f(n)\\ \\mid \\ \\forall c > 0, \\ n_0, \\ \\forall n \\geq n_0, \\ 0 \\leq f(n) < cg(n)\\rbrace$ 6.\u6ce8 \u2460 $f(n)=\\Theta(g(n)) \\Rightarrow f(n)=O(g(n))$\uff0c\u0398 \u6807\u8bb0\u5f3a\u4e8e O \u6807\u8bb0 \u2461 big O \u6807\u8bb0\u53ef\u80fd\u4e0d\u662f\u7d27\u7684\uff0c\u4f8b\u5982 $2n^2=O(n^2)$\u662f\u7d27\u7684\uff0c\u4f46 $2n=O(n^2)$\u4e0d\u662f \u2462 small o \u6807\u8bb0\u7528\u4e8e\u6807\u8bb0\u4e0a\u754c\u4f46\u4e0d\u662f\u7d27\u7684\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 $2n^2 \\ne o(n^2)$","title":"1.2"},{"location":"1-Introduction/1.2/#1","text":"$ \\Theta(1) < \\Theta(lgn) < \\Theta(\\sqrt n) < \\Theta(n) < \\Theta(nlgn) < \\Theta(n^2) < \\Theta(n^3) < \\Theta(2^n) < \\Theta(n!) $","title":"1.\u589e\u957f\u7684\u9636"},{"location":"1-Introduction/1.2/#2","text":"$ \\Theta(g(n)) = \\lbrace \\ f(n) \\ | \\ \\exists c_1 \\text{\u3001} c_2 > 0, \\ n_0 ,\\ \\forall n \\geq n_0, \\ \\ c_1g(n) \\leq f(n) \\leq c_2g(n) \\rbrace $ \u5982\u679c$f(n) \\in \\Theta(g(n)), \\ g(n) $\u4e0e$f(n)$\u540c\u9636\uff0c\u8bb0\u4f5c$ f(n) = \\Theta (g(n))$","title":"2.\u540c\u9636\u51fd\u6570\u96c6\u5408"},{"location":"1-Introduction/1.2/#3","text":"$O(g(n))=\\lbrace \\ f(n)\\ \\mid \\ \\exists c > 0, \\ n_0, \\ \\forall n \\geq n_0, \\ 0 \\leq f(n) \\leq cg(n)\\rbrace$","title":"3.\u4f4e\u9636\u51fd\u6570\u96c6\u5408"},{"location":"1-Introduction/1.2/#4","text":"$\\Omega(g(n))=\\lbrace \\ f(n) \\ \\mid \\ \\exists c > 0, \\ n_0, \\ \\forall n \\geq n_0, \\ 0 \\leq cg(n) \\leq f(n) \\rbrace$","title":"4.\u9ad8\u9636\u51fd\u6570\u96c6\u5408"},{"location":"1-Introduction/1.2/#5","text":"$o(g(n))=\\lbrace \\ f(n)\\ \\mid \\ \\forall c > 0, \\ n_0, \\ \\forall n \\geq n_0, \\ 0 \\leq f(n) < cg(n)\\rbrace$","title":"5.\u4e25\u683c\u4f4e\u9636"},{"location":"1-Introduction/1.2/#6","text":"\u2460 $f(n)=\\Theta(g(n)) \\Rightarrow f(n)=O(g(n))$\uff0c\u0398 \u6807\u8bb0\u5f3a\u4e8e O \u6807\u8bb0 \u2461 big O \u6807\u8bb0\u53ef\u80fd\u4e0d\u662f\u7d27\u7684\uff0c\u4f8b\u5982 $2n^2=O(n^2)$\u662f\u7d27\u7684\uff0c\u4f46 $2n=O(n^2)$\u4e0d\u662f \u2462 small o \u6807\u8bb0\u7528\u4e8e\u6807\u8bb0\u4e0a\u754c\u4f46\u4e0d\u662f\u7d27\u7684\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 $2n^2 \\ne o(n^2)$","title":"6.\u6ce8"},{"location":"1-Introduction/1.3/","text":"1. \u66ff\u6362\u65b9\u6cd5( Substitution method ) Steps: \u2460 \u731c\u6d4b\u89e3\u7684\u5f62\u5f0f \u2461 \u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6c42\u51fa\u89e3\u7684\u5e38\u6570\uff0c\u5e76\u8bc1\u660e\u89e3\u662f\u6b63\u786e\u7684\u3002 e.g.1 $ \\ \\ \\ T(n)=2T(\\lfloor n/2 \\rfloor)+n$ \u731c\u6d4b $T(n)=O(nlgn)$\uff0c\u4ee3\u5165\u5f97\uff1a $$ \\begin{aligned} T(n) & \\leq 2(c\\lfloor n/2 \\rfloor lg(\\lfloor n/2 \\rfloor))+n \\leq cn \\ lg(n/2)+n \\\\ & = cn\\ lgn-cn\\ lg2+n=cn\\ lgn-cn+n \\\\ &\\leq cn\\ lgn \\end{aligned} $$ (a). \u731c\u6d4b\u7684\u65b9\u6cd5 \u2460 \u901a\u8fc7\u548c\u5df2\u7ecf\u89c1\u8fc7\u7684\u9012\u5f52\u5f0f\u6bd4\u8f83\uff0c\u5982 $T(n)=2T(\\lfloor n/2 \\rfloor+17)+n$ \u4e2d17\u8d77\u5230\u7684\u5f71\u54cd\u53ef\u80fd\u4e0d\u5927 \u2461 \u5148\u8bc1\u660e\u8f83\u4f4e\u7684\u4e0a\u754c\u6216\u4e0b\u754c (b). \u51cf\u53bb\u4e00\u4e2a\u4f4e\u9636\u9879 e.g. $\\ \\ \\ T(n)=T(\\lfloor n/2 \\rfloor)+T(\\lceil n/2 \\rceil)+1$ \u731c\u6d4b $T(n)=O(n)$\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a$T(n)\\leq c\\lfloor n/2 \\rfloor + c\\lceil n/2 \\rceil + 1=cn+1$\uff0c\u89e3\u4e0d\u51fa\u6765\u3002 \u76f4\u89c9\u4e0a\u5e94\u8be5\u5c1d\u8bd5\u66f4\u5927\u7684\u754c $O(n^2)$\uff0c\u4f46\u539f\u6765\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u5fc5\u987b\u505a\u51fa\u66f4\u5f3a\u7684\u5f52\u7eb3\u5047\u8bbe\uff1a\u7531\u4e8e\u548c\u7ed3\u679c\u53ea\u5dee\u4e00\u4e2a\u5e38\u6570\uff0c\u6839\u636e\u6570\u5b66\u5f52\u7eb3\u6cd5\u7684\u4e0d\u7b49\u5f0f\uff0c\u51cf\u53bb\u4e00\u4e2a\u4f4e\u9636\u9879\uff0c\u731c\u6d4b $T(n)\\leq cn-d$\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\uff1a$T(n)\\leq c\\lfloor n/2 \\rfloor - d + c\\lceil n/2 \\rceil - d + 1=cn-2d+1\\leq cn-d$\u3002 (c). \u53d8\u91cf\u4ee3\u6362 e.g. $ \\ \\ \\ T(n)=2T(\\sqrt n)+lgn$ \u4ee4 $m=lgn$\uff0c\u5f97 $T(2^m)=2T(2^{m/2})+m$\uff1b\u91cd\u547d\u540d $S(m)=T(2^m)$\uff0c\u5f97 $S(m)=2S(m/2)+m$\u3002 \u6700\u540e $T(n)=T(2^m)=S(m)=O(mlgm)=O(lgn\u00b7lglgn)$ 2. \u9012\u5f52\u6811\u6cd5( recursion-tree method ) \u2003\u5bf9\u9012\u5f52\u5f0f\u8fdb\u884c\u9010\u7ea7\u5c55\u5f00\uff0c\u5f80\u5f80\u8981\u5fcd\u53d7\u4e00\u4e9b\u4e0d\u7cbe\u786e\uff0c\u901a\u5e38\u53ef\u4ee5\u5f97\u5230\u4e0a\u754c\u6216\u4e0b\u754c\uff0c\u914d\u5408\u4ee3\u5165\u6cd5\u4f7f\u7528\u3002 3. \u4e3b\u65b9\u6cd5( master method ) \u4e3b\u5b9a\u7406\uff1a \u4ee4 $a\\geq 1$ \u548c $ b>1 $ \u662f\u5e38\u6570\uff0c$f(n)$ \u662f\u4e00\u4e2a\u51fd\u6570\uff0c$T(n)$ \u662f\u5b9a\u4e49\u5728\u975e\u8d1f\u6574\u6570\u4e0a\u7684\u9012\u5f52\u5f0f\uff1a$T(n)=aT(n/b)+f(n)$\uff0c\u90a3\u4e48\uff1a \u2003\u2460 \u82e5\u5bf9\u67d0\u4e2a $\\epsilon>0$\uff0c\u6709 $f(n)=O(n^{log_ba-\\epsilon})$\uff0c\u5219 $T(n)=\\Theta(n^{log_ba})$ \u2003\u2461 \u82e5 $f(n)=O(n^{log_ba})$\uff0c\u5219 $T(n)=\\Theta(n^{log_ba}\u00b7log_bn)$ \u2003\u2462 \u82e5\u5bf9\u67d0\u4e2a $\\epsilon>0$\uff0c\u6709 $f(n)=\\Omega(n^{log_ba+\\epsilon})$\uff0c\u4e14\u5bf9\u5145\u5206\u5927\u7684 $n$ \u6709 $af(n/b)\\leq cf(n)$\uff0c\u5219 $T(n)=\\Theta(f(n))$","title":"1.3"},{"location":"1-Introduction/1.3/#1-substitution-method","text":"Steps: \u2460 \u731c\u6d4b\u89e3\u7684\u5f62\u5f0f \u2461 \u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u6c42\u51fa\u89e3\u7684\u5e38\u6570\uff0c\u5e76\u8bc1\u660e\u89e3\u662f\u6b63\u786e\u7684\u3002 e.g.1 $ \\ \\ \\ T(n)=2T(\\lfloor n/2 \\rfloor)+n$ \u731c\u6d4b $T(n)=O(nlgn)$\uff0c\u4ee3\u5165\u5f97\uff1a $$ \\begin{aligned} T(n) & \\leq 2(c\\lfloor n/2 \\rfloor lg(\\lfloor n/2 \\rfloor))+n \\leq cn \\ lg(n/2)+n \\\\ & = cn\\ lgn-cn\\ lg2+n=cn\\ lgn-cn+n \\\\ &\\leq cn\\ lgn \\end{aligned} $$","title":"1. \u66ff\u6362\u65b9\u6cd5(Substitution method)"},{"location":"1-Introduction/1.3/#a","text":"\u2460 \u901a\u8fc7\u548c\u5df2\u7ecf\u89c1\u8fc7\u7684\u9012\u5f52\u5f0f\u6bd4\u8f83\uff0c\u5982 $T(n)=2T(\\lfloor n/2 \\rfloor+17)+n$ \u4e2d17\u8d77\u5230\u7684\u5f71\u54cd\u53ef\u80fd\u4e0d\u5927 \u2461 \u5148\u8bc1\u660e\u8f83\u4f4e\u7684\u4e0a\u754c\u6216\u4e0b\u754c","title":"(a). \u731c\u6d4b\u7684\u65b9\u6cd5"},{"location":"1-Introduction/1.3/#b","text":"e.g. $\\ \\ \\ T(n)=T(\\lfloor n/2 \\rfloor)+T(\\lceil n/2 \\rceil)+1$ \u731c\u6d4b $T(n)=O(n)$\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a$T(n)\\leq c\\lfloor n/2 \\rfloor + c\\lceil n/2 \\rceil + 1=cn+1$\uff0c\u89e3\u4e0d\u51fa\u6765\u3002 \u76f4\u89c9\u4e0a\u5e94\u8be5\u5c1d\u8bd5\u66f4\u5927\u7684\u754c $O(n^2)$\uff0c\u4f46\u539f\u6765\u7684\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u5fc5\u987b\u505a\u51fa\u66f4\u5f3a\u7684\u5f52\u7eb3\u5047\u8bbe\uff1a\u7531\u4e8e\u548c\u7ed3\u679c\u53ea\u5dee\u4e00\u4e2a\u5e38\u6570\uff0c\u6839\u636e\u6570\u5b66\u5f52\u7eb3\u6cd5\u7684\u4e0d\u7b49\u5f0f\uff0c\u51cf\u53bb\u4e00\u4e2a\u4f4e\u9636\u9879\uff0c\u731c\u6d4b $T(n)\\leq cn-d$\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\uff1a$T(n)\\leq c\\lfloor n/2 \\rfloor - d + c\\lceil n/2 \\rceil - d + 1=cn-2d+1\\leq cn-d$\u3002","title":"(b). \u51cf\u53bb\u4e00\u4e2a\u4f4e\u9636\u9879"},{"location":"1-Introduction/1.3/#c","text":"e.g. $ \\ \\ \\ T(n)=2T(\\sqrt n)+lgn$ \u4ee4 $m=lgn$\uff0c\u5f97 $T(2^m)=2T(2^{m/2})+m$\uff1b\u91cd\u547d\u540d $S(m)=T(2^m)$\uff0c\u5f97 $S(m)=2S(m/2)+m$\u3002 \u6700\u540e $T(n)=T(2^m)=S(m)=O(mlgm)=O(lgn\u00b7lglgn)$","title":"(c). \u53d8\u91cf\u4ee3\u6362"},{"location":"1-Introduction/1.3/#2-recursion-tree-method","text":"\u5bf9\u9012\u5f52\u5f0f\u8fdb\u884c\u9010\u7ea7\u5c55\u5f00\uff0c\u5f80\u5f80\u8981\u5fcd\u53d7\u4e00\u4e9b\u4e0d\u7cbe\u786e\uff0c\u901a\u5e38\u53ef\u4ee5\u5f97\u5230\u4e0a\u754c\u6216\u4e0b\u754c\uff0c\u914d\u5408\u4ee3\u5165\u6cd5\u4f7f\u7528\u3002","title":"2. \u9012\u5f52\u6811\u6cd5(recursion-tree method)"},{"location":"1-Introduction/1.3/#3-master-method","text":"\u4e3b\u5b9a\u7406\uff1a \u4ee4 $a\\geq 1$ \u548c $ b>1 $ \u662f\u5e38\u6570\uff0c$f(n)$ \u662f\u4e00\u4e2a\u51fd\u6570\uff0c$T(n)$ \u662f\u5b9a\u4e49\u5728\u975e\u8d1f\u6574\u6570\u4e0a\u7684\u9012\u5f52\u5f0f\uff1a$T(n)=aT(n/b)+f(n)$\uff0c\u90a3\u4e48\uff1a \u2003\u2460 \u82e5\u5bf9\u67d0\u4e2a $\\epsilon>0$\uff0c\u6709 $f(n)=O(n^{log_ba-\\epsilon})$\uff0c\u5219 $T(n)=\\Theta(n^{log_ba})$ \u2003\u2461 \u82e5 $f(n)=O(n^{log_ba})$\uff0c\u5219 $T(n)=\\Theta(n^{log_ba}\u00b7log_bn)$ \u2003\u2462 \u82e5\u5bf9\u67d0\u4e2a $\\epsilon>0$\uff0c\u6709 $f(n)=\\Omega(n^{log_ba+\\epsilon})$\uff0c\u4e14\u5bf9\u5145\u5206\u5927\u7684 $n$ \u6709 $af(n/b)\\leq cf(n)$\uff0c\u5219 $T(n)=\\Theta(f(n))$","title":"3. \u4e3b\u65b9\u6cd5(master method)"},{"location":"2-ApplicationLayer/2.1/","text":"","title":"2.1"},{"location":"2-ApplicationLayer/2.2/","text":"","title":"2.2"},{"location":"2-ApplicationLayer/2.3/","text":"1.\u5806\u7684\u5b9a\u4e49 (1). \u4e8c\u53c9\u5806\uff1a\u4e00\u4e2a\u7528\u6570\u7ec4\u8868\u793a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811( complete binary tree ) (2). \u6700\u5927\u5806\uff1a\u9664\u4e86\u6839\u7ed3\u70b9\u4ee5\u5916\u7684\u6240\u6709\u7ed3\u70b9 $i$ \u90fd\u6ee1\u8db3 $A[PARENT(i)] \\geq A[i]$ (3). \u6700\u5c0f\u5806\uff1a\u9664\u4e86\u6839\u7ed3\u70b9\u4ee5\u5916\u7684\u6240\u6709\u7ed3\u70b9 $i$ \u90fd\u6ee1\u8db3 $A[PARENT(i)] \\leq A[i]$ (4). \u7ed3\u70b9\u7684\u9ad8\u5ea6\uff1a\u8be5\u7ed3\u70b9\u5230\u53f6\u7ed3\u70b9\u6700\u957f\u7b80\u5355\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u76ee (5). \u5806\u7684\u9ad8\u5ea6\uff1a\u6839\u7ed3\u70b9\u7684\u9ad8\u5ea6 2.\u57fa\u672c\u64cd\u4f5c \u2460 MAX-HEAPIFY(A, i) : \u2003\u5047\u8bbe\u5f53\u524d\u5806\u4ee5 LEFT(i) \u548c RIGHT(i) \u4e3a\u6839\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u90fd\u662f\u6700\u5927\u5806\uff0c A[i] \u4e0e\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u7684\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u8be5\u64cd\u4f5c\u7528\u4e8e\u7ef4\u62a4\u6700\u5927\u5806\u7684\u6027\u8d28\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void MaxHeapify ( Heap * H , int i ) { int father = i ; int child = 2 * i ; int root = H -> A [ i ]; while ( child <= H -> size ) { if ( child < H -> size && H -> A [ child ] < H -> A [ child + 1 ]) { child ++ ; } if ( H -> A [ child ] < root ) { break ; } H -> A [ father ] = H -> A [ child ]; father = child ; child *= 2 ; } H -> A [ father ] = root ; } $T(n)=O(lgn)=O(h)$ \u2461 BUILD-MAX-HEAP(A) : \u2003\u5efa\u5806 1 2 3 4 5 6 void BuildMaxHeap ( Heap * H ) { int i ; for ( i = H -> size / 2 ; i >= 1 ; i -- ) { MaxHeapify ( H , i ); } } \u81ea\u5e95\u5411\u4e0a\uff0c\u8fed\u4ee3\u901a\u8fc7 MaxHeapify(A, i) \u8c03\u6574\u6700\u5927\u5806\u3002 $T(n)=O(n)$\uff0c\u6700\u5927\u8c03\u6574\u6b21\u6570\u4e3a\u5404\u7ed3\u70b9\u9ad8\u5ea6\u548c\u3002 \u2462 HEAP-INCREASE-KEY(A, i, key) : \u2003\u589e\u5927\u5806\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c\u3002\u56e0\u4e3a\u589e\u5927 A[i] \u540e\uff0c\u6700\u5927\u5806\u7684\u6027\u8d28\u53ef\u80fd\u88ab\u8fdd\u80cc\uff0c\u5728\u5176\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u4e0a\u4e0d\u65ad\u4e0e\u5176\u7236\u7ed3\u70b9\u6bd4\u8f83\u5e76\u4ea4\u6362\uff0c\u5bfb\u627e\u9002\u5f53\u7684\u63d2\u5165\u4f4d\u7f6e\u3002 1 2 3 4 5 6 7 8 9 10 void HeapIncreaseKey ( Heap * H , int i , int key ) { if ( key < H -> A [ i ]) { printf ( \"error: new key is smaller\" ); } while ( i > 1 && H -> A [ i / 2 ] < key ) { H -> A [ i ] = H -> A [ i / 2 ]; i = i / 2 ; } H -> A [ i ] = key ; } $T(n)=O(lgn)$ 3.\u5806\u6392\u5e8f \u5148\u5efa\u5806\uff0c\u968f\u540e\u4e0d\u65ad\u628a\u5806\u9876\u5143\u7d20\u4ea4\u6362\u5230\u672b\u5c3e\u3001\u7f29\u5c0f\u5806\u5e76\u8c03\u6574\uff0c\u76f4\u5230\u6392\u597d\u5e8f\u3002 1 2 3 4 5 6 7 8 9 void HeapSort ( Heap * H ) { BuildMaxHeap ( H ); int i ; for ( i = H -> size ; i >= 2 ; i -- ) { swap ( & H -> A [ i ], & H -> A [ 1 ]); H -> size -- ; MaxHeapify ( H , 1 ); } } \u76f8\u6bd4\u4e8e\u5feb\u901f\u6392\u5e8f\uff0c\u5806\u6392\u5e8f\u65e0\u8bba\u597d\u574f\u60c5\u51b5\uff0c\u590d\u6742\u5ea6\u90fd\u662f $O(nlgn)$\uff0c\u4f46\u662f\u5b83\u7684\u590d\u6742\u5ea6\u4e2d\u7684\u5e38\u6570\u8f83\u5927\uff0c\u56e0\u6b64\u901a\u5e38\u6bd4\u5feb\u6392\u6162\u3002 \u5806\u6392\u5e8f\u7684\u7279\u70b9\uff1a \u2460 \u5806\u6392\u5e8f\u4e0d\u7a33\u5b9a \u2461 \u5bf9\u7f13\u5b58\u4e0d\u53cb\u597d \u2462 \u65e0\u6240\u8c13\u6700\u597d\u3001\u6700\u574f\u3001\u5e73\u5747\uff0c\u8fd0\u884c\u65f6\u95f4\u4e3a $O(nlgn)$ (\u5f53\u6240\u6709\u5143\u7d20\u76f8\u540c\u65f6\u4e3a $O(n)$) 4.\u4f18\u5148\u961f\u5217( priority queue ) \u4e00\u4e2a\u6700\u5927\u4f18\u5148\u961f\u5217\u5e94\u6709\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u2003\u2460 INSERT(S, x) : \u628a\u5143\u7d20 x \u63d2\u5165\u96c6\u5408 S \u3002 \u2003\u2461 MAXIMUM(S) : \u8fd4\u56de S \u4e2d\u5177\u6709\u6700\u5927\u5173\u952e\u5b57\u7684\u5143\u7d20\u3002 \u2003\u2462 EXTRACT-MAX(S) : \u53bb\u6389\u5e76\u8fd4\u56de S \u4e2d\u6700\u5927\u5173\u952e\u5b57\u5143\u7d20\u3002 \u2003\u2463 INCREASE-KEY(s, x, k) : \u628a x \u7684\u503c\u589e\u52a0\u5230 k \u3002 1 2 3 4 5 void MaxHeapInsert ( Heap * H , int key ) { H -> size ++ ; H -> A [ H -> size ] = - INF ; HeapIncreaseKey ( H , H -> size , key ); } $T(n)=O(lgn)$ 1 2 3 4 5 6 7 8 9 10 int HeapExtractMax ( Heap * H ) { if ( H -> size < 1 ) { printf ( \"heap underflow\" ); } int max = H -> A [ 1 ]; H -> A [ 1 ] = H -> A [ H -> size ]; H -> size -- ; MaxHeapify ( H , 1 ); return max ; } $T(n)=O(lgn)$","title":"2.3"},{"location":"2-ApplicationLayer/2.3/#1","text":"(1). \u4e8c\u53c9\u5806\uff1a\u4e00\u4e2a\u7528\u6570\u7ec4\u8868\u793a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811( complete binary tree ) (2). \u6700\u5927\u5806\uff1a\u9664\u4e86\u6839\u7ed3\u70b9\u4ee5\u5916\u7684\u6240\u6709\u7ed3\u70b9 $i$ \u90fd\u6ee1\u8db3 $A[PARENT(i)] \\geq A[i]$ (3). \u6700\u5c0f\u5806\uff1a\u9664\u4e86\u6839\u7ed3\u70b9\u4ee5\u5916\u7684\u6240\u6709\u7ed3\u70b9 $i$ \u90fd\u6ee1\u8db3 $A[PARENT(i)] \\leq A[i]$ (4). \u7ed3\u70b9\u7684\u9ad8\u5ea6\uff1a\u8be5\u7ed3\u70b9\u5230\u53f6\u7ed3\u70b9\u6700\u957f\u7b80\u5355\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u76ee (5). \u5806\u7684\u9ad8\u5ea6\uff1a\u6839\u7ed3\u70b9\u7684\u9ad8\u5ea6","title":"1.\u5806\u7684\u5b9a\u4e49"},{"location":"2-ApplicationLayer/2.3/#2","text":"\u2460 MAX-HEAPIFY(A, i) : \u2003\u5047\u8bbe\u5f53\u524d\u5806\u4ee5 LEFT(i) \u548c RIGHT(i) \u4e3a\u6839\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u90fd\u662f\u6700\u5927\u5806\uff0c A[i] \u4e0e\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u7684\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u8be5\u64cd\u4f5c\u7528\u4e8e\u7ef4\u62a4\u6700\u5927\u5806\u7684\u6027\u8d28\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void MaxHeapify ( Heap * H , int i ) { int father = i ; int child = 2 * i ; int root = H -> A [ i ]; while ( child <= H -> size ) { if ( child < H -> size && H -> A [ child ] < H -> A [ child + 1 ]) { child ++ ; } if ( H -> A [ child ] < root ) { break ; } H -> A [ father ] = H -> A [ child ]; father = child ; child *= 2 ; } H -> A [ father ] = root ; } $T(n)=O(lgn)=O(h)$ \u2461 BUILD-MAX-HEAP(A) : \u2003\u5efa\u5806 1 2 3 4 5 6 void BuildMaxHeap ( Heap * H ) { int i ; for ( i = H -> size / 2 ; i >= 1 ; i -- ) { MaxHeapify ( H , i ); } } \u81ea\u5e95\u5411\u4e0a\uff0c\u8fed\u4ee3\u901a\u8fc7 MaxHeapify(A, i) \u8c03\u6574\u6700\u5927\u5806\u3002 $T(n)=O(n)$\uff0c\u6700\u5927\u8c03\u6574\u6b21\u6570\u4e3a\u5404\u7ed3\u70b9\u9ad8\u5ea6\u548c\u3002 \u2462 HEAP-INCREASE-KEY(A, i, key) : \u2003\u589e\u5927\u5806\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c\u3002\u56e0\u4e3a\u589e\u5927 A[i] \u540e\uff0c\u6700\u5927\u5806\u7684\u6027\u8d28\u53ef\u80fd\u88ab\u8fdd\u80cc\uff0c\u5728\u5176\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u4e0a\u4e0d\u65ad\u4e0e\u5176\u7236\u7ed3\u70b9\u6bd4\u8f83\u5e76\u4ea4\u6362\uff0c\u5bfb\u627e\u9002\u5f53\u7684\u63d2\u5165\u4f4d\u7f6e\u3002 1 2 3 4 5 6 7 8 9 10 void HeapIncreaseKey ( Heap * H , int i , int key ) { if ( key < H -> A [ i ]) { printf ( \"error: new key is smaller\" ); } while ( i > 1 && H -> A [ i / 2 ] < key ) { H -> A [ i ] = H -> A [ i / 2 ]; i = i / 2 ; } H -> A [ i ] = key ; } $T(n)=O(lgn)$","title":"2.\u57fa\u672c\u64cd\u4f5c"},{"location":"2-ApplicationLayer/2.3/#3","text":"\u5148\u5efa\u5806\uff0c\u968f\u540e\u4e0d\u65ad\u628a\u5806\u9876\u5143\u7d20\u4ea4\u6362\u5230\u672b\u5c3e\u3001\u7f29\u5c0f\u5806\u5e76\u8c03\u6574\uff0c\u76f4\u5230\u6392\u597d\u5e8f\u3002 1 2 3 4 5 6 7 8 9 void HeapSort ( Heap * H ) { BuildMaxHeap ( H ); int i ; for ( i = H -> size ; i >= 2 ; i -- ) { swap ( & H -> A [ i ], & H -> A [ 1 ]); H -> size -- ; MaxHeapify ( H , 1 ); } } \u76f8\u6bd4\u4e8e\u5feb\u901f\u6392\u5e8f\uff0c\u5806\u6392\u5e8f\u65e0\u8bba\u597d\u574f\u60c5\u51b5\uff0c\u590d\u6742\u5ea6\u90fd\u662f $O(nlgn)$\uff0c\u4f46\u662f\u5b83\u7684\u590d\u6742\u5ea6\u4e2d\u7684\u5e38\u6570\u8f83\u5927\uff0c\u56e0\u6b64\u901a\u5e38\u6bd4\u5feb\u6392\u6162\u3002 \u5806\u6392\u5e8f\u7684\u7279\u70b9\uff1a \u2460 \u5806\u6392\u5e8f\u4e0d\u7a33\u5b9a \u2461 \u5bf9\u7f13\u5b58\u4e0d\u53cb\u597d \u2462 \u65e0\u6240\u8c13\u6700\u597d\u3001\u6700\u574f\u3001\u5e73\u5747\uff0c\u8fd0\u884c\u65f6\u95f4\u4e3a $O(nlgn)$ (\u5f53\u6240\u6709\u5143\u7d20\u76f8\u540c\u65f6\u4e3a $O(n)$)","title":"3.\u5806\u6392\u5e8f"},{"location":"2-ApplicationLayer/2.3/#4priority-queue","text":"\u4e00\u4e2a\u6700\u5927\u4f18\u5148\u961f\u5217\u5e94\u6709\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u2003\u2460 INSERT(S, x) : \u628a\u5143\u7d20 x \u63d2\u5165\u96c6\u5408 S \u3002 \u2003\u2461 MAXIMUM(S) : \u8fd4\u56de S \u4e2d\u5177\u6709\u6700\u5927\u5173\u952e\u5b57\u7684\u5143\u7d20\u3002 \u2003\u2462 EXTRACT-MAX(S) : \u53bb\u6389\u5e76\u8fd4\u56de S \u4e2d\u6700\u5927\u5173\u952e\u5b57\u5143\u7d20\u3002 \u2003\u2463 INCREASE-KEY(s, x, k) : \u628a x \u7684\u503c\u589e\u52a0\u5230 k \u3002 1 2 3 4 5 void MaxHeapInsert ( Heap * H , int key ) { H -> size ++ ; H -> A [ H -> size ] = - INF ; HeapIncreaseKey ( H , H -> size , key ); } $T(n)=O(lgn)$ 1 2 3 4 5 6 7 8 9 10 int HeapExtractMax ( Heap * H ) { if ( H -> size < 1 ) { printf ( \"heap underflow\" ); } int max = H -> A [ 1 ]; H -> A [ 1 ] = H -> A [ H -> size ]; H -> size -- ; MaxHeapify ( H , 1 ); return max ; } $T(n)=O(lgn)$","title":"4.\u4f18\u5148\u961f\u5217(priority queue)"},{"location":"2-ApplicationLayer/2.4/","text":"1. \u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u63cf\u8ff0 \u2460 QUICKSORT(A, l, r) : \u2003\u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\u5206\u6cbb\u3002 1 2 3 4 5 6 7 void QuickSort ( int A [], int left , int right ) { if ( left < right ) { int i = partition ( A , left , right ); QuickSort ( A , left , i - 1 ); QuickSort ( A , i + 1 , right ); } } \u2461 PARTITION(A, l, r) : \u5feb\u901f\u6392\u5e8f\u7684\u6838\u5fc3\u662f\u5212\u5206\u7684\u8fc7\u7a0b\uff0c\u9996\u5148\u9009\u53d6\u4e3b\u5143( pivot element )\uff0c\u901a\u8fc7\u4e3b\u5143\u518d\u628a\u6392\u5217\u5212\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u4ee5\u4e0b\u4ee3\u7801\u4ee5 pivot=A[r] \u4e3a\u4f8b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 int partition ( int A [], int left , int right ) { int pivot = A [ right ]; int i = left - 1 ; int j ; for ( j = left ; j <= right - 1 ; j ++ ) { if ( A [ j ] <= pivot ) { i ++ ; swap ( & A [ i ], & A [ j ]); } } swap ( & A [ i + 1 ], & A [ right ]); return i + 1 ; } \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u6570\u7ec4\u88ab\u5212\u5206\u4e3a\u56db\u4e2a\u533a\u57df\uff0c\u6bcf\u4e00\u4e2a\u533a\u57df\u90fd\u6ee1\u8db3\u4e00\u5b9a\u6027\u8d28\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5faa\u73af\u4e0d\u53d8\u91cf\u3002 \u6bcf\u4e00\u8f6e\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u5bf9\u4efb\u610f\u6570\u7ec4\u4e0b\u6807 k \uff0c\u6709\uff1a \u20031. \u82e5 l \u2264 k \u2264 i \uff0c\u5219 A[k] \u2264 pivot \u3002 \u20032. \u82e5 i + 1 \u2264 k \u2264 j - 1 \uff0c\u5219 A[k] > pivot \u3002 2. \u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5206\u6790 (1). \u6700\u574f\u60c5\u51b5 \u2003\u5f53\u5212\u5206\u4ea7\u751f\u7684\u4e24\u4e2a\u5b50\u95ee\u9898\u5206\u522b\u5305\u542bn-1\u4e2a\u5143\u7d20\u548c0\u4e2a\u5143\u7d20\u65f6\uff0c$T(0)=\\Theta(1)$\uff0c\u56e0\u6b64\u6709\uff1a $T(n)=T(n-1)+\\Theta(n)$\uff0c\u76f4\u89c2\u4e0a\u6765\u770b\uff0c\u590d\u6742\u5ea6\u7684\u7ed3\u679c\u4e3a\u7ea7\u6570\u7684\u548c\uff0c\u5373 $\\Theta(n^2)$\u3002 (2). \u5e73\u8861\u5212\u5206 \u2003\u5728\u53ef\u80fd\u6700\u5e73\u8861\u7684\u5212\u5206\u4e2d\uff0c\u4e24\u4e2a\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u5206\u522b\u4e3a $\\lfloor n/2 \\rfloor$ \u548c $\\lceil n/2 \\rceil-1$\uff0c\u4e8e\u662f\u6709\u9012\u5f52\u5f0f\uff1a$T(n)=2T(n/2)+\\Theta(n)$\uff0c\u89e3\u4e3a $T(n)=\\Theta(nlgn)$\u3002 \u2003\u5b9e\u9645\u4e0a\uff0c\u5feb\u6392\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u66f4\u63a5\u8fd1\u6700\u597d\u60c5\u51b5\u800c\u975e\u6700\u574f\u60c5\u51b5\u3002 \u2003\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u5e38\u6570\u6bd4\u4f8b\u7684\u5212\u5206\uff0c\u5feb\u6392\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(nlgn)$\u3002\u4ee5 $T(n)=T(9n/10)+T(n/10)+cn$ \u4e3a\u4f8b\uff0c\u753b\u51fa\u9012\u5f52\u6811\u53ef\u5f97\u6bcf\u5c42\u7684\u4ee3\u4ef7\u90fd\u662f $cn$ \uff0c\u5176\u6df1\u5ea6\u4e3a $log_{10/9}n$\u3002 (3). \u968f\u673a\u5316\u5feb\u901f\u6392\u5e8f\u5206\u6790 \u968f\u673a\u5316\u5feb\u901f\u6392\u5e8f\uff0c\u5373\u4e3b\u5143\u968f\u673a\u9009\u53d6 1 2 3 4 RANDOMIZED - PARTITION ( A , left , right ) i = RANDOM ( left , right ) exchange A [ right ] with A [ i ] return PARTITION ( A , left , right ) \u63a8\u5bfc\u524d\u7684\u51c6\u5907\uff1a \u2460 \u5f53\u5728\u5143\u7d20\u4e2a\u6570\u4e3a n \u7684\u6570\u7ec4\u4e0a\u8fd0\u884c QUICKSORT \u65f6\uff0c\u5047\u8bbe\u5728 PARTITION \u5904\u7684\u6bd4\u8f83\u6b21\u6570\u4e3a $X$\uff0c\u5219 QUICKSORT \u7684\u8fd0\u884c\u65f6\u95f4\u4e3a $O(n+X)$\u3002 \u2003- \u81f3\u591a\u8c03\u7528 PARTITION $n$ \u6b21\uff0c\u8c03\u7528\u65f6\u95f4\u4e3a $O(n)$ \u52a0\u4e0a\u8fed\u4ee3\u65f6\u95f4(\u6bd4\u8f83\u6b21\u6570)\u3002 \u2461 \u6bcf\u4e2a\u5143\u7d20\u53ea\u53ef\u80fd\u4e0e\u4e3b\u5143\u6bd4\u8f83\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4e00\u5bf9\u5143\u7d20\uff0c\u5b83\u4eec\u81f3\u591a\u6bd4\u8f83\u4e00\u6b21 \u2462 \u4e00\u65e6\u4e3b\u5143 $z_i<pivot<z_j$ \u88ab\u9009\u62e9\uff0c\u88ab\u5212\u5206\u7684 $z_i$ \u4e0e $z_j$ \u4e0d\u53ef\u80fd\u518d\u6bd4\u8f83(\u5047\u8bbe\u6bcf\u4e2a\u5143\u7d20\u4e92\u5f02) \u63a8\u5bfc\uff1a \u2003\u8bbe $X_{ij}= \\begin{cases} 1& if\\ z_i\\ compares\\ with\\ z_j\\\\ 0& else \\end{cases}$\uff0c$X= \\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1} X_{ij}$ \u2003\u5219\u6709 $$\\begin{aligned} E(X)=E[\\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1} X_{ij}]&=\\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1}P(\\lbrace z_i\\text{\u4e0e}z_j\\text{\u6bd4\u8f83}\\rbrace) \\\\ &=\\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1}P(\\lbrace z_i\\text{\u6216}z_j\\text{\u662f\u96c6\u5408}Z_{ij}\u4e2d\u9009\u51fa\u7684\u7b2c\u4e00\u4e2a\u4e3b\u5143\\rbrace) \\\\ &=\\sum\\sum(\\frac{1}{j+i-1}+\\frac{1}{j+i-1})=\\sum\\frac{2}{j+i-1} \\\\ &< \\sum_{i=1}^{n-1}\\sum_{n}^{k=1} \\frac{2}{k}=O(nlgn) \\end{aligned}$$ \u2003\u6545\u5f97\u51fa\u7ed3\u8bba\uff1a\u4f7f\u7528\u968f\u673a\u5316\u5feb\u901f\u6392\u5e8f\uff0c\u5728\u8f93\u5165\u5143\u7d20\u4e92\u5f02\u7684\u60c5\u51b5\u4e0b\uff0c\u5feb\u6392\u7684\u671f\u671b\u8fd0\u884c\u65f6\u95f4\u4e3a $O(nlgn)$\u3002 (4). \u5feb\u6392\u7279\u70b9 \u2460 \u671f\u671b\u590d\u6742\u5ea6\u4e3a $\\Theta(nlgn)$\uff0c\u4e0e\u5806\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u76f8\u540c\uff0c\u4f46\u5176\u5e38\u6570\u66f4\u5c0f\uff0c\u901f\u5ea6\u66f4\u5feb \u2461 \u5feb\u6392\u662f\u4e0d\u7a33\u5b9a\u7684 3. \u4e09\u6570\u53d6\u4e2d\u5212\u5206 \u4ece\u5b50\u6570\u7ec4\u4e2d\u968f\u673a\u9009\u53d6\u4e09\u4e2a\u5143\u7d20\uff0c\u53d6\u5176\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u4e3b\u5143\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 int median3 ( int A [], int left , int right ) { int center = ( left + right ) / 2 ; if ( A [ left ] > A [ right ]) { swap ( & A [ left ], & A [ right ]); } if ( A [ left ] > A [ center ]) { swap ( & A [ left ], & A [ center ]); } if ( A [ center ] > A [ right ]) { swap ( & A [ center ], & A [ right ]); } swap ( & A [ center ], & A [ right - 1 ]); return A [ right - 1 ]; } \u5728\u4ee3\u7801\u4e0a\uff0c\u8981\u6ce8\u610f\u5f53\u95ee\u9898\u89c4\u6a21\u4e3a2\u65f6\u8981\u5355\u72ec\u8003\u8651\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 void QuickSort ( int A [], int left , int right ) { if ( right > left + 1 ) { int pivot = median3 ( A , left , right ); int i = left ; int j = right - 1 ; while ( 1 ) { while ( A [ ++ i ] < pivot ){ } // less or equal cannot fit that the pivot needn`t move while ( A [ -- j ] > pivot ){ } // for i should stop at the pivot if ( j > i ) swap ( & A [ i ], & A [ j ]); else break ; } swap ( & A [ i ], & A [ right - 1 ]); QuickSort ( A , left , i - 1 ); QuickSort ( A , i + 1 , right ); } else { if ( A [ right ] < A [ left ]) { swap ( & A [ right ], & A [ left ]); } } }","title":"2.4"},{"location":"2-ApplicationLayer/2.4/#1","text":"\u2460 QUICKSORT(A, l, r) : \u2003\u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\u5206\u6cbb\u3002 1 2 3 4 5 6 7 void QuickSort ( int A [], int left , int right ) { if ( left < right ) { int i = partition ( A , left , right ); QuickSort ( A , left , i - 1 ); QuickSort ( A , i + 1 , right ); } } \u2461 PARTITION(A, l, r) : \u5feb\u901f\u6392\u5e8f\u7684\u6838\u5fc3\u662f\u5212\u5206\u7684\u8fc7\u7a0b\uff0c\u9996\u5148\u9009\u53d6\u4e3b\u5143( pivot element )\uff0c\u901a\u8fc7\u4e3b\u5143\u518d\u628a\u6392\u5217\u5212\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u4ee5\u4e0b\u4ee3\u7801\u4ee5 pivot=A[r] \u4e3a\u4f8b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 int partition ( int A [], int left , int right ) { int pivot = A [ right ]; int i = left - 1 ; int j ; for ( j = left ; j <= right - 1 ; j ++ ) { if ( A [ j ] <= pivot ) { i ++ ; swap ( & A [ i ], & A [ j ]); } } swap ( & A [ i + 1 ], & A [ right ]); return i + 1 ; } \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u6570\u7ec4\u88ab\u5212\u5206\u4e3a\u56db\u4e2a\u533a\u57df\uff0c\u6bcf\u4e00\u4e2a\u533a\u57df\u90fd\u6ee1\u8db3\u4e00\u5b9a\u6027\u8d28\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5faa\u73af\u4e0d\u53d8\u91cf\u3002 \u6bcf\u4e00\u8f6e\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u5bf9\u4efb\u610f\u6570\u7ec4\u4e0b\u6807 k \uff0c\u6709\uff1a \u20031. \u82e5 l \u2264 k \u2264 i \uff0c\u5219 A[k] \u2264 pivot \u3002 \u20032. \u82e5 i + 1 \u2264 k \u2264 j - 1 \uff0c\u5219 A[k] > pivot \u3002","title":"1. \u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u63cf\u8ff0"},{"location":"2-ApplicationLayer/2.4/#2","text":"","title":"2. \u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5206\u6790"},{"location":"2-ApplicationLayer/2.4/#1_1","text":"\u5f53\u5212\u5206\u4ea7\u751f\u7684\u4e24\u4e2a\u5b50\u95ee\u9898\u5206\u522b\u5305\u542bn-1\u4e2a\u5143\u7d20\u548c0\u4e2a\u5143\u7d20\u65f6\uff0c$T(0)=\\Theta(1)$\uff0c\u56e0\u6b64\u6709\uff1a $T(n)=T(n-1)+\\Theta(n)$\uff0c\u76f4\u89c2\u4e0a\u6765\u770b\uff0c\u590d\u6742\u5ea6\u7684\u7ed3\u679c\u4e3a\u7ea7\u6570\u7684\u548c\uff0c\u5373 $\\Theta(n^2)$\u3002","title":"(1). \u6700\u574f\u60c5\u51b5"},{"location":"2-ApplicationLayer/2.4/#2_1","text":"\u5728\u53ef\u80fd\u6700\u5e73\u8861\u7684\u5212\u5206\u4e2d\uff0c\u4e24\u4e2a\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u5206\u522b\u4e3a $\\lfloor n/2 \\rfloor$ \u548c $\\lceil n/2 \\rceil-1$\uff0c\u4e8e\u662f\u6709\u9012\u5f52\u5f0f\uff1a$T(n)=2T(n/2)+\\Theta(n)$\uff0c\u89e3\u4e3a $T(n)=\\Theta(nlgn)$\u3002 \u2003\u5b9e\u9645\u4e0a\uff0c\u5feb\u6392\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u66f4\u63a5\u8fd1\u6700\u597d\u60c5\u51b5\u800c\u975e\u6700\u574f\u60c5\u51b5\u3002 \u2003\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u5e38\u6570\u6bd4\u4f8b\u7684\u5212\u5206\uff0c\u5feb\u6392\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(nlgn)$\u3002\u4ee5 $T(n)=T(9n/10)+T(n/10)+cn$ \u4e3a\u4f8b\uff0c\u753b\u51fa\u9012\u5f52\u6811\u53ef\u5f97\u6bcf\u5c42\u7684\u4ee3\u4ef7\u90fd\u662f $cn$ \uff0c\u5176\u6df1\u5ea6\u4e3a $log_{10/9}n$\u3002","title":"(2). \u5e73\u8861\u5212\u5206"},{"location":"2-ApplicationLayer/2.4/#3","text":"\u968f\u673a\u5316\u5feb\u901f\u6392\u5e8f\uff0c\u5373\u4e3b\u5143\u968f\u673a\u9009\u53d6 1 2 3 4 RANDOMIZED - PARTITION ( A , left , right ) i = RANDOM ( left , right ) exchange A [ right ] with A [ i ] return PARTITION ( A , left , right ) \u63a8\u5bfc\u524d\u7684\u51c6\u5907\uff1a \u2460 \u5f53\u5728\u5143\u7d20\u4e2a\u6570\u4e3a n \u7684\u6570\u7ec4\u4e0a\u8fd0\u884c QUICKSORT \u65f6\uff0c\u5047\u8bbe\u5728 PARTITION \u5904\u7684\u6bd4\u8f83\u6b21\u6570\u4e3a $X$\uff0c\u5219 QUICKSORT \u7684\u8fd0\u884c\u65f6\u95f4\u4e3a $O(n+X)$\u3002 \u2003- \u81f3\u591a\u8c03\u7528 PARTITION $n$ \u6b21\uff0c\u8c03\u7528\u65f6\u95f4\u4e3a $O(n)$ \u52a0\u4e0a\u8fed\u4ee3\u65f6\u95f4(\u6bd4\u8f83\u6b21\u6570)\u3002 \u2461 \u6bcf\u4e2a\u5143\u7d20\u53ea\u53ef\u80fd\u4e0e\u4e3b\u5143\u6bd4\u8f83\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4e00\u5bf9\u5143\u7d20\uff0c\u5b83\u4eec\u81f3\u591a\u6bd4\u8f83\u4e00\u6b21 \u2462 \u4e00\u65e6\u4e3b\u5143 $z_i<pivot<z_j$ \u88ab\u9009\u62e9\uff0c\u88ab\u5212\u5206\u7684 $z_i$ \u4e0e $z_j$ \u4e0d\u53ef\u80fd\u518d\u6bd4\u8f83(\u5047\u8bbe\u6bcf\u4e2a\u5143\u7d20\u4e92\u5f02) \u63a8\u5bfc\uff1a \u2003\u8bbe $X_{ij}= \\begin{cases} 1& if\\ z_i\\ compares\\ with\\ z_j\\\\ 0& else \\end{cases}$\uff0c$X= \\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1} X_{ij}$ \u2003\u5219\u6709 $$\\begin{aligned} E(X)=E[\\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1} X_{ij}]&=\\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1}P(\\lbrace z_i\\text{\u4e0e}z_j\\text{\u6bd4\u8f83}\\rbrace) \\\\ &=\\sum_{i=1}^{n-1}\\sum_{n}^{j=i+1}P(\\lbrace z_i\\text{\u6216}z_j\\text{\u662f\u96c6\u5408}Z_{ij}\u4e2d\u9009\u51fa\u7684\u7b2c\u4e00\u4e2a\u4e3b\u5143\\rbrace) \\\\ &=\\sum\\sum(\\frac{1}{j+i-1}+\\frac{1}{j+i-1})=\\sum\\frac{2}{j+i-1} \\\\ &< \\sum_{i=1}^{n-1}\\sum_{n}^{k=1} \\frac{2}{k}=O(nlgn) \\end{aligned}$$ \u2003\u6545\u5f97\u51fa\u7ed3\u8bba\uff1a\u4f7f\u7528\u968f\u673a\u5316\u5feb\u901f\u6392\u5e8f\uff0c\u5728\u8f93\u5165\u5143\u7d20\u4e92\u5f02\u7684\u60c5\u51b5\u4e0b\uff0c\u5feb\u6392\u7684\u671f\u671b\u8fd0\u884c\u65f6\u95f4\u4e3a $O(nlgn)$\u3002","title":"(3). \u968f\u673a\u5316\u5feb\u901f\u6392\u5e8f\u5206\u6790"},{"location":"2-ApplicationLayer/2.4/#4","text":"\u2460 \u671f\u671b\u590d\u6742\u5ea6\u4e3a $\\Theta(nlgn)$\uff0c\u4e0e\u5806\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u76f8\u540c\uff0c\u4f46\u5176\u5e38\u6570\u66f4\u5c0f\uff0c\u901f\u5ea6\u66f4\u5feb \u2461 \u5feb\u6392\u662f\u4e0d\u7a33\u5b9a\u7684","title":"(4). \u5feb\u6392\u7279\u70b9"},{"location":"2-ApplicationLayer/2.4/#3_1","text":"\u4ece\u5b50\u6570\u7ec4\u4e2d\u968f\u673a\u9009\u53d6\u4e09\u4e2a\u5143\u7d20\uff0c\u53d6\u5176\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u4e3b\u5143\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 int median3 ( int A [], int left , int right ) { int center = ( left + right ) / 2 ; if ( A [ left ] > A [ right ]) { swap ( & A [ left ], & A [ right ]); } if ( A [ left ] > A [ center ]) { swap ( & A [ left ], & A [ center ]); } if ( A [ center ] > A [ right ]) { swap ( & A [ center ], & A [ right ]); } swap ( & A [ center ], & A [ right - 1 ]); return A [ right - 1 ]; } \u5728\u4ee3\u7801\u4e0a\uff0c\u8981\u6ce8\u610f\u5f53\u95ee\u9898\u89c4\u6a21\u4e3a2\u65f6\u8981\u5355\u72ec\u8003\u8651\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 void QuickSort ( int A [], int left , int right ) { if ( right > left + 1 ) { int pivot = median3 ( A , left , right ); int i = left ; int j = right - 1 ; while ( 1 ) { while ( A [ ++ i ] < pivot ){ } // less or equal cannot fit that the pivot needn`t move while ( A [ -- j ] > pivot ){ } // for i should stop at the pivot if ( j > i ) swap ( & A [ i ], & A [ j ]); else break ; } swap ( & A [ i ], & A [ right - 1 ]); QuickSort ( A , left , i - 1 ); QuickSort ( A , i + 1 , right ); } else { if ( A [ right ] < A [ left ]) { swap ( & A [ right ], & A [ left ]); } } }","title":"3. \u4e09\u6570\u53d6\u4e2d\u5212\u5206"},{"location":"2-ApplicationLayer/2.5/","text":"1. \u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c \u2003\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u90fd\u53ef\u4ee5\u88ab\u62bd\u8c61\u4e3a\u4e00\u68f5\u51b3\u7b56\u6811( decision tree )\uff0c\u4e0b\u56fe\u4e3a\u4e09\u4e2a\u5143\u7d20\u7684\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u7684\u51b3\u7b56\u6811\u3002\u5728\u51b3\u7b56\u6811\u4e2d\uff0c\u4ece\u6839\u7ed3\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u53ef\u8fbe\u53f6\u7ed3\u70b9\u4e2d\u6700\u957f\u7b80\u5355\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u8868\u793a\u5bf9\u5e94\u6392\u5e8f\u7b97\u6cd5\u4e2d\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6bd4\u8f83\u6b21\u6570\uff0c\u5373\u51b3\u7b56\u6811\u7684\u9ad8\u5ea6\uff1b\u8f93\u5165\u89c4\u6a21 $n$ \u5bf9\u5e94\u7684 $n!$ \u4e2d\u6392\u5217\u81f3\u5c11\u90fd\u5e94\u8be5\u51fa\u73b0\u5728\u51b3\u7b56\u6811\u7684\u53f6\u7ed3\u70b9\u4e2d\u3002\u56e0\u6b64\uff0c\u51b3\u7b56\u6811\u9ad8\u5ea6\u7684\u4e0b\u754c\u5c31\u662f\u6bd4\u8f83\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u7684\u4e0b\u754c\u3002 \u2003 \u5b9a\u7406\uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u90fd\u9700\u8981\u505a $\\Omega(nlgn)$ \u6b21\u6bd4\u8f83\u3002 \u2003 \u8bbe\u51b3\u7b56\u6811\u9ad8\u4e3a $h$, \u5177\u6709 $l$ \u4e2a\u53ef\u8fbe\u7684\u53f6\u7ed3\u70b9\u3002\u7531 $n!\\leq l\\leq 2^h$\uff0c\u6211\u4eec\u6709 $h\\geq lg(n!)=\\Omega(nlgn)$ \u2003\u7531\u6b64\uff0c\u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u90fd\u662f\u6e10\u8fdb\u6700\u4f18\u7684\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u3002\u4e0b\u9762\u7684\u6392\u5e8f\u7b97\u6cd5\u90fd\u662f\u7ebf\u6027\u65f6\u95f4\uff0c\u4f46\u5b83\u4eec\u90fd\u4f9d\u8d56\u4e8e\u7ed9\u5b9a\u7684\u8f93\u5165\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u3002 2. \u8ba1\u6570\u6392\u5e8f \u2003\u5047\u8bbe $n$ \u4e2a\u5143\u7d20\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u662f\u5728 $[0,\\ k)$ \u4e4b\u95f4\u7684\u6574\u6570\uff0c\u5f53 $k=O(n)$ \u65f6\uff0c\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(n)$\u3002 \u2003 COUNTING-SORT(A, B, k) : A \u4e3a\u5f85\u6392\u5e8f\u6570\u7ec4\uff0c B \u4e3a\u7ed3\u679c\u6570\u7ec4\uff0c k \u4e3a\u6574\u6570\u8303\u56f4\u3002\u9996\u5148\u5728\u4e34\u65f6\u6570\u7ec4 C \u4e2d\u7edf\u8ba1\u5c0f\u4e8e\u7b49\u4e8e\u76f8\u5e94\u4e0b\u6807\u7684\u5bf9\u5e94\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6839\u636e\u5176\u786e\u5b9a A \u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void CountingSort ( int A [], int B [], int k , int len ) { int C [ k ]; int i ; for ( i = 0 ; i < k ; i ++ ) { C [ i ] = 0 ; } for ( i = 0 ; i < len ; i ++ ) { C [ A [ i ]] ++ ; } for ( i = 1 ; i < k ; i ++ ) { C [ i ] += C [ i - 1 ]; } for ( i = len - 1 ; i >= 0 ; i -- ) { B [ C [ A [ i ]] - 1 ] = A [ i ]; C [ A [ i ]] -- ; } } \u2003\u8ba1\u6570\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u662f\u5b83\u662f\u7a33\u5b9a\u7684\u3002\u5404\u5143\u7d20\u4e2a\u6570\u5df2\u77e5\uff0c\u53ef\u4ee5\u63a7\u5236\u5176\u76f8\u5bf9\u6b21\u5e8f\u4e0d\u6539\u53d8\u3002 3. \u57fa\u6570\u6392\u5e8f \u2003 RADIX-SORT(A, d) : \u4ece\u6700\u4f4e\u6709\u6548\u4f4d\u5f00\u59cb\uff0c\u5bf9\u6bcf\u4e2a\u6570\u6309\u7167\u6570\u4f4d\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u6b64\u8fed\u4ee3\uff0c\u5176\u4e2d d \u662f\u6570\u5b57\u7684\u4f4d\u6570\u3002\u57fa\u6570\u6392\u5e8f\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5bf9\u4e00\u4f4d\u6570\u7684\u6392\u5e8f\u7b97\u6cd5\u5fc5\u987b\u662f\u7a33\u5b9a\u7684\uff0c\u5728\u6392\u5e8f\u9ad8\u4f4d\u65f6\u624d\u4e0d\u4f1a\u6539\u53d8\u4f4e\u4f4d\u5df2\u786e\u5b9a\u7684\u6b21\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 void RadixSort ( int A [], int d , int len ) { int i ; for ( i = 0 ; i < d ; i ++ ) { CountingSortOnRadix ( A , 10 , len , i ); } } void CountingSortOnRadix ( int A [], int k , int len , int digit ) { int C [ k ]; int B [ len ]; int i ; for ( i = 0 ; i < k ; i ++ ) { C [ i ] = 0 ; } for ( i = 0 ; i < len ; i ++ ) { C [ getDigit ( A [ i ], digit )] ++ ; } for ( i = 1 ; i < k ; i ++ ) { C [ i ] += C [ i - 1 ]; } for ( i = len - 1 ; i >= 0 ; i -- ) { B [ C [ getDigit ( A [ i ], digit )] - 1 ] = A [ i ]; C [ getDigit ( A [ i ], digit )] -- ; } for ( i = 0 ; i < len ; i ++ ) { A [ i ] = B [ i ]; } } int getDigit ( int num , int digit ) { int res = 1 ; int j ; for ( j = 1 ; j <= digit ; j ++ ) { res *= 10 ; } return num / res % 10 ; } \u2003\u7ed9\u5b9a $n$ \u4e2a $d$ \u4f4d\u6570\uff0c\u6bcf\u4e00\u4e2a\u6570\u4f4d\u6709 $k$ \u4e2a\u53ef\u80fd\u7684\u53d6\u503c\uff0c\u5982\u679c\u57fa\u6570\u6392\u5e8f\u6240\u4f7f\u7528\u7684\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u8017\u65f6 $\\Theta(n+k)$\uff0c\u5219\u57fa\u6570\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(d(n+k))$\u3002 \u2003\u66f4\u4e00\u822c\u7684\u6765\u8bf4\uff0c\u7ed9\u5b9a $n$ \u4e2a $b$ \u4f4d\u6570\u4ee5\u53ca\u4e00\u4e2a\u4efb\u610f\u7684\u6b63\u6574\u6570 $r\\leq b$\uff0c\u6bcf\u4e2a\u5173\u952e\u5b57\u53ef\u4ee5\u770b\u505a $d=\\lceil b/r \\rceil$ \u4e2a $r$ \u4f4d\u6570\uff0c\u6bcf\u4e2a\u6570\u4ecb\u4e8e $0$ \u5230 $2^r-1$ \u4e4b\u95f4\u3002\u5219\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta (d(n+k))=\\Theta((b/r)(n+2^r))$\u3002 \u2003\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c $b=O(lgn), r\\approx lgn$\uff0c\u57fa\u6570\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(n)$\u3002\u6bd4\u8d77\u5feb\u901f\u6392\u5e8f\uff0c\u57fa\u6570\u6392\u5e8f\u867d\u7136\u5faa\u73af\u6b21\u6570\u5c11\uff0c\u4f46\u5b83\u6bcf\u6b21\u7684\u64cd\u4f5c\u82b1\u8d39\u65f6\u95f4\u957f\uff0c\u9690\u542b\u7684\u5e38\u6570\u5927\uff0c\u5b83\u4eec\u7684\u6bd4\u8f83\u8fd8\u8981\u53d6\u51b3\u4e8e\u786c\u4ef6\u7279\u6027\u548c\u5177\u4f53\u7684\u6570\u636e\u5206\u5e03\u3002\u5982\u679c\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u5bf9\u5355\u4e2a\u6570\u4f4d\u6392\u5e8f\uff0c\u5219\u57fa\u6570\u6392\u5e8f\u4e0d\u662f\u539f\u5740\u6392\u5e8f\uff0c\u66f4\u52a0\u6d6a\u8d39\u7a7a\u95f4\u3002 4. \u6876\u6392\u5e8f \u2003\u5047\u8bbe\u8f93\u5165\u7684\u6570\u636e\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5219\u5e73\u5747\u60c5\u51b5\u4e0b\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a $O(n)$\u3002 \u2003 BUCKET-SORT(A) : \u628a\u533a\u95f4 $[0,\\ 1]$ \u5341\u7b49\u5206\uff0c\u5e76\u6784\u9020\u4e00\u4e2a\u94fe\u8868\u7684\u6570\u7ec4 $B$ \uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e00\u4e2a\u88ab\u7b49\u5206\u7684\u533a\u95f4\u3002\u5bf9\u6bcf\u4e2a\u94fe\u8868\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u6700\u540e\u5408\u5e76\u94fe\u8868\u5373\u5b8c\u6210\u6392\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 typedef struct node { double val ; struct node * pred ; struct node * succ ; } Node ; // ... Node * BucketSort ( int A [], int len , int maxDigit ) { Node * B [ 10 ]; int i , j ; // init a new empty list of HEADs for ( i = 0 ; i < 10 ; i ++ ) { B [ i ] = ( Node * ) malloc ( sizeof ( Node )); B [ i ] -> pred = B [ i ] -> succ = B [ i ]; } // insert element into circular linked list for ( i = 0 ; i < len ; i ++ ) { double val = A [ i ] / ( double ) maxDigit ; Node * des = B [( int )( val * 10 )]; Node * t = ( Node * ) malloc ( sizeof ( Node )); t -> val = val ; t -> pred = des ; t -> succ = des -> succ ; des -> succ -> pred = t ; des -> succ = t ; } for ( i = 0 ; i < 10 ; i ++ ) { InsertionSort ( B [ i ]); } return Concatenate ( B ); } Node * Concatenate ( Node ** B ) { Node * head = ( Node * ) malloc ( sizeof ( Node )); head -> pred = NULL ; int i ; Node * curr = head ; for ( i = 0 ; i < 10 ; i ++ ) { if ( B [ i ] -> succ != B [ i ]) { curr -> succ = B [ i ] -> succ ; curr -> succ -> pred = curr ; curr = B [ i ] -> pred ; curr -> succ = NULL ; } } return head ; } void InsertionSort ( Node * head ) { head -> val = - ( 1 << 30 ); Node * i ; Node * firstNode = head -> succ ; for ( i = firstNode -> succ ; i != head ; ) { Node * t = i -> pred ; while ( i -> val < t -> val ) { t = t -> pred ; } Node * j = i ; i = i -> succ ; j -> pred -> succ = j -> succ ; j -> succ -> pred = j -> pred ; j -> succ = t -> succ ; j -> pred = t ; t -> succ -> pred = j ; t -> succ = j ; } } \u2003\u8bbe $n_i$ \u662f\u8868\u793a $B[i]$ \u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u968f\u673a\u53d8\u91cf\uff0c\u5219\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u4ee3\u4ef7 $T(n)=\\Theta(n)+\\sum_{i=0}^{n-1}O(n_i^2)$\uff0c\u4e0b\u9762\u5206\u6790\u6876\u6392\u5e8f\u7684\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u3002 $ X_{ij}= \\begin{cases} 1& if\\ A[j]\\ falls\\ into\\ Bucket[i]\\\\ 0& else \\end{cases} $\uff0c\u90a3\u4e48\u7531\u5747\u5300\u5206\u5e03\uff0c$P(X_{ij}=1)=1/n$\u3002 $ \\begin{aligned} E[T(n)] & = E[\\Theta(n)+\\sum_{i=0}^{n-1}O(n_i^2)] \\\\ & = \\Theta(n)+\\sum_{i=0}^{n-1}E[O(n_i^2)]\\\\ & = \\Theta(n)+\\sum_{i=0}^{n-1}O(E[n_i^2]) \\end{aligned} $ $ \\begin{aligned} E[n_i^2] & = E[(\\sum_{j=1}^{n} X_{ij})^2] = \\Theta(n)+\\sum_{i=0}^{n-1}E[O(n_i^2)] = E[\\sum_{j=1}^{n} \\sum_{k=1}^{n} X_{ij}X_{ik} ]\\\\ & = E[\\sum_{j=1}^{n}X_{ij}^2 + \\sum_{j=1}^{n} \\sum_{k=1,\\ k \\ne j}^{n} X_{ij}X_{ik}] \\\\ &= \\sum_{j=1}^{n}E[X_{ij}^2] + \\sum_{j=1}^{n} \\sum_{k=1,\\ k \\ne j}^{n} E[X_{ij}X_{ik}]\\\\ & = \\sum_{j=1}^{n} \\frac{1}{n} + \\sum_{j=1}^{n} \\sum_{k=1,\\ k \\ne j}^{n} \\frac{1}{n^2} \\\\ & = 2 - \\frac{1}{n} \\end{aligned} $ \u2003\u6700\u540e\uff0c\u7531 $\\Theta(n)+n\u00b7O(2-1/n)=\\Theta(n)$\uff0c\u6240\u4ee5\u6876\u6392\u5e8f\u7684\u671f\u671b\u65f6\u95f4\u4e3a\u7ebf\u6027\u7684\u3002\u5f53\u6570\u636e\u4e0d\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5982\u679c\u6240\u6709\u6876\u7684\u5927\u5c0f\u7684\u5e73\u65b9\u548c\u4e0e\u5143\u7d20\u603b\u6570\u6210\u7ebf\u6027\u5173\u7cfb\uff0c\u90a3\u4e48\u6876\u6392\u5e8f\u4e5f\u662f\u7ebf\u6027\u65f6\u95f4\u3002","title":"2.5"},{"location":"2-ApplicationLayer/2.5/#1","text":"\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u90fd\u53ef\u4ee5\u88ab\u62bd\u8c61\u4e3a\u4e00\u68f5\u51b3\u7b56\u6811( decision tree )\uff0c\u4e0b\u56fe\u4e3a\u4e09\u4e2a\u5143\u7d20\u7684\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u7684\u51b3\u7b56\u6811\u3002\u5728\u51b3\u7b56\u6811\u4e2d\uff0c\u4ece\u6839\u7ed3\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u53ef\u8fbe\u53f6\u7ed3\u70b9\u4e2d\u6700\u957f\u7b80\u5355\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u8868\u793a\u5bf9\u5e94\u6392\u5e8f\u7b97\u6cd5\u4e2d\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6bd4\u8f83\u6b21\u6570\uff0c\u5373\u51b3\u7b56\u6811\u7684\u9ad8\u5ea6\uff1b\u8f93\u5165\u89c4\u6a21 $n$ \u5bf9\u5e94\u7684 $n!$ \u4e2d\u6392\u5217\u81f3\u5c11\u90fd\u5e94\u8be5\u51fa\u73b0\u5728\u51b3\u7b56\u6811\u7684\u53f6\u7ed3\u70b9\u4e2d\u3002\u56e0\u6b64\uff0c\u51b3\u7b56\u6811\u9ad8\u5ea6\u7684\u4e0b\u754c\u5c31\u662f\u6bd4\u8f83\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u7684\u4e0b\u754c\u3002 \u2003 \u5b9a\u7406\uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u90fd\u9700\u8981\u505a $\\Omega(nlgn)$ \u6b21\u6bd4\u8f83\u3002 \u2003 \u8bbe\u51b3\u7b56\u6811\u9ad8\u4e3a $h$, \u5177\u6709 $l$ \u4e2a\u53ef\u8fbe\u7684\u53f6\u7ed3\u70b9\u3002\u7531 $n!\\leq l\\leq 2^h$\uff0c\u6211\u4eec\u6709 $h\\geq lg(n!)=\\Omega(nlgn)$ \u2003\u7531\u6b64\uff0c\u5806\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u90fd\u662f\u6e10\u8fdb\u6700\u4f18\u7684\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u3002\u4e0b\u9762\u7684\u6392\u5e8f\u7b97\u6cd5\u90fd\u662f\u7ebf\u6027\u65f6\u95f4\uff0c\u4f46\u5b83\u4eec\u90fd\u4f9d\u8d56\u4e8e\u7ed9\u5b9a\u7684\u8f93\u5165\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u3002","title":"1. \u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c"},{"location":"2-ApplicationLayer/2.5/#2","text":"\u5047\u8bbe $n$ \u4e2a\u5143\u7d20\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u662f\u5728 $[0,\\ k)$ \u4e4b\u95f4\u7684\u6574\u6570\uff0c\u5f53 $k=O(n)$ \u65f6\uff0c\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(n)$\u3002 \u2003 COUNTING-SORT(A, B, k) : A \u4e3a\u5f85\u6392\u5e8f\u6570\u7ec4\uff0c B \u4e3a\u7ed3\u679c\u6570\u7ec4\uff0c k \u4e3a\u6574\u6570\u8303\u56f4\u3002\u9996\u5148\u5728\u4e34\u65f6\u6570\u7ec4 C \u4e2d\u7edf\u8ba1\u5c0f\u4e8e\u7b49\u4e8e\u76f8\u5e94\u4e0b\u6807\u7684\u5bf9\u5e94\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6839\u636e\u5176\u786e\u5b9a A \u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void CountingSort ( int A [], int B [], int k , int len ) { int C [ k ]; int i ; for ( i = 0 ; i < k ; i ++ ) { C [ i ] = 0 ; } for ( i = 0 ; i < len ; i ++ ) { C [ A [ i ]] ++ ; } for ( i = 1 ; i < k ; i ++ ) { C [ i ] += C [ i - 1 ]; } for ( i = len - 1 ; i >= 0 ; i -- ) { B [ C [ A [ i ]] - 1 ] = A [ i ]; C [ A [ i ]] -- ; } } \u2003\u8ba1\u6570\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u662f\u5b83\u662f\u7a33\u5b9a\u7684\u3002\u5404\u5143\u7d20\u4e2a\u6570\u5df2\u77e5\uff0c\u53ef\u4ee5\u63a7\u5236\u5176\u76f8\u5bf9\u6b21\u5e8f\u4e0d\u6539\u53d8\u3002","title":"2. \u8ba1\u6570\u6392\u5e8f"},{"location":"2-ApplicationLayer/2.5/#3","text":"RADIX-SORT(A, d) : \u4ece\u6700\u4f4e\u6709\u6548\u4f4d\u5f00\u59cb\uff0c\u5bf9\u6bcf\u4e2a\u6570\u6309\u7167\u6570\u4f4d\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u6b64\u8fed\u4ee3\uff0c\u5176\u4e2d d \u662f\u6570\u5b57\u7684\u4f4d\u6570\u3002\u57fa\u6570\u6392\u5e8f\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5bf9\u4e00\u4f4d\u6570\u7684\u6392\u5e8f\u7b97\u6cd5\u5fc5\u987b\u662f\u7a33\u5b9a\u7684\uff0c\u5728\u6392\u5e8f\u9ad8\u4f4d\u65f6\u624d\u4e0d\u4f1a\u6539\u53d8\u4f4e\u4f4d\u5df2\u786e\u5b9a\u7684\u6b21\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 void RadixSort ( int A [], int d , int len ) { int i ; for ( i = 0 ; i < d ; i ++ ) { CountingSortOnRadix ( A , 10 , len , i ); } } void CountingSortOnRadix ( int A [], int k , int len , int digit ) { int C [ k ]; int B [ len ]; int i ; for ( i = 0 ; i < k ; i ++ ) { C [ i ] = 0 ; } for ( i = 0 ; i < len ; i ++ ) { C [ getDigit ( A [ i ], digit )] ++ ; } for ( i = 1 ; i < k ; i ++ ) { C [ i ] += C [ i - 1 ]; } for ( i = len - 1 ; i >= 0 ; i -- ) { B [ C [ getDigit ( A [ i ], digit )] - 1 ] = A [ i ]; C [ getDigit ( A [ i ], digit )] -- ; } for ( i = 0 ; i < len ; i ++ ) { A [ i ] = B [ i ]; } } int getDigit ( int num , int digit ) { int res = 1 ; int j ; for ( j = 1 ; j <= digit ; j ++ ) { res *= 10 ; } return num / res % 10 ; } \u2003\u7ed9\u5b9a $n$ \u4e2a $d$ \u4f4d\u6570\uff0c\u6bcf\u4e00\u4e2a\u6570\u4f4d\u6709 $k$ \u4e2a\u53ef\u80fd\u7684\u53d6\u503c\uff0c\u5982\u679c\u57fa\u6570\u6392\u5e8f\u6240\u4f7f\u7528\u7684\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u8017\u65f6 $\\Theta(n+k)$\uff0c\u5219\u57fa\u6570\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(d(n+k))$\u3002 \u2003\u66f4\u4e00\u822c\u7684\u6765\u8bf4\uff0c\u7ed9\u5b9a $n$ \u4e2a $b$ \u4f4d\u6570\u4ee5\u53ca\u4e00\u4e2a\u4efb\u610f\u7684\u6b63\u6574\u6570 $r\\leq b$\uff0c\u6bcf\u4e2a\u5173\u952e\u5b57\u53ef\u4ee5\u770b\u505a $d=\\lceil b/r \\rceil$ \u4e2a $r$ \u4f4d\u6570\uff0c\u6bcf\u4e2a\u6570\u4ecb\u4e8e $0$ \u5230 $2^r-1$ \u4e4b\u95f4\u3002\u5219\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta (d(n+k))=\\Theta((b/r)(n+2^r))$\u3002 \u2003\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c $b=O(lgn), r\\approx lgn$\uff0c\u57fa\u6570\u6392\u5e8f\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(n)$\u3002\u6bd4\u8d77\u5feb\u901f\u6392\u5e8f\uff0c\u57fa\u6570\u6392\u5e8f\u867d\u7136\u5faa\u73af\u6b21\u6570\u5c11\uff0c\u4f46\u5b83\u6bcf\u6b21\u7684\u64cd\u4f5c\u82b1\u8d39\u65f6\u95f4\u957f\uff0c\u9690\u542b\u7684\u5e38\u6570\u5927\uff0c\u5b83\u4eec\u7684\u6bd4\u8f83\u8fd8\u8981\u53d6\u51b3\u4e8e\u786c\u4ef6\u7279\u6027\u548c\u5177\u4f53\u7684\u6570\u636e\u5206\u5e03\u3002\u5982\u679c\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u5bf9\u5355\u4e2a\u6570\u4f4d\u6392\u5e8f\uff0c\u5219\u57fa\u6570\u6392\u5e8f\u4e0d\u662f\u539f\u5740\u6392\u5e8f\uff0c\u66f4\u52a0\u6d6a\u8d39\u7a7a\u95f4\u3002","title":"3. \u57fa\u6570\u6392\u5e8f"},{"location":"2-ApplicationLayer/2.5/#4","text":"\u5047\u8bbe\u8f93\u5165\u7684\u6570\u636e\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5219\u5e73\u5747\u60c5\u51b5\u4e0b\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a $O(n)$\u3002 \u2003 BUCKET-SORT(A) : \u628a\u533a\u95f4 $[0,\\ 1]$ \u5341\u7b49\u5206\uff0c\u5e76\u6784\u9020\u4e00\u4e2a\u94fe\u8868\u7684\u6570\u7ec4 $B$ \uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e00\u4e2a\u88ab\u7b49\u5206\u7684\u533a\u95f4\u3002\u5bf9\u6bcf\u4e2a\u94fe\u8868\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u6700\u540e\u5408\u5e76\u94fe\u8868\u5373\u5b8c\u6210\u6392\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 typedef struct node { double val ; struct node * pred ; struct node * succ ; } Node ; // ... Node * BucketSort ( int A [], int len , int maxDigit ) { Node * B [ 10 ]; int i , j ; // init a new empty list of HEADs for ( i = 0 ; i < 10 ; i ++ ) { B [ i ] = ( Node * ) malloc ( sizeof ( Node )); B [ i ] -> pred = B [ i ] -> succ = B [ i ]; } // insert element into circular linked list for ( i = 0 ; i < len ; i ++ ) { double val = A [ i ] / ( double ) maxDigit ; Node * des = B [( int )( val * 10 )]; Node * t = ( Node * ) malloc ( sizeof ( Node )); t -> val = val ; t -> pred = des ; t -> succ = des -> succ ; des -> succ -> pred = t ; des -> succ = t ; } for ( i = 0 ; i < 10 ; i ++ ) { InsertionSort ( B [ i ]); } return Concatenate ( B ); } Node * Concatenate ( Node ** B ) { Node * head = ( Node * ) malloc ( sizeof ( Node )); head -> pred = NULL ; int i ; Node * curr = head ; for ( i = 0 ; i < 10 ; i ++ ) { if ( B [ i ] -> succ != B [ i ]) { curr -> succ = B [ i ] -> succ ; curr -> succ -> pred = curr ; curr = B [ i ] -> pred ; curr -> succ = NULL ; } } return head ; } void InsertionSort ( Node * head ) { head -> val = - ( 1 << 30 ); Node * i ; Node * firstNode = head -> succ ; for ( i = firstNode -> succ ; i != head ; ) { Node * t = i -> pred ; while ( i -> val < t -> val ) { t = t -> pred ; } Node * j = i ; i = i -> succ ; j -> pred -> succ = j -> succ ; j -> succ -> pred = j -> pred ; j -> succ = t -> succ ; j -> pred = t ; t -> succ -> pred = j ; t -> succ = j ; } } \u2003\u8bbe $n_i$ \u662f\u8868\u793a $B[i]$ \u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u968f\u673a\u53d8\u91cf\uff0c\u5219\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u4ee3\u4ef7 $T(n)=\\Theta(n)+\\sum_{i=0}^{n-1}O(n_i^2)$\uff0c\u4e0b\u9762\u5206\u6790\u6876\u6392\u5e8f\u7684\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u3002 $ X_{ij}= \\begin{cases} 1& if\\ A[j]\\ falls\\ into\\ Bucket[i]\\\\ 0& else \\end{cases} $\uff0c\u90a3\u4e48\u7531\u5747\u5300\u5206\u5e03\uff0c$P(X_{ij}=1)=1/n$\u3002 $ \\begin{aligned} E[T(n)] & = E[\\Theta(n)+\\sum_{i=0}^{n-1}O(n_i^2)] \\\\ & = \\Theta(n)+\\sum_{i=0}^{n-1}E[O(n_i^2)]\\\\ & = \\Theta(n)+\\sum_{i=0}^{n-1}O(E[n_i^2]) \\end{aligned} $ $ \\begin{aligned} E[n_i^2] & = E[(\\sum_{j=1}^{n} X_{ij})^2] = \\Theta(n)+\\sum_{i=0}^{n-1}E[O(n_i^2)] = E[\\sum_{j=1}^{n} \\sum_{k=1}^{n} X_{ij}X_{ik} ]\\\\ & = E[\\sum_{j=1}^{n}X_{ij}^2 + \\sum_{j=1}^{n} \\sum_{k=1,\\ k \\ne j}^{n} X_{ij}X_{ik}] \\\\ &= \\sum_{j=1}^{n}E[X_{ij}^2] + \\sum_{j=1}^{n} \\sum_{k=1,\\ k \\ne j}^{n} E[X_{ij}X_{ik}]\\\\ & = \\sum_{j=1}^{n} \\frac{1}{n} + \\sum_{j=1}^{n} \\sum_{k=1,\\ k \\ne j}^{n} \\frac{1}{n^2} \\\\ & = 2 - \\frac{1}{n} \\end{aligned} $ \u2003\u6700\u540e\uff0c\u7531 $\\Theta(n)+n\u00b7O(2-1/n)=\\Theta(n)$\uff0c\u6240\u4ee5\u6876\u6392\u5e8f\u7684\u671f\u671b\u65f6\u95f4\u4e3a\u7ebf\u6027\u7684\u3002\u5f53\u6570\u636e\u4e0d\u670d\u4ece\u5747\u5300\u5206\u5e03\uff0c\u5982\u679c\u6240\u6709\u6876\u7684\u5927\u5c0f\u7684\u5e73\u65b9\u548c\u4e0e\u5143\u7d20\u603b\u6570\u6210\u7ebf\u6027\u5173\u7cfb\uff0c\u90a3\u4e48\u6876\u6392\u5e8f\u4e5f\u662f\u7ebf\u6027\u65f6\u95f4\u3002","title":"4. \u6876\u6392\u5e8f"},{"location":"2-ApplicationLayer/2.6/","text":"1. \u6700\u5927\u503c\u6700\u5c0f\u503c \u2003\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u542b\u6709 $n$ \u4e2a\u5143\u7d20\u7684\u96c6\u5408\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u6700\u5927(\u5c0f)\u503c\u9700\u8981 $n-1$ \u6b21\u6bd4\u8f83\uff0c\u4e14\u8fd9\u4e2a\u503c\u4e5f\u662f\u6bd4\u8f83\u6b21\u6570\u7684\u4e0b\u754c\u3002 \u2003\u67d0\u4e9b\u573a\u666f\u9700\u8981\u540c\u65f6\u627e\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6309\u7167\u4e00\u822c\u7684\u60f3\u6cd5\u5219\u9700\u8981 $2n-2$ \u6b21\u6bd4\u8f83\u3002\u4e8b\u5b9e\u4e0a\uff0c\u81f3\u591a\u901a\u8fc7 $3\\lfloor n/2 \\rfloor$ \u6b21\u6bd4\u8f83\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\u5177\u4f53\u7684\u505a\u6cd5\u662f\u6210\u5bf9\u5730\u5904\u7406\u5143\u7d20\uff0c\u5148\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5176\u4e2d\u8f83\u5c0f\u7684\u4e0e\u5df2\u77e5\u7684\u6700\u5c0f\u503c\u6bd4\u8f83\uff0c\u8f83\u5927\u7684\u4e0e\u5df2\u77e5\u7684\u6700\u5927\u503c\u6bd4\u8f83\uff0c\u8fd9\u6837\u6bcf\u4e24\u4e2a\u5143\u7d20\u5c31\u53ea\u9700\u8981\u4e09\u6b21\u6bd4\u8f83\u3002 \u2003\u5bf9\u4e8e\u5947\u6570\u4e2a\u5143\u7d20\uff0c\u9700\u8981 $3\\lfloor n/2 \\rfloor$ \u6b21\u6bd4\u8f83\uff1b\u5bf9\u4e8e\u5076\u6570\u4e2a\uff0c\u9700\u8981 $3n/2-2$ \u6b21\u6bd4\u8f83\uff0c\u6240\u4ee5\u81f3\u591a\u9700\u8981 $3\\lfloor n/2 \\rfloor$ \u6b21\u6bd4\u8f83\u3002 2. \u987a\u5e8f\u7edf\u8ba1\u91cf\u9009\u62e9 (1). \u671f\u671b\u65f6\u95f4\u4e3a\u7ebf\u6027\u7684\u7b97\u6cd5 \u2003\u7c7b\u4f3c\u4e8e\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u4f7f\u7528 RANDOMIZED-PARTITION(A, left, right) \u5bf9\u6570\u7ec4\u8fdb\u884c\u5212\u5206\uff0c\u548c\u5feb\u6392\u4e0d\u540c\u7684\u662f\u53ea\u5411\u4e00\u8fb9\u9012\u5f52\u3002 \u2003 RANDOMIZED-SELECT(A, i, left, right) : \u5728\u6570\u7ec4 A[left..right] \u4e2d\u627e\u51fa\u7b2c i \u5c0f\u7684\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } int RandomizedPartition ( int A [], int left , int right ) { int pivotI = rand () % ( right - left + 1 ) + left ; swap ( & A [ pivotI ], & A [ right ]); int i , j ; for ( i = left - 1 , j = left ; j < right ; j ++ ) { if ( A [ j ] <= A [ right ]) { swap ( & A [ ++ i ], & A [ j ]); } } swap ( & A [ ++ i ], & A [ right ]); return i ; } (2). \u6700\u574f\u65f6\u95f4\u4e3a\u7ebf\u6027\u7684\u7b97\u6cd5 \u2003\u6b64\u7b97\u6cd5\u4ecd\u7136\u901a\u8fc7\u5212\u5206\u7684\u601d\u60f3\u5b9e\u73b0\uff0c\u4f46\u4e0e\u4e0a\u9762\u7684\u601d\u8def\u4e0a\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u6b21\u90fd\u4fdd\u8bc1\u5b9e\u73b0\u4e00\u4e2a\u8f83\u597d\u7684\u5212\u5206\uff0c\u628a\u4e3b\u5143\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5212\u5206\u51fd\u6570\u3002 \u2003 SELECT(A, i, left, right) : \u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u5728\u6570\u7ec4 A[left..right] \u4e2d\u627e\u51fa\u7b2c i \u5c0f\u7684\u5143\u7d20\u3002 \u2003\u2460 \u5c06\u6570\u7ec4\u5212\u5206\u4e3a $\\lfloor n/5 \\rfloor$ \u7ec4\uff0c\u6bcf\u7ec4 $5$ \u4e2a\u5143\u7d20\uff0c\u81f3\u591a\u8fd8\u6709\u4e00\u7ec4\u6709 $n\\ mod\\ 5$ \u4e2a\u5143\u7d20\u3002 \u2003\u2461 \u5bfb\u627e $\\lceil n/5 \\rceil$ \u7ec4\u4e2d\u6bcf\u7ec4\u7684\u4e2d\u4f4d\u6570\uff1a\u63d2\u5165\u6392\u5e8f \u2003\u2462 \u9012\u5f52\u8c03\u7528 SELECT \uff0c\u627e\u5230 \u2461 \u4e2d\u786e\u5b9a\u7684 $\\lceil n/5 \\rceil$ \u4e2a\u4e2d\u4f4d\u6570\u7684\u4e2d\u4f4d\u6570 $x$\u3002(\u5982\u679c\u5143\u7d20\u4e2a\u6570\u4e3a\u5076\u6570\uff0c\u7ea6\u5b9a\u53d6\u4e0b\u4e2d\u4f4d\u6570) \u2003\u2463 \u4ee5 $x$ \u4e3a\u4e3b\u5143\uff0c\u5bf9\u6570\u7ec4\u8fdb\u884c\u5212\u5206\u3002\u4ee4 $x$ \u662f\u7b2c $k$ \u5c0f\u7684\u5143\u7d20\uff0c\u5219\u4f4e\u533a\u5143\u7d20\u4e2a\u6570\u4e3a $k$\uff0c\u9ad8\u533a\u5143\u7d20\u4e2a\u6570\u4e3a $n-k$\u3002 \u2003\u2464 \u5982\u679c $i==k$\uff0c\u5219\u8fd4\u56de $x$\uff1b\u5982\u679c $i < k$\uff0c\u5219\u5728\u4f4e\u533a\u9012\u5f52\u5bfb\u627e\u7b2c $i$ \u5c0f\u7684\u5143\u7d20\uff1b\u5982\u679c $i>k$\uff0c\u5219\u5728\u9ad8\u533a\u5bfb\u627e\u7b2c $i-k$ \u5c0f\u7684\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 int Select ( int A [], int index , int left , int right ) { if ( right == left ) { return A [ left ]; } int len = right - left + 1 ; int j ; for ( j = 0 ; j < len / 5 ; j ++ ) { InsertionSort ( A , left + j * 5 , left + j * 5 + 4 ); swap ( & A [ left + j ], & A [ left + j * 5 + 2 ]); } if ( j * 5 < len ) { InsertionSort ( A , left + j * 5 , left + len - 1 ); swap ( & A [ left + j ], & A [ left + ( len - 1 - j * 5 ) / 2 ]); j ++ ; } int x = Select ( A , j / 2 , left , left + j - 1 ); int k = Partition ( A , left , right , x ); if ( k - left + 1 == index ) { return x ; } else if ( k - left + 1 > index ) { return Select ( A , index , left , k ); } else { return Select ( A , index - ( k - left + 1 ), k + 1 , right ); } } void InsertionSort ( int A [], int left , int right ) { int i , j ; for ( i = left + 1 ; i <= right ; i ++ ) { int t = A [ i ]; for ( j = i - 1 ; A [ j ] > t && j >= left ; j -- ) { A [ j + 1 ] = A [ j ]; } A [ j + 1 ] = t ; } } int Partition ( int A [], int left , int right , int pivot ) { int i , j ; for ( i = left - 1 , j = left ; j <= right ; j ++ ) { if ( A [ j ] <= pivot ) { swap ( & A [ ++ i ], & A [ j ]); } } return i ; } \u2003\u4e0b\u9762\u8bc1\u660e\u5b83\u7684\u65f6\u95f4\u590d\u6742\u6027\uff0c\u5047\u8bbe\u5143\u7d20\u4e92\u5f02\u3002\u9996\u5148\uff0c\u8981\u5f97\u5230\u9012\u5f52\u65b9\u7a0b\uff0c\u5c31\u8981\u77e5\u9053\u7b2c \u2464 \u6b65\u9012\u5f52\u6700\u591a\u5904\u7406\u591a\u5c11\u4e2a\u5143\u7d20\u3002\u5728 \u2461 \u4e2d\u5212\u5206\u7684 $\\lceil n/5 \\rceil$ \u4e2a\u7ec4\u4e2d\uff0c\u81f3\u5c11\u6709 $\\lceil \\frac{1}{2} \\lceil n/5 \\rceil \\rceil$ \u4e2a\u7ec4\u5305\u542b\u5927\u4e8e $x$ \u7684\u5143\u7d20\uff0c\u5176\u4e2d\u9664\u4e86 $x$ \u672c\u8eab\u7684\u7ec4\u548c\u672a\u88ab\u6574\u9664\u7684\u7ec4\uff0c\u5269\u4e0b\u7684\u7ec4\u5747\u8d21\u732e\u4e86\u4e09\u4e2a\u3002\u6240\u4ee5\u5927\u4e8e $x$ \u7684\u5143\u7d20\u81f3\u5c11\u6709 $$ 3(\\lceil \\frac{1}{2} \\lceil \\frac{n}{5} \\rceil \\rceil - 2) \\geq \\frac{3n}{10}-6$$ \u4e2a\u3002\u7531\u4e8e $x$ \u662f\u4e0b\u4e2d\u4f4d\u6570\uff0c\u5c0f\u4e8e $x$ \u7684\u5206\u6790\u4e5f\u540c\u7406\u3002\u5219\u7b2c \u2464 \u6b65\u4e2d\u5904\u7406\u5143\u7d20\u7684\u4e2a\u6570\u81f3\u591a\u4e3a $7n/10+6$ \u4e2a\u3002\u6b65\u9aa4 \u2460\u2461\u2463 \u9700\u8981 $O(n)$ \u65f6\u95f4\uff0c\u5176\u4e2d \u2461 \u662f\u5bf9 $O(1)$ \u7a7a\u95f4\u4f7f\u7528 $O(n)$ \u6b21\u63d2\u5165\u6392\u5e8f\u3002\u6b65\u9aa4 \u2464 \u9700\u8981 $T(7n/10+6)$ \u65f6\u95f4\u3002\u4e8e\u662f\u53ef\u5f97\u9012\u5f52\u5f0f\uff0c\u5e76\u4f7f\u7528\u4ee3\u5165\u6cd5\u5047\u8bbe\u5b58\u5728\u76f8\u5e94\u7684\u5e38\u6570 $c$ \u548c $n_0$\uff1a $$ \\begin{aligned} T(n) & \\leq T(\\lceil n/5 \\rceil)+T(\\frac{7n}{10}+6)+O(n) \\\\ & \\leq \\frac{9cn}{10}+7c+an \\\\ & = cn+(-\\frac{cn}{10}+7c+an) \\end{aligned} $$ \u56e0\u6b64\uff0c\u53ea\u9700\u8981 $-cn/10+7c+an \\leq 0$\uff0c\u8be5\u7b97\u6cd5\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u7ebf\u6027\u3002 3. \u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570 \u2003\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 $X[0..m-1]$ \u548c $Y[0..n-1]$\uff0c\u8981\u6c42\u627e\u51fa\u4e24\u4e2a\u6570\u7ec4\u7684 $m+n$ \u4e2a\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\uff0c\u4e14\u590d\u6742\u5ea6\u4e3a $O(log(m+n))$\u3002 \u2003\u5982\u679c $m==n$\uff0c\u8bbe $X$ \u548c $Y$ \u7684\u4e2d\u4f4d\u6570\u5206\u522b\u4e3a $x$ \u548c $y$\uff0c\u53ef\u4ee5\u8bc1\u660e\u4e24\u4e2a\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\u4e00\u5b9a\u4f4d\u4e8e\u533a\u95f4 $[x,\\ y]$ \u5185\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u6839\u636e\u95ee\u9898\u5b9a\u4e49\u7684\u72b6\u6001\u627e\u5230\u5b50\u95ee\u9898\u5411\u4e0b\u9012\u5f52\u3002 \u2003\u4f46 $m$ \u4e0e $n$ \u7684\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u65e0\u6cd5\u7b80\u5355\u7684\u5411\u4e0b\u5212\u5206\uff0c\u8fd9\u65f6\u9700\u8981\u8f6c\u6362\u601d\u8def\u3002\u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u4e8e\u627e\u5230\u5bf9\u6570\u7ec4 $X$ \u548c $Y$ \u7684\u4e00\u79cd\u5212\u5206\uff1a $$ \\begin{aligned} \\lbrace X[0],\\ ...,X[i-1] \\ &|\\ X[i],\\ ...,X[m-1] \\rbrace \\\\ \\lbrace Y[0],\\ ...,Y[j-1] \\ &|\\ Y[j],\\ ...,Y[n-1] \\rbrace \\\\ i \\in [0,\\ m],\\ & j \\in [0,\\ n] \\end{aligned} $$ \u8fd9\u79cd\u5212\u5206\u8981\u6ee1\u8db3\uff1a $$ \\begin{cases} i+j=m-i+n-j\\ (or\\ i+j=m-i+n-j+1)& \\\\ X[i-1]\\leq Y[j] \\ \\ and \\ \\ Y[j-1] \\leq X[i]& \\end{cases} $$ \u2003\u8fd9\u91cc\u5f53 $m+n$ \u4e3a\u5947\u6570\uff0c\u4ee4\u5de6\u8fb9\u7684\u90e8\u5206\u591a\u4e00\u4e2a\u5143\u7d20\uff0c\u65b9\u4fbf\u7edf\u4e00\u516c\u5f0f\u3002\u4e14 $m$ \u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e $n$\uff0c\u5426\u5219 $j$ \u53ef\u4ee5\u4e3a\u8d1f\u3002 \u2003\u7ecf\u8fc7\u8fd9\u4e9b\u6b65\u9aa4\u540e\uff0c\u539f\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u7684\u641c\u7d22\u95ee\u9898\uff1a\u5728\u533a\u95f4 $[0,\\ m]$ \u4e2d\u627e\u5230 $i$\uff0c\u4f7f\u5f97 $j=(m+n+1)/2-i$ \u4e14 $X[i-1]\\leq Y[j]$ \u4e14 $Y[j-1] \\leq X[i]$\u3002\u6839\u636e\u8fd9\u4e9b\u6761\u4ef6\uff0c\u5728 $[0,\\ m]$ \u5185\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u3002\u6700\u540e\u5728\u4ee3\u7801\u4e2d\u8981\u6ce8\u610f\u53d6\u5230\u4e34\u754c\u503c\u6761\u4ef6\u7684\u5224\u65ad\uff1a \u2003\u2460 \u5f53 $i==0$ \u4e14 $Y[j-1]\\leq X[i]$ \u65f6\uff0c$i$ \u7684\u4f4d\u7f6e\u6b63\u786e\uff0c\u5728\u53e6\u4e00\u4e2a\u6761\u4ef6\u4e2d\u6ce8\u610f\u5224\u65ad $i!=0$\u3002 \u2003\u2461 \u5f53 $i==m$ \u4e14 $X[i-1]\\leq Y[j]$ \u65f6\uff0c$i$ \u7684\u4f4d\u7f6e\u6b63\u786e\uff0c\u5728\u53e6\u4e00\u4e2a\u6761\u4ef6\u4e2d\u6ce8\u610f\u5224\u65ad $i!=m$\u3002 \u2003\u2462 $j$ \u53ef\u4ee5\u53d6\u5230\u4e34\u754c\u503c\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u6570\u7ec4\u957f\u5ea6\u76f8\u7b49\u4e14 $i$ \u53d6\u5230\u4e86\u4e34\u754c\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 double FindMedianInSortedArrays ( int X [], int Y [], int xLen , int yLen ) { if ( xLen > yLen ) { int * tA = X ; int tN = xLen ; X = Y ; xLen = yLen ; Y = tA ; yLen = tN ; } int iLeft = 0 , iRight = xLen ; while ( iLeft <= iRight ) { int i = ( iLeft + iRight ) / 2 ; int j = ( xLen + yLen + 1 ) / 2 - i ; if ( i != xLen && Y [ j - 1 ] > X [ i ]) { iLeft = i + 1 ; } else if ( i != 0 && X [ i - 1 ] > Y [ j ]) { iRight = i - 1 ; } else { int maxLeft ; if ( i == 0 ) { maxLeft = Y [ j - 1 ]; } else if ( j == 0 ) { maxLeft = X [ i - 1 ]; } else { maxLeft = max ( X [ i - 1 ], Y [ j - 1 ]); } if (( xLen + yLen ) & 1 == 1 ) { return maxLeft ; } int minRight ; if ( i == xLen ) { minRight = Y [ j ]; } else if ( j == yLen ) { minRight = X [ i ]; } else { minRight = min ( X [ i ], Y [ j ]); } return ( maxLeft + minRight ) / 2.0 ; } } return - INF ; }","title":"2.6"},{"location":"2-ApplicationLayer/2.6/#1","text":"\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u542b\u6709 $n$ \u4e2a\u5143\u7d20\u7684\u96c6\u5408\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u6700\u5927(\u5c0f)\u503c\u9700\u8981 $n-1$ \u6b21\u6bd4\u8f83\uff0c\u4e14\u8fd9\u4e2a\u503c\u4e5f\u662f\u6bd4\u8f83\u6b21\u6570\u7684\u4e0b\u754c\u3002 \u2003\u67d0\u4e9b\u573a\u666f\u9700\u8981\u540c\u65f6\u627e\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6309\u7167\u4e00\u822c\u7684\u60f3\u6cd5\u5219\u9700\u8981 $2n-2$ \u6b21\u6bd4\u8f83\u3002\u4e8b\u5b9e\u4e0a\uff0c\u81f3\u591a\u901a\u8fc7 $3\\lfloor n/2 \\rfloor$ \u6b21\u6bd4\u8f83\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\u5177\u4f53\u7684\u505a\u6cd5\u662f\u6210\u5bf9\u5730\u5904\u7406\u5143\u7d20\uff0c\u5148\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5176\u4e2d\u8f83\u5c0f\u7684\u4e0e\u5df2\u77e5\u7684\u6700\u5c0f\u503c\u6bd4\u8f83\uff0c\u8f83\u5927\u7684\u4e0e\u5df2\u77e5\u7684\u6700\u5927\u503c\u6bd4\u8f83\uff0c\u8fd9\u6837\u6bcf\u4e24\u4e2a\u5143\u7d20\u5c31\u53ea\u9700\u8981\u4e09\u6b21\u6bd4\u8f83\u3002 \u2003\u5bf9\u4e8e\u5947\u6570\u4e2a\u5143\u7d20\uff0c\u9700\u8981 $3\\lfloor n/2 \\rfloor$ \u6b21\u6bd4\u8f83\uff1b\u5bf9\u4e8e\u5076\u6570\u4e2a\uff0c\u9700\u8981 $3n/2-2$ \u6b21\u6bd4\u8f83\uff0c\u6240\u4ee5\u81f3\u591a\u9700\u8981 $3\\lfloor n/2 \\rfloor$ \u6b21\u6bd4\u8f83\u3002","title":"1. \u6700\u5927\u503c\u6700\u5c0f\u503c"},{"location":"2-ApplicationLayer/2.6/#2","text":"","title":"2. \u987a\u5e8f\u7edf\u8ba1\u91cf\u9009\u62e9"},{"location":"2-ApplicationLayer/2.6/#1_1","text":"\u7c7b\u4f3c\u4e8e\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u4f7f\u7528 RANDOMIZED-PARTITION(A, left, right) \u5bf9\u6570\u7ec4\u8fdb\u884c\u5212\u5206\uff0c\u548c\u5feb\u6392\u4e0d\u540c\u7684\u662f\u53ea\u5411\u4e00\u8fb9\u9012\u5f52\u3002 \u2003 RANDOMIZED-SELECT(A, i, left, right) : \u5728\u6570\u7ec4 A[left..right] \u4e2d\u627e\u51fa\u7b2c i \u5c0f\u7684\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } int RandomizedPartition ( int A [], int left , int right ) { int pivotI = rand () % ( right - left + 1 ) + left ; swap ( & A [ pivotI ], & A [ right ]); int i , j ; for ( i = left - 1 , j = left ; j < right ; j ++ ) { if ( A [ j ] <= A [ right ]) { swap ( & A [ ++ i ], & A [ j ]); } } swap ( & A [ ++ i ], & A [ right ]); return i ; }","title":"(1). \u671f\u671b\u65f6\u95f4\u4e3a\u7ebf\u6027\u7684\u7b97\u6cd5"},{"location":"2-ApplicationLayer/2.6/#2_1","text":"\u6b64\u7b97\u6cd5\u4ecd\u7136\u901a\u8fc7\u5212\u5206\u7684\u601d\u60f3\u5b9e\u73b0\uff0c\u4f46\u4e0e\u4e0a\u9762\u7684\u601d\u8def\u4e0a\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u6b21\u90fd\u4fdd\u8bc1\u5b9e\u73b0\u4e00\u4e2a\u8f83\u597d\u7684\u5212\u5206\uff0c\u628a\u4e3b\u5143\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5212\u5206\u51fd\u6570\u3002 \u2003 SELECT(A, i, left, right) : \u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u5728\u6570\u7ec4 A[left..right] \u4e2d\u627e\u51fa\u7b2c i \u5c0f\u7684\u5143\u7d20\u3002 \u2003\u2460 \u5c06\u6570\u7ec4\u5212\u5206\u4e3a $\\lfloor n/5 \\rfloor$ \u7ec4\uff0c\u6bcf\u7ec4 $5$ \u4e2a\u5143\u7d20\uff0c\u81f3\u591a\u8fd8\u6709\u4e00\u7ec4\u6709 $n\\ mod\\ 5$ \u4e2a\u5143\u7d20\u3002 \u2003\u2461 \u5bfb\u627e $\\lceil n/5 \\rceil$ \u7ec4\u4e2d\u6bcf\u7ec4\u7684\u4e2d\u4f4d\u6570\uff1a\u63d2\u5165\u6392\u5e8f \u2003\u2462 \u9012\u5f52\u8c03\u7528 SELECT \uff0c\u627e\u5230 \u2461 \u4e2d\u786e\u5b9a\u7684 $\\lceil n/5 \\rceil$ \u4e2a\u4e2d\u4f4d\u6570\u7684\u4e2d\u4f4d\u6570 $x$\u3002(\u5982\u679c\u5143\u7d20\u4e2a\u6570\u4e3a\u5076\u6570\uff0c\u7ea6\u5b9a\u53d6\u4e0b\u4e2d\u4f4d\u6570) \u2003\u2463 \u4ee5 $x$ \u4e3a\u4e3b\u5143\uff0c\u5bf9\u6570\u7ec4\u8fdb\u884c\u5212\u5206\u3002\u4ee4 $x$ \u662f\u7b2c $k$ \u5c0f\u7684\u5143\u7d20\uff0c\u5219\u4f4e\u533a\u5143\u7d20\u4e2a\u6570\u4e3a $k$\uff0c\u9ad8\u533a\u5143\u7d20\u4e2a\u6570\u4e3a $n-k$\u3002 \u2003\u2464 \u5982\u679c $i==k$\uff0c\u5219\u8fd4\u56de $x$\uff1b\u5982\u679c $i < k$\uff0c\u5219\u5728\u4f4e\u533a\u9012\u5f52\u5bfb\u627e\u7b2c $i$ \u5c0f\u7684\u5143\u7d20\uff1b\u5982\u679c $i>k$\uff0c\u5219\u5728\u9ad8\u533a\u5bfb\u627e\u7b2c $i-k$ \u5c0f\u7684\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 int Select ( int A [], int index , int left , int right ) { if ( right == left ) { return A [ left ]; } int len = right - left + 1 ; int j ; for ( j = 0 ; j < len / 5 ; j ++ ) { InsertionSort ( A , left + j * 5 , left + j * 5 + 4 ); swap ( & A [ left + j ], & A [ left + j * 5 + 2 ]); } if ( j * 5 < len ) { InsertionSort ( A , left + j * 5 , left + len - 1 ); swap ( & A [ left + j ], & A [ left + ( len - 1 - j * 5 ) / 2 ]); j ++ ; } int x = Select ( A , j / 2 , left , left + j - 1 ); int k = Partition ( A , left , right , x ); if ( k - left + 1 == index ) { return x ; } else if ( k - left + 1 > index ) { return Select ( A , index , left , k ); } else { return Select ( A , index - ( k - left + 1 ), k + 1 , right ); } } void InsertionSort ( int A [], int left , int right ) { int i , j ; for ( i = left + 1 ; i <= right ; i ++ ) { int t = A [ i ]; for ( j = i - 1 ; A [ j ] > t && j >= left ; j -- ) { A [ j + 1 ] = A [ j ]; } A [ j + 1 ] = t ; } } int Partition ( int A [], int left , int right , int pivot ) { int i , j ; for ( i = left - 1 , j = left ; j <= right ; j ++ ) { if ( A [ j ] <= pivot ) { swap ( & A [ ++ i ], & A [ j ]); } } return i ; } \u2003\u4e0b\u9762\u8bc1\u660e\u5b83\u7684\u65f6\u95f4\u590d\u6742\u6027\uff0c\u5047\u8bbe\u5143\u7d20\u4e92\u5f02\u3002\u9996\u5148\uff0c\u8981\u5f97\u5230\u9012\u5f52\u65b9\u7a0b\uff0c\u5c31\u8981\u77e5\u9053\u7b2c \u2464 \u6b65\u9012\u5f52\u6700\u591a\u5904\u7406\u591a\u5c11\u4e2a\u5143\u7d20\u3002\u5728 \u2461 \u4e2d\u5212\u5206\u7684 $\\lceil n/5 \\rceil$ \u4e2a\u7ec4\u4e2d\uff0c\u81f3\u5c11\u6709 $\\lceil \\frac{1}{2} \\lceil n/5 \\rceil \\rceil$ \u4e2a\u7ec4\u5305\u542b\u5927\u4e8e $x$ \u7684\u5143\u7d20\uff0c\u5176\u4e2d\u9664\u4e86 $x$ \u672c\u8eab\u7684\u7ec4\u548c\u672a\u88ab\u6574\u9664\u7684\u7ec4\uff0c\u5269\u4e0b\u7684\u7ec4\u5747\u8d21\u732e\u4e86\u4e09\u4e2a\u3002\u6240\u4ee5\u5927\u4e8e $x$ \u7684\u5143\u7d20\u81f3\u5c11\u6709 $$ 3(\\lceil \\frac{1}{2} \\lceil \\frac{n}{5} \\rceil \\rceil - 2) \\geq \\frac{3n}{10}-6$$ \u4e2a\u3002\u7531\u4e8e $x$ \u662f\u4e0b\u4e2d\u4f4d\u6570\uff0c\u5c0f\u4e8e $x$ \u7684\u5206\u6790\u4e5f\u540c\u7406\u3002\u5219\u7b2c \u2464 \u6b65\u4e2d\u5904\u7406\u5143\u7d20\u7684\u4e2a\u6570\u81f3\u591a\u4e3a $7n/10+6$ \u4e2a\u3002\u6b65\u9aa4 \u2460\u2461\u2463 \u9700\u8981 $O(n)$ \u65f6\u95f4\uff0c\u5176\u4e2d \u2461 \u662f\u5bf9 $O(1)$ \u7a7a\u95f4\u4f7f\u7528 $O(n)$ \u6b21\u63d2\u5165\u6392\u5e8f\u3002\u6b65\u9aa4 \u2464 \u9700\u8981 $T(7n/10+6)$ \u65f6\u95f4\u3002\u4e8e\u662f\u53ef\u5f97\u9012\u5f52\u5f0f\uff0c\u5e76\u4f7f\u7528\u4ee3\u5165\u6cd5\u5047\u8bbe\u5b58\u5728\u76f8\u5e94\u7684\u5e38\u6570 $c$ \u548c $n_0$\uff1a $$ \\begin{aligned} T(n) & \\leq T(\\lceil n/5 \\rceil)+T(\\frac{7n}{10}+6)+O(n) \\\\ & \\leq \\frac{9cn}{10}+7c+an \\\\ & = cn+(-\\frac{cn}{10}+7c+an) \\end{aligned} $$ \u56e0\u6b64\uff0c\u53ea\u9700\u8981 $-cn/10+7c+an \\leq 0$\uff0c\u8be5\u7b97\u6cd5\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u7ebf\u6027\u3002","title":"(2). \u6700\u574f\u65f6\u95f4\u4e3a\u7ebf\u6027\u7684\u7b97\u6cd5"},{"location":"2-ApplicationLayer/2.6/#3","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 $X[0..m-1]$ \u548c $Y[0..n-1]$\uff0c\u8981\u6c42\u627e\u51fa\u4e24\u4e2a\u6570\u7ec4\u7684 $m+n$ \u4e2a\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\uff0c\u4e14\u590d\u6742\u5ea6\u4e3a $O(log(m+n))$\u3002 \u2003\u5982\u679c $m==n$\uff0c\u8bbe $X$ \u548c $Y$ \u7684\u4e2d\u4f4d\u6570\u5206\u522b\u4e3a $x$ \u548c $y$\uff0c\u53ef\u4ee5\u8bc1\u660e\u4e24\u4e2a\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\u4e00\u5b9a\u4f4d\u4e8e\u533a\u95f4 $[x,\\ y]$ \u5185\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u6839\u636e\u95ee\u9898\u5b9a\u4e49\u7684\u72b6\u6001\u627e\u5230\u5b50\u95ee\u9898\u5411\u4e0b\u9012\u5f52\u3002 \u2003\u4f46 $m$ \u4e0e $n$ \u7684\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u65e0\u6cd5\u7b80\u5355\u7684\u5411\u4e0b\u5212\u5206\uff0c\u8fd9\u65f6\u9700\u8981\u8f6c\u6362\u601d\u8def\u3002\u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u4e8e\u627e\u5230\u5bf9\u6570\u7ec4 $X$ \u548c $Y$ \u7684\u4e00\u79cd\u5212\u5206\uff1a $$ \\begin{aligned} \\lbrace X[0],\\ ...,X[i-1] \\ &|\\ X[i],\\ ...,X[m-1] \\rbrace \\\\ \\lbrace Y[0],\\ ...,Y[j-1] \\ &|\\ Y[j],\\ ...,Y[n-1] \\rbrace \\\\ i \\in [0,\\ m],\\ & j \\in [0,\\ n] \\end{aligned} $$ \u8fd9\u79cd\u5212\u5206\u8981\u6ee1\u8db3\uff1a $$ \\begin{cases} i+j=m-i+n-j\\ (or\\ i+j=m-i+n-j+1)& \\\\ X[i-1]\\leq Y[j] \\ \\ and \\ \\ Y[j-1] \\leq X[i]& \\end{cases} $$ \u2003\u8fd9\u91cc\u5f53 $m+n$ \u4e3a\u5947\u6570\uff0c\u4ee4\u5de6\u8fb9\u7684\u90e8\u5206\u591a\u4e00\u4e2a\u5143\u7d20\uff0c\u65b9\u4fbf\u7edf\u4e00\u516c\u5f0f\u3002\u4e14 $m$ \u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e $n$\uff0c\u5426\u5219 $j$ \u53ef\u4ee5\u4e3a\u8d1f\u3002 \u2003\u7ecf\u8fc7\u8fd9\u4e9b\u6b65\u9aa4\u540e\uff0c\u539f\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u7684\u641c\u7d22\u95ee\u9898\uff1a\u5728\u533a\u95f4 $[0,\\ m]$ \u4e2d\u627e\u5230 $i$\uff0c\u4f7f\u5f97 $j=(m+n+1)/2-i$ \u4e14 $X[i-1]\\leq Y[j]$ \u4e14 $Y[j-1] \\leq X[i]$\u3002\u6839\u636e\u8fd9\u4e9b\u6761\u4ef6\uff0c\u5728 $[0,\\ m]$ \u5185\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u3002\u6700\u540e\u5728\u4ee3\u7801\u4e2d\u8981\u6ce8\u610f\u53d6\u5230\u4e34\u754c\u503c\u6761\u4ef6\u7684\u5224\u65ad\uff1a \u2003\u2460 \u5f53 $i==0$ \u4e14 $Y[j-1]\\leq X[i]$ \u65f6\uff0c$i$ \u7684\u4f4d\u7f6e\u6b63\u786e\uff0c\u5728\u53e6\u4e00\u4e2a\u6761\u4ef6\u4e2d\u6ce8\u610f\u5224\u65ad $i!=0$\u3002 \u2003\u2461 \u5f53 $i==m$ \u4e14 $X[i-1]\\leq Y[j]$ \u65f6\uff0c$i$ \u7684\u4f4d\u7f6e\u6b63\u786e\uff0c\u5728\u53e6\u4e00\u4e2a\u6761\u4ef6\u4e2d\u6ce8\u610f\u5224\u65ad $i!=m$\u3002 \u2003\u2462 $j$ \u53ef\u4ee5\u53d6\u5230\u4e34\u754c\u503c\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u6570\u7ec4\u957f\u5ea6\u76f8\u7b49\u4e14 $i$ \u53d6\u5230\u4e86\u4e34\u754c\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 double FindMedianInSortedArrays ( int X [], int Y [], int xLen , int yLen ) { if ( xLen > yLen ) { int * tA = X ; int tN = xLen ; X = Y ; xLen = yLen ; Y = tA ; yLen = tN ; } int iLeft = 0 , iRight = xLen ; while ( iLeft <= iRight ) { int i = ( iLeft + iRight ) / 2 ; int j = ( xLen + yLen + 1 ) / 2 - i ; if ( i != xLen && Y [ j - 1 ] > X [ i ]) { iLeft = i + 1 ; } else if ( i != 0 && X [ i - 1 ] > Y [ j ]) { iRight = i - 1 ; } else { int maxLeft ; if ( i == 0 ) { maxLeft = Y [ j - 1 ]; } else if ( j == 0 ) { maxLeft = X [ i - 1 ]; } else { maxLeft = max ( X [ i - 1 ], Y [ j - 1 ]); } if (( xLen + yLen ) & 1 == 1 ) { return maxLeft ; } int minRight ; if ( i == xLen ) { minRight = Y [ j ]; } else if ( j == yLen ) { minRight = X [ i ]; } else { minRight = min ( X [ i ], Y [ j ]); } return ( maxLeft + minRight ) / 2.0 ; } } return - INF ; }","title":"3. \u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},{"location":"3-TransportLayer/3.1/","text":"1. \u4f20\u8f93\u5c42\u6982\u8ff0 (1). \u4f20\u8f93\u5c42\u529f\u80fd \u2003\u4f20\u8f93\u5c42\u4e3a\u8fd0\u884c\u5728\u4e0d\u540c\u4e3b\u673a (\u7aef\u7cfb\u7edf)\u7684\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u4e00\u79cd\u903b\u8f91\u901a\u4fe1\u673a\u5236(\u7aef-\u7aef)\uff0c\u4f20\u8f93\u5c42\u534f\u8bae\u53ea\u5de5\u4f5c\u5728 \u7aef\u7cfb\u7edf \u4e2d\u3002 \u2003\u4f20\u8f93\u5c42\u534f\u8bae\u7684\u529f\u80fd\uff1a \u2003\u2460 \u53d1\u9001\u65b9\uff1a\u5c06\u5e94\u7528\u5c42\u9012\u4ea4\u7684\u6d88\u606f\u5206\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u62a5\u6587\u6bb5 ( segment )\uff0c\u5e76\u5411\u4e0b\u4f20\u7ed9\u7f51\u7edc\u5c42 \u2003\u2461 \u63a5\u6536\u65b9\uff1a\u5c06\u63a5\u6536\u5230\u7684\u62a5\u6587\u6bb5\u7ec4\u88c5\u6210\u6d88\u606f\uff0c\u5411\u4e0a\u4ea4\u7ed9\u5e94\u7528\u5c42\u3002 (2). \u4f20\u8f93\u5c42\u548c\u7f51\u7edc\u5c42 \u7f51\u7edc\u5c42\uff1a\u63d0\u4f9b\u4e3b\u673a\u4e4b\u95f4\u7684\u903b\u8f91\u901a\u4fe1\u673a\u5236 \u4f20\u8f93\u5c42\uff1a\u63d0\u4f9b\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u7684\u903b\u8f91\u901a\u4fe1\u673a\u5236\uff0c\u4f4d\u4e8e\u7f51\u7edc\u5c42\u4e4b\u4e0a\uff0c\u4f9d\u8d56\u4e8e\u7f51\u7edc\u5c42\u670d\u52a1 (3). Internet \u4f20\u8f93\u5c42\u534f\u8bae \u2003 TCP: \u53ef\u9760\u6309\u5e8f\u7684\u4ea4\u4ed8\u670d\u52a1\uff0c\u6d41\u91cf\u63a7\u5236\u3001\u62e5\u585e\u63a7\u5236\u3001\u9762\u5411\u8fde\u63a5\u3002 \u2003 UDP: \u4e0d\u53ef\u9760\u7684\u4ea4\u4ed8\u670d\u52a1\uff0c\u201c\u5c3d\u529b\u800c\u4e3a\u201d\u7684\u6a21\u578b\uff0c\u53ea\u5b9e\u73b0\u4f20\u8f93\u5c42\u5fc5\u8981\u7684\u670d\u52a1\uff0c\u5982\u591a\u8def\u5206\u7528\u3001\u591a\u8def\u590d\u7528 \u2003\u4e24\u79cd\u670d\u52a1\u5747\u6ca1\u6709\u5ef6\u8fdf\u548c\u5e26\u5bbd\u65b9\u9762\u7684\u4fdd\u969c\u3002 2. \u591a\u8def\u590d\u7528\u548c\u591a\u8def\u5206\u7528 (1). \u6982\u8ff0 \u2003\u591a\u8def\u5206\u7528\u548c\u591a\u8def\u590d\u7528\u662f\u4f20\u8f93\u5c42\u5fc5\u8981\u7684\u529f\u80fd\u3002\u5982\u679c\u67d0\u5c42\u7684\u4e00\u4e2a\u534f\u8bae\u76f4\u63a5\u5bf9\u5e94\u4e0a\u5c42\u7684\u591a\u4e2a\u534f\u8bae/\u5b9e\u4f53\uff0c\u5219\u9700\u8981\u590d\u7528/\u5206\u7528\u3002 \u2003\u63a5\u6536\u7aef\u8fdb\u884c\u591a\u8def\u5206\u7528\uff1a\u4f20\u8f93\u5c42\u4f9d\u636e\u5934\u90e8\u4fe1\u606f\u5c06\u6536\u5230\u7684 Segment \u4ea4\u7ed9\u6b63\u786e\u7684 Socket \uff0c\u5373\u4e0d\u540c\u7684\u8fdb\u7a0b\u3002 \u2003\u53d1\u9001\u7aef\u8fdb\u884c\u591a\u8def\u590d\u7528\uff1a\u4ece\u591a\u4e2a Socket \u63a5\u6536\u6570\u636e\uff0c\u4e3a\u6bcf\u5757\u6570\u636e\u5c01\u88c5\u4e0a\u5934\u90e8\u4fe1\u606f\uff0c\u751f\u6210 Segment \uff0c\u4ea4\u7ed9\u7f51\u7edc\u5c42\u3002 (2). \u591a\u8def\u5206\u7528 \u2003\u4e3b\u673a\u63a5\u6536\u5230 IP \u6570\u636e\u62a5( datagram )\uff0c\u6bcf\u4e2a\u6570\u636e\u62a5\u643a\u5e26\u6e90 IP \u5730\u5740\u3001\u76ee\u7684 IP \u5730\u5740\u3001\u4e00\u4e2a\u4f20\u8f93\u5c42\u7684 Segment \uff1b\u6bcf\u4e2a\u6bb5\u643a\u5e26\u6e90\u7aef\u53e3\u53f7\u548c\u76ee\u7684\u7aef\u53e3\u53f7\u3002 \u2003\u4e3b\u673a\u6536\u5230 Segment \u4e4b\u540e\uff0c\u4f20\u8f93\u5c42\u534f\u8bae\u63d0\u53d6 IP \u5730\u5740\u548c\u7aef\u53e3\u53f7\u4fe1\u606f\uff0c\u5c06 Segment \u5bfc\u5411\u76f8\u5e94\u7684 Socket \u3002 \u2460 UDP: \u65e0\u8fde\u63a5\u5206\u7528 \u2003 UDP \u7684 Socket \u7528\u4e8c\u5143\u7ec4\u6807\u8bc6\uff1a (des-IP, des-Port) \u3002\u5982\u679c\u4e24\u4e2a UDP \u62a5\u6587\u6bb5\u6709\u4e0d\u540c\u7684 \u6e90 IP \u6216 \u6e90\u7aef\u53e3\u53f7\uff0c\u4f46\u76ee\u7684 IP \u548c\u76ee\u7684\u7aef\u53e3\u53f7\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u901a\u8fc7\u76f8\u540c\u7684 Socket \u5bfc\u5411\u76f8\u540c\u7684\u8fdb\u7a0b\u3002 \u2461 TCP: \u9762\u5411\u8fde\u63a5\u7684\u5206\u7528 \u2003 TCP \u7684 Socket \u7528\u56db\u5143\u7ec4\u6807\u8bc6\uff1a (des-IP, des-Port, src-IP, src-Port) \uff0c\u63a5\u6536\u7aef\u7528\u6240\u6709\u56db\u4e2a\u53c2\u6570\u5c06 Segment \u5bfc\u5411\u5408\u9002\u7684 Socket \u3002\u4e0e UDP \u4e0d\u540c\u7684\u662f\uff0c\u4e24\u4e2a\u5177\u6709\u4e0d\u540c \u6e90 IP \u6216\u6e90\u7aef\u53e3\u53f7\u7684\u5230\u8fbe\u62a5\u6587\u6bb5\u4f1a\u88ab\u5bfc\u5411\u4e24\u4e2a\u4e0d\u540c\u7684 Socket \u3002 3. UDP: User Datagram Protocol (1). UDP \u529f\u80fd \u2003\u2460 \u5728 Internet IP \u534f\u8bae\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5206\u7528\u590d\u7528\uff0c\u5e76\u505a\u4e86\u7b80\u5355\u7684\u9519\u8bef\u6821\u9a8c\u3002\u5728\u4f20\u8f93\u5c42\u505a\u9519\u8bef\u68c0\u6d4b\u7b26\u5408\u201c\u7aef-\u7aef\u539f\u5219\u201d\u3002 \u2003\u2461 \u56e0\u4e3a IP \u534f\u8bae\u5c31\u662f\u5c3d\u529b\u800c\u4e3a ( Best effort ) \u6a21\u578b\uff0c\u6240\u4ee5 UDP \u4e5f\u662f\uff1b\u5b83\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u4e22\u5931\u3001\u975e\u6309\u9700\u5230\u8fbe\u3002 \u2003\u2462 UDP \u662f\u65e0\u8fde\u63a5\u7684\uff1a\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u4e0d\u9700\u8981\u63e1\u624b\uff0c\u6bcf\u4e2a UDP \u6bb5\u7684\u5904\u7406\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\u3001\u76f8\u4e92\u72ec\u7acb\u3002 \u2003\u2463 \u7528\u4e8e\u5bb9\u5fcd\u4e22\u5931\u3001\u901f\u7387\u654f\u611f\u7684\u573a\u5408\uff1a\u6d41\u5a92\u4f53\u5e94\u7528\u3001 DNS \u3001 SNMP \u7b49\u3002 (2). UDP \u7684\u4f18\u70b9 \u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c\u51cf\u5c11\u5ef6\u8fdf\uff0c\u5b9e\u73b0\u7b80\u5355 \u5934\u90e8\u5f00\u9500\u5c11 \u6ca1\u6709\u62e5\u585e\u63a7\u5236\uff0c\u5e94\u7528\u5c42\u53ef\u4ee5\u589e\u52a0\u53ef\u9760\u6027\u673a\u5236\u3001\u9519\u8bef\u6062\u590d\u673a\u5236 (3). UDP \u62a5\u6587\u6bb5\u7684\u683c\u5f0f (4). UDP \u6821\u9a8c\u548c ( checksum ) \u2003\u7528\u4e8e\u68c0\u6d4b UDP \u6bb5\u5728\u4f20\u8f93\u4e2d\u662f\u5426\u53d1\u751f\u9519\u8bef\uff0c\u5982\u4f4d\u7ffb\u8f6c\u3002 \u2003\u53d1\u9001\u65b9\u751f\u6210\u6821\u9a8c\u548c\uff1a \u2003\u2460 \u5c06\u6bb5\u7684\u5185\u5bb9\u89c6\u4e3a 16-bit \u6574\u6570\u3002 \u2003\u2461 \u6821\u9a8c\u548c\u8ba1\u7b97\uff1a\u8ba1\u7b97\u6240\u6709\u6574\u6570\u7684\u548c\uff0c\u8fdb\u4f4d\u52a0\u5728\u6574\u6570\u7684\u540e\u9762\uff0c\u6700\u540e\u5c06\u5f97\u5230\u7684\u503c\u6309\u4f4d\u53d6\u53cd \u2003\u2462 \u5c06\u6821\u9a8c\u548c\u653e\u5165\u6821\u9a8c\u548c\u5b57\u6bb5 \u2003\u63a5\u6536\u65b9\u5229\u7528\u6821\u9a8c\u548c\uff1a \u2003\u2002\u63a5\u6536\u5e76\u6bd4\u8f83\uff1b\u82e5\u4e0d\u76f8\u7b49\uff0c\u5219\u68c0\u6d4b\u51fa\u9519\u8bef\uff1b\u82e5\u76f8\u7b49\uff0c\u5219\u672a\u68c0\u6d4b\u51fa\u9519\u8bef (\u4e0d\u4ee3\u8868\u65e0\u9519\u8bef)\u3002","title":"1.Introduction to Transport Layer"},{"location":"3-TransportLayer/3.1/#1","text":"","title":"1. \u4f20\u8f93\u5c42\u6982\u8ff0"},{"location":"3-TransportLayer/3.1/#1_1","text":"\u4f20\u8f93\u5c42\u4e3a\u8fd0\u884c\u5728\u4e0d\u540c\u4e3b\u673a (\u7aef\u7cfb\u7edf)\u7684\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u4e00\u79cd\u903b\u8f91\u901a\u4fe1\u673a\u5236(\u7aef-\u7aef)\uff0c\u4f20\u8f93\u5c42\u534f\u8bae\u53ea\u5de5\u4f5c\u5728 \u7aef\u7cfb\u7edf \u4e2d\u3002 \u2003\u4f20\u8f93\u5c42\u534f\u8bae\u7684\u529f\u80fd\uff1a \u2003\u2460 \u53d1\u9001\u65b9\uff1a\u5c06\u5e94\u7528\u5c42\u9012\u4ea4\u7684\u6d88\u606f\u5206\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u62a5\u6587\u6bb5 ( segment )\uff0c\u5e76\u5411\u4e0b\u4f20\u7ed9\u7f51\u7edc\u5c42 \u2003\u2461 \u63a5\u6536\u65b9\uff1a\u5c06\u63a5\u6536\u5230\u7684\u62a5\u6587\u6bb5\u7ec4\u88c5\u6210\u6d88\u606f\uff0c\u5411\u4e0a\u4ea4\u7ed9\u5e94\u7528\u5c42\u3002","title":"(1). \u4f20\u8f93\u5c42\u529f\u80fd"},{"location":"3-TransportLayer/3.1/#2","text":"\u7f51\u7edc\u5c42\uff1a\u63d0\u4f9b\u4e3b\u673a\u4e4b\u95f4\u7684\u903b\u8f91\u901a\u4fe1\u673a\u5236 \u4f20\u8f93\u5c42\uff1a\u63d0\u4f9b\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u7684\u903b\u8f91\u901a\u4fe1\u673a\u5236\uff0c\u4f4d\u4e8e\u7f51\u7edc\u5c42\u4e4b\u4e0a\uff0c\u4f9d\u8d56\u4e8e\u7f51\u7edc\u5c42\u670d\u52a1","title":"(2). \u4f20\u8f93\u5c42\u548c\u7f51\u7edc\u5c42"},{"location":"3-TransportLayer/3.1/#3-internet","text":"TCP: \u53ef\u9760\u6309\u5e8f\u7684\u4ea4\u4ed8\u670d\u52a1\uff0c\u6d41\u91cf\u63a7\u5236\u3001\u62e5\u585e\u63a7\u5236\u3001\u9762\u5411\u8fde\u63a5\u3002 \u2003 UDP: \u4e0d\u53ef\u9760\u7684\u4ea4\u4ed8\u670d\u52a1\uff0c\u201c\u5c3d\u529b\u800c\u4e3a\u201d\u7684\u6a21\u578b\uff0c\u53ea\u5b9e\u73b0\u4f20\u8f93\u5c42\u5fc5\u8981\u7684\u670d\u52a1\uff0c\u5982\u591a\u8def\u5206\u7528\u3001\u591a\u8def\u590d\u7528 \u2003\u4e24\u79cd\u670d\u52a1\u5747\u6ca1\u6709\u5ef6\u8fdf\u548c\u5e26\u5bbd\u65b9\u9762\u7684\u4fdd\u969c\u3002","title":"(3). Internet \u4f20\u8f93\u5c42\u534f\u8bae"},{"location":"3-TransportLayer/3.1/#2_1","text":"","title":"2. \u591a\u8def\u590d\u7528\u548c\u591a\u8def\u5206\u7528"},{"location":"3-TransportLayer/3.1/#1_2","text":"\u591a\u8def\u5206\u7528\u548c\u591a\u8def\u590d\u7528\u662f\u4f20\u8f93\u5c42\u5fc5\u8981\u7684\u529f\u80fd\u3002\u5982\u679c\u67d0\u5c42\u7684\u4e00\u4e2a\u534f\u8bae\u76f4\u63a5\u5bf9\u5e94\u4e0a\u5c42\u7684\u591a\u4e2a\u534f\u8bae/\u5b9e\u4f53\uff0c\u5219\u9700\u8981\u590d\u7528/\u5206\u7528\u3002 \u2003\u63a5\u6536\u7aef\u8fdb\u884c\u591a\u8def\u5206\u7528\uff1a\u4f20\u8f93\u5c42\u4f9d\u636e\u5934\u90e8\u4fe1\u606f\u5c06\u6536\u5230\u7684 Segment \u4ea4\u7ed9\u6b63\u786e\u7684 Socket \uff0c\u5373\u4e0d\u540c\u7684\u8fdb\u7a0b\u3002 \u2003\u53d1\u9001\u7aef\u8fdb\u884c\u591a\u8def\u590d\u7528\uff1a\u4ece\u591a\u4e2a Socket \u63a5\u6536\u6570\u636e\uff0c\u4e3a\u6bcf\u5757\u6570\u636e\u5c01\u88c5\u4e0a\u5934\u90e8\u4fe1\u606f\uff0c\u751f\u6210 Segment \uff0c\u4ea4\u7ed9\u7f51\u7edc\u5c42\u3002","title":"(1). \u6982\u8ff0"},{"location":"3-TransportLayer/3.1/#2_2","text":"\u4e3b\u673a\u63a5\u6536\u5230 IP \u6570\u636e\u62a5( datagram )\uff0c\u6bcf\u4e2a\u6570\u636e\u62a5\u643a\u5e26\u6e90 IP \u5730\u5740\u3001\u76ee\u7684 IP \u5730\u5740\u3001\u4e00\u4e2a\u4f20\u8f93\u5c42\u7684 Segment \uff1b\u6bcf\u4e2a\u6bb5\u643a\u5e26\u6e90\u7aef\u53e3\u53f7\u548c\u76ee\u7684\u7aef\u53e3\u53f7\u3002 \u2003\u4e3b\u673a\u6536\u5230 Segment \u4e4b\u540e\uff0c\u4f20\u8f93\u5c42\u534f\u8bae\u63d0\u53d6 IP \u5730\u5740\u548c\u7aef\u53e3\u53f7\u4fe1\u606f\uff0c\u5c06 Segment \u5bfc\u5411\u76f8\u5e94\u7684 Socket \u3002 \u2460 UDP: \u65e0\u8fde\u63a5\u5206\u7528 \u2003 UDP \u7684 Socket \u7528\u4e8c\u5143\u7ec4\u6807\u8bc6\uff1a (des-IP, des-Port) \u3002\u5982\u679c\u4e24\u4e2a UDP \u62a5\u6587\u6bb5\u6709\u4e0d\u540c\u7684 \u6e90 IP \u6216 \u6e90\u7aef\u53e3\u53f7\uff0c\u4f46\u76ee\u7684 IP \u548c\u76ee\u7684\u7aef\u53e3\u53f7\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u901a\u8fc7\u76f8\u540c\u7684 Socket \u5bfc\u5411\u76f8\u540c\u7684\u8fdb\u7a0b\u3002 \u2461 TCP: \u9762\u5411\u8fde\u63a5\u7684\u5206\u7528 \u2003 TCP \u7684 Socket \u7528\u56db\u5143\u7ec4\u6807\u8bc6\uff1a (des-IP, des-Port, src-IP, src-Port) \uff0c\u63a5\u6536\u7aef\u7528\u6240\u6709\u56db\u4e2a\u53c2\u6570\u5c06 Segment \u5bfc\u5411\u5408\u9002\u7684 Socket \u3002\u4e0e UDP \u4e0d\u540c\u7684\u662f\uff0c\u4e24\u4e2a\u5177\u6709\u4e0d\u540c \u6e90 IP \u6216\u6e90\u7aef\u53e3\u53f7\u7684\u5230\u8fbe\u62a5\u6587\u6bb5\u4f1a\u88ab\u5bfc\u5411\u4e24\u4e2a\u4e0d\u540c\u7684 Socket \u3002","title":"(2). \u591a\u8def\u5206\u7528"},{"location":"3-TransportLayer/3.1/#3-udp-user-datagram-protocol","text":"","title":"3. UDP: User Datagram Protocol"},{"location":"3-TransportLayer/3.1/#1-udp","text":"\u2460 \u5728 Internet IP \u534f\u8bae\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5206\u7528\u590d\u7528\uff0c\u5e76\u505a\u4e86\u7b80\u5355\u7684\u9519\u8bef\u6821\u9a8c\u3002\u5728\u4f20\u8f93\u5c42\u505a\u9519\u8bef\u68c0\u6d4b\u7b26\u5408\u201c\u7aef-\u7aef\u539f\u5219\u201d\u3002 \u2003\u2461 \u56e0\u4e3a IP \u534f\u8bae\u5c31\u662f\u5c3d\u529b\u800c\u4e3a ( Best effort ) \u6a21\u578b\uff0c\u6240\u4ee5 UDP \u4e5f\u662f\uff1b\u5b83\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u4e22\u5931\u3001\u975e\u6309\u9700\u5230\u8fbe\u3002 \u2003\u2462 UDP \u662f\u65e0\u8fde\u63a5\u7684\uff1a\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u4e0d\u9700\u8981\u63e1\u624b\uff0c\u6bcf\u4e2a UDP \u6bb5\u7684\u5904\u7406\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\u3001\u76f8\u4e92\u72ec\u7acb\u3002 \u2003\u2463 \u7528\u4e8e\u5bb9\u5fcd\u4e22\u5931\u3001\u901f\u7387\u654f\u611f\u7684\u573a\u5408\uff1a\u6d41\u5a92\u4f53\u5e94\u7528\u3001 DNS \u3001 SNMP \u7b49\u3002","title":"(1). UDP \u529f\u80fd"},{"location":"3-TransportLayer/3.1/#2-udp","text":"\u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c\u51cf\u5c11\u5ef6\u8fdf\uff0c\u5b9e\u73b0\u7b80\u5355 \u5934\u90e8\u5f00\u9500\u5c11 \u6ca1\u6709\u62e5\u585e\u63a7\u5236\uff0c\u5e94\u7528\u5c42\u53ef\u4ee5\u589e\u52a0\u53ef\u9760\u6027\u673a\u5236\u3001\u9519\u8bef\u6062\u590d\u673a\u5236","title":"(2). UDP \u7684\u4f18\u70b9"},{"location":"3-TransportLayer/3.1/#3-udp","text":"","title":"(3). UDP \u62a5\u6587\u6bb5\u7684\u683c\u5f0f"},{"location":"3-TransportLayer/3.1/#4-udp-checksum","text":"\u7528\u4e8e\u68c0\u6d4b UDP \u6bb5\u5728\u4f20\u8f93\u4e2d\u662f\u5426\u53d1\u751f\u9519\u8bef\uff0c\u5982\u4f4d\u7ffb\u8f6c\u3002 \u2003\u53d1\u9001\u65b9\u751f\u6210\u6821\u9a8c\u548c\uff1a \u2003\u2460 \u5c06\u6bb5\u7684\u5185\u5bb9\u89c6\u4e3a 16-bit \u6574\u6570\u3002 \u2003\u2461 \u6821\u9a8c\u548c\u8ba1\u7b97\uff1a\u8ba1\u7b97\u6240\u6709\u6574\u6570\u7684\u548c\uff0c\u8fdb\u4f4d\u52a0\u5728\u6574\u6570\u7684\u540e\u9762\uff0c\u6700\u540e\u5c06\u5f97\u5230\u7684\u503c\u6309\u4f4d\u53d6\u53cd \u2003\u2462 \u5c06\u6821\u9a8c\u548c\u653e\u5165\u6821\u9a8c\u548c\u5b57\u6bb5 \u2003\u63a5\u6536\u65b9\u5229\u7528\u6821\u9a8c\u548c\uff1a \u2003\u2002\u63a5\u6536\u5e76\u6bd4\u8f83\uff1b\u82e5\u4e0d\u76f8\u7b49\uff0c\u5219\u68c0\u6d4b\u51fa\u9519\u8bef\uff1b\u82e5\u76f8\u7b49\uff0c\u5219\u672a\u68c0\u6d4b\u51fa\u9519\u8bef (\u4e0d\u4ee3\u8868\u65e0\u9519\u8bef)\u3002","title":"(4). UDP \u6821\u9a8c\u548c (checksum)"},{"location":"3-TransportLayer/3.2/","text":"1. \u53ef\u9760\u6570\u636e\u4f20\u8f93\u57fa\u672c\u539f\u7406 (1). \u6982\u8ff0 \u2003\u4fe1\u9053\u672c\u8eab\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u901a\u8fc7\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u5904\u7406\u4f7f\u4f20\u8f93\u53d8\u5f97\u53ef\u9760\u3002\u53ef\u9760\u7684\u5b9a\u4e49\u4e3a\uff1a\u4e0d\u9519\u3001\u4e0d\u4e22\u3001\u4e0d\u4e71\u3002\u4fe1\u9053\u7684\u4e0d\u53ef\u9760\u6027\u51b3\u5b9a\u4e86\u53ef\u9760\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u590d\u6742\u6027\u3002 \u2003\u53ef\u9760\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u57fa\u672c\u7ed3\u6784\uff1a \u5e94\u7528\u5c42\u4e0e\u4f20\u8f93\u5c42\u4e4b\u95f4\u7684\u8c03\u7528\u662f\u5355\u5411\u7684\uff1a\u53ef\u9760\u6570\u636e\u4f20\u8f93\u5e95\u5c42\u5b9e\u73b0\u4ea4\u7ed9\u4f20\u8f93\u5c42\u5b9e\u73b0\uff1b\u4f20\u8f93\u5c42\u548c\u7f51\u7edc\u5c42\u4e4b\u95f4\u7684\u8c03\u7528\u65f6\u53cc\u5411\u7684\uff1a\u5728\u4e0d\u53ef\u9760\u4fe1\u9053\u4e0a\u6570\u636e\u4f20\u8f93\u4e0d\u4ec5\u9700\u8981\u5355\u5411\u7684\u6570\u636e\u6d41\u52a8\uff0c\u8fd8\u9700\u8981\u53cc\u5411\u7684\u63a7\u5236\u4fe1\u606f\u6d41\u52a8\u3002 \u2003\u4ee5\u4e0b\u7684\u8ba8\u8bba\u4ec5\u8003\u8651\u5355\u5411 ( unidirectional ) \u6570\u636e\u4f20\u8f93\u3002 (2). Rdt1.0: \u53ef\u9760\u4fe1\u9053 \u2003\u5047\u8bbe\u5e95\u5c42\u4fe1\u9053\u5904\u4e8e\u7406\u60f3\u72b6\u6001\uff0c\u5b8c\u5168\u53ef\u9760\uff1a\u4e0d\u53d1\u751f\u4f4d\u9519\u8bef\u3001\u4e0d\u4e22\u5f03\u5206\u7ec4\u3001\u4e0d\u4e71\u5e8f\u3002 \u2003\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7684\u72b6\u6001\u673a\u72ec\u7acb\uff0c\u4e0d\u9700\u8981\u4ea4\u4e92\u63a7\u5236\u6d88\u606f\u3002 (3). Rdt2.0: \u4ea7\u751f\u4f4d\u9519\u8bef\u7684\u4fe1\u9053 \u2003\u5047\u8bbe\u4fe1\u9053\u53ea\u4f1a\u4ea7\u751f\u4f4d\u9519\u8bef\uff0c\u5e95\u5c42\u4fe1\u9053\u53ef\u80fd\u7ffb\u8f6c\u67d0\u4e9b\u4f4d\u3002\u53d1\u9001\u65b9\u53ef\u4ee5\u4f7f\u7528 checksum \u673a\u5236\u68c0\u6d4b\u9519\u8bef\uff1b\u5982\u679c\u8981\u4ece\u9519\u8bef\u4e2d\u6062\u590d\uff0c\u5c31\u8981\u4f7f\u7528\u786e\u8ba4\u673a\u5236 ( Acknowledgements, ACK )\uff1a\u63a5\u6536\u65b9\u663e\u5f0f\u544a\u8bc9\u53d1\u9001\u65b9\u5df2\u6b63\u786e\u63a5\u6536\uff1b\u901a\u8fc7\u53d1\u9001 NAK \u544a\u77e5\u53d1\u9001\u65b9\u5b58\u5728\u9519\u8bef\uff0c\u53d1\u9001\u65b9\u6536\u5230 NAK \u540e\uff0c\u91cd\u4f20\u5206\u7ec4\u3002 \u2003\u57fa\u4e8e\u8fd9\u79cd\u91cd\u4f20\u673a\u5236\u7684 rdt \u534f\u8bae\u79f0\u4e3a ARQ(Automatic Repeat reQuest) \u534f\u8bae\u3002 ARQ \u534f\u8bae\u7684\u5b9e\u73b0\u9700\u8981\u4e09\u79cd\u529f\u80fd\uff1a1.\u5dee\u9519\u68c0\u6d4b\uff1b2.\u63a5\u6536\u65b9\u53cd\u9988\uff1b3.\u91cd\u4f20\u3002 \u2003\u5f53\u53d1\u9001\u65b9\u5904\u4e8e\u7b49\u5f85 ACK/NAK \u7684\u72b6\u6001\u65f6\uff0c\u4e0d\u80fd\u4ece\u4e0a\u5c42\u63a5\u6536\u65b0\u6570\u636e\uff0c\u9664\u975e\u5b83\u786e\u4fe1\u63a5\u6536\u65b9\u6b63\u786e\u63a5\u6536\u5206\u7ec4\u3002\u8fd9\u6837\u7684\u534f\u8bae\u88ab\u79f0\u4e3a\u505c-\u7b49 ( stop-and-wait ) \u534f\u8bae\u3002 (4). Rdt2.1\u30012.2: \u6539\u8fdb Rdt2.0 \u2003 Rdt2.0 \u5b58\u5728\u81f4\u547d\u7f3a\u9677\uff1a\u65e0\u6cd5\u5904\u7406 ACK/NAK \u53d1\u751f\u9519\u8bef\u6216\u8005\u88ab\u7834\u574f ( corrupted ) \u7684\u60c5\u51b5\u3002\u89e3\u51b3\u7684\u529e\u6cd5\u662f\u5982\u679c\u53d1\u9001\u65b9\u6536\u5230\u635f\u574f\u7684 ACK/NAK \u5c31\u8ba9\u53d1\u9001\u65b9\u91cd\u4f20\uff0c\u4f46\u7b80\u5355\u7684\u91cd\u4f20\u4f1a\u5bfc\u81f4\u91cd\u590d\u5206\u7ec4 ( duplicate packet ) \u95ee\u9898\uff1a\u63a5\u6536\u65b9\u53ef\u80fd\u6536\u5230\u76f8\u540c\u7684\u6570\u636e\uff0c\u56e0\u6b64 Rdt2.1 \u5f15\u5165\u5e8f\u5217\u53f7 ( sequence number ) \u673a\u5236\uff1a\u4e00\u65e6\u91cd\u590d\uff0c\u63a5\u6536\u65b9\u4e22\u5f03\u91cd\u590d\u5206\u7ec4\u3002 \u2003\u56e0\u4e3a\u91c7\u7528\u505c-\u7b49\u534f\u8bae\uff0c\u53ea\u9700\u8981\u4e24\u4e2a\u5e8f\u5217\u53f7\u5c31\u8db3\u591f\uff0c\u56e0\u6b64\u4e0e Rdt2.0 \u76f8\u6bd4\uff0c\u72b6\u6001\u6570\u91cf\u7ffb\u500d\u3002\u63a5\u6536\u65b9\u9700\u8981\u5224\u65ad\u662f\u5426\u91cd\u590d\uff1a\u6536\u5230\u4e00\u4e2a\u91cd\u590d\u5206\u7ec4\u540e\uff0c\u4e22\u5f03\uff0c\u5e76\u53d1\u9001\u4e00\u4e2a ACK \u3002 \u2003\u4ece\u53d1\u9001\u65b9\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u6536\u5230\u4e00\u4e2a NAK \uff0c\u7b49\u540c\u4e8e\u63a5\u6536\u65b9\u6700\u540e\u6536\u5230\u4e0a\u4e00\u4e2a\u6210\u529f\u53d1\u9001\u7684\u5305\u3002\u56e0\u6b64\uff0c Rdt2.2 \u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528 ACK + seq number \u4ee3\u66ff NAK \uff1b\u4ece\u63a5\u6536\u65b9\u6765\u770b\uff0c\u9700\u8981\u91cd\u4f20\u7684\u4e24\u79cd\u60c5\u51b5\u884c\u4e3a\u76f8\u540c\uff0c\u56e0\u6b64\u5408\u5e76\u3002 (5). Rdt3.0 \u2003\u4fe1\u9053\u65e2\u53ef\u80fd\u53d1\u751f\u9519\u8bef\uff0c\u4e5f\u53ef\u80fd\u4e22\u5931\u5206\u7ec4\u3002\u53d1\u9001\u65b9\u53d1\u9001\u7684\u5206\u7ec4\u3001\u63a5\u6536\u65b9\u8fd4\u56de\u7684 ACK \u90fd\u53ef\u80fd\u4f1a\u53d1\u751f\u4e22\u5931\uff0c\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u8ba9\u53d1\u9001\u65b9\u7b49\u5f85\u4e00\u4e2a\u5408\u7406\u7684\u65f6\u95f4\uff0c\u8fd9\u4e2a\u65f6\u95f4\u8fc7\u540e\uff0c\u5982\u679c\u6ca1\u6536\u5230 ACK \uff0c\u5219\u91cd\u4f20\u3002\u5982\u679c\u662f\u56e0\u4e3a\u5ef6\u8fdf\u95ee\u9898\uff0c\u6570\u636e\u5305\u5e76\u672a\u771f\u751f\u4e22\u5931\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e8f\u5217\u53f7\u89e3\u51b3\u91cd\u590d\u5206\u7ec4\u95ee\u9898\u3002 \u2003\u5bf9\u4e8e\u53d1\u9001\u65b9\u6765\u8bf4\uff0c\u5206\u7ec4\u4e22\u5931\u3001 ACK \u4e22\u5931\u3001 ACK \u635f\u574f\u3001 ACK \u7684\u5e8f\u5217\u5217\u53f7\u9519\u8bef\u53d1\u751f\u65f6\u90fd\u4f1a\u5bfc\u81f4\u8d85\u65f6\uff0c\u7136\u540e\u91cd\u4f20\u3002\u5982\u679c\u5b9a\u65f6\u5668\u8bbe\u7f6e\u8fc7\u77ed\u9020\u6210\u63a5\u6536\u65b9\u5728\u7b49\u5f85\u72b6\u6001\u4e0b\u6536\u5230\u635f\u574f\u6216\u4e0d\u5bf9\u5e94\u7684 ACK \u65f6\u4f1a\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684\u91cd\u4f20\u3002 \u2003 Rdt3.0 \u53ef\u4ee5\u6b63\u786e\u5de5\u4f5c\uff0c\u4f46\u6027\u80fd\u5f88\u5dee\u3002\u505c-\u7b49\u534f\u8bae\u4fe1\u9053\u5229\u7528\u7387\uff1a$\\frac{L/R}{RTT+L/R}, RTT=2\u00d7d_{prop}$ 2. \u6ed1\u52a8\u7a97\u53e3\u534f\u8bae (1). \u6982\u8ff0 \u2003\u9488\u5bf9\u505c-\u7b49\u534f\u8bae\u5229\u7528\u7387\u4f4e\u7684\u539f\u56e0\uff0c\u5229\u7528\u6d41\u6c34\u7ebf\u673a\u5236\uff0c\u5141\u8bb8\u53d1\u9001\u65b9\u5728\u6536\u5230 ACK \u4e4b\u524d\u8fde\u7eed\u53d1\u9001\u591a\u4e2a\u5206\u7ec4\uff0c\u6b64\u65f6\u5229\u7528\u7387\u53d8\u4e3a $\\frac{n\u00d7L/R}{RTT+L/R}$\u3002\u76f8\u5e94\u5730\uff0c\u9700\u8981\u66f4\u5927\u7684\u5e8f\u5217\u53f7\u8303\u56f4\uff0c\u540c\u65f6\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e5f\u9700\u8981\u66f4\u5927\u7684\u7f13\u5b58\u7a7a\u95f4\u3002 \u2003\u8981\u60f3\u5b9e\u73b0\u8fd9\u79cd\u6d41\u6c34\u7ebf\u673a\u5236\uff0c\u5c31\u9700\u8981\u6ed1\u52a8\u7a97\u53e3\u534f\u8bae ( sliding-window protocol )\u3002\u7a97\u53e3\uff1a\u5141\u8bb8\u4f7f\u7528\u7684\u5e8f\u5217\u53f7\u8303\u56f4\uff0c\u6700\u591a\u7b49\u5f85\u786e\u8ba4\u7684\u6d88\u606f\u6570\u3002\u6ed1\u52a8\uff1a\u968f\u7740\u534f\u8bae\u8fd0\u884c\uff0c\u5e8f\u5217\u53f7\u5728\u7a7a\u95f4\u5185\u5411\u524d\u6ed1\u52a8\u3002 (2). GBN \u534f\u8bae ( Go-Back-N ) \u2003\u56fe\u793a\u4e3a\u53d1\u9001\u65b9\u89c6\u89d2\u7684\u5e8f\u53f7\u8303\u56f4\u3002\u57fa\u5e8f\u53f7 base \u4e3a\u6700\u65e9\u5df2\u53d1\u9001\u4f46\u672a\u786e\u8ba4\u7684\u5e8f\u53f7\uff0c nextseqnum \u4e3a\u6700\u5c0f\u7684\u672a\u4f7f\u7528\u5e8f\u53f7\u3002 \u53d1\u9001\u65b9\u54cd\u5e94\u4e8b\u4ef6\uff1a \u2460 \u4e0a\u5c42\u8c03\u7528\uff1a\u53d1\u9001\u65b9\u9996\u5148\u68c0\u67e5\u53d1\u9001\u7a97\u53e3\u662f\u5426\u5df2\u6ee1\uff0c\u5982\u679c\u672a\u6ee1\u5219\u751f\u6210\u5206\u7ec4\u5e76\u53d1\u9001\u3001\u5e76\u66f4\u65b0\u53d8\u91cf\uff1b\u5426\u5219\uff0c\u628a\u6570\u636e\u8fd4\u56de\u7ed9\u4e0a\u5c42\u3002\uff08\u5728\u5b9e\u9645\u5b9e\u73b0\u65f6\uff0c\u4f7f\u7528\u7f13\u5b58\u6216\u540c\u6b65\u673a\u5236) \u2461 \u8d85\u65f6\uff1a\u5982\u679c\u53d1\u751f\u8d85\u65f6\uff0c\u53d1\u9001\u65b9\u91cd\u4f20\u6240\u6709\u5df2\u53d1\u9001\u4f46\u8fd8\u672a\u786e\u8ba4\u7684\u5206\u7ec4\uff1b\u53d1\u9001\u65b9\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5b83\u88ab\u7528\u7ed9\u6700\u65e9\u53d1\u9001\u4f46\u8fd8\u672a\u88ab\u786e\u8ba4\u7684\u5206\u7ec4\u3002\u5728\u6536\u5230\u4e00\u4e2a ACK \u540e\uff0c\u5982\u679c\u4ecd\u6709\u672a\u88ab\u786e\u8ba4\u7684\u5206\u7ec4\uff0c\u91cd\u542f\u5b9a\u65f6\u5668\uff1b\u5426\u5219\u505c\u6b62\u5b9a\u65f6\u5668\u3002 \u2462 \u6536\u5230\u4e00\u4e2a ACK \uff1a GBN \u534f\u8bae\u5bf9\u5206\u7ec4\u91c7\u7528\u7d2f\u79ef\u786e\u8ba4 ( cumulative acknowledgment ) \u7684\u65b9\u5f0f\u3002\u53d1\u9001\u65b9\u66f4\u65b0 base \u548c\u5b9a\u65f6\u5668\uff1b\u5bf9\u63a5\u6536\u65b9\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5206\u7ec4 n \u88ab\u6536\u5230\u4e14\u6309\u5e8f\uff0c\u5219\u63a5\u6536\u65b9\u4e3a n \u53d1\u9001\u4e00\u4e2a ACK \uff0c\u8868\u660e\u5b83\u6536\u5230\u4e86 n \u4e4b\u524d\u4e14\u5305\u62ec n \u7684\u6240\u6709\u5206\u7ec4\uff0c\u5e76\u5411\u4e0a\u5c42\u4ea4\u4ed8\u6570\u636e\uff1b\u5728\u53d1\u9001\u65b9\u7684\u89c6\u89d2\uff0c\u53ef\u80fd\u6ca1\u6709\u6536\u5230\u67d0\u4e2a n-i \u7684 ACK \uff0c\u4f46\u53ea\u8981\u6536\u5230 ACK n \uff0c send_base \u5c31\u79fb\u52a8\u5230 n + 1 \u7684\u4f4d\u7f6e\u3002\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a5\u6536\u65b9\u4e22\u5f03\u5206\u7ec4\uff0c\u5e76\u53d1\u9001 ACK + \u6700\u8fd1\u6536\u5230\u7684\u6309\u5e8f\u5206\u7ec4\u5e8f\u5217\u53f7\u3002 (3) SR \u534f\u8bae ( Selective Repeat ) \u2003 GBN \u534f\u8bae\u4ecd\u5b58\u5728\u6027\u80fd\u95ee\u9898\uff1a\u5f53\u7a97\u53e3\u957f\u5ea6\u548c\u65f6\u5ef6\u5e26\u5bbd\u79ef\u5f88\u5927\uff0c\u6d41\u6c34\u7ebf\u4e2d\u6709\u5f88\u591a\u5206\u7ec4\u65f6\uff0c\u5355\u4e2a\u5206\u7ec4\u7684\u5dee\u9519\u5c31\u4f1a\u5f15\u8d77\u5927\u91cf\u4e0d\u5fc5\u8981\u7684\u91cd\u4f20\u3002 \u53d1\u9001\u65b9\u54cd\u5e94\u4e8b\u4ef6\uff1a \u2460 \u4e0a\u5c42\u8c03\u7528\uff1a\u540c GBN \u3002 \u2461 \u8d85\u65f6\uff1a\u6bcf\u4e2a\u5206\u7ec4\u90fd\u6709\u81ea\u5df1\u7684\u903b\u8f91\u5b9a\u65f6\u5668\u3002 \u2462 \u6536\u5230\u4e00\u4e2a ACK \uff1a\u5982\u679c\u6536\u5230\u7684 ACK \u5728\u7a97\u53e3\u5185\uff0c\u5219\u6807\u8bb0\u4e3a\u5df2\u63a5\u6536\uff1b\u5982\u679c\u6536\u5230\u7684\u5206\u7ec4\u5e8f\u53f7\u7b49\u4e8e send_base \uff0c\u7a97\u53e3\u57fa\u5e8f\u53f7\u79fb\u52a8\u5230\u6700\u5c0f\u5df2\u53d1\u9001\u672a\u786e\u8ba4\u5e8f\u53f7\u5904\uff1b\u5982\u679c\u7a97\u53e3\u53d1\u751f\u79fb\u52a8\uff0c\u4e14\u6709\u53ef\u53d1\u9001\u5e8f\u53f7\uff0c\u5219\u53d1\u9001\u8fd9\u4e9b\u5206\u7ec4\u3002 \u63a5\u6536\u65b9\u54cd\u5e94\u4e8b\u4ef6\uff1a \u2460 \u5728 [ rcv_base , rcv_base + N - 1 ] \u5185\u7684\u5206\u7ec4\u88ab\u63a5\u6536\uff1a\u5373\u6536\u5230\u7684\u5206\u7ec4\u843d\u5728\u63a5\u6536\u65b9\u7684\u7a97\u53e3\u8303\u56f4\u5185\u3002\u9996\u5148\u8fd4\u56de\u4e00\u4e2a ACK \uff1b\u5982\u679c\u8be5\u5206\u7ec4\u4ee5\u524d\u672a\u6536\u5230\uff0c\u7f13\u5b58\u8be5\u5206\u7ec4\uff1b\u5982\u679c\u8be5\u5206\u7ec4\u7b49\u4e8e\u57fa\u5e8f\u53f7 rcv_base \uff0c\u5219\u5c06\u8fde\u7eed\u7684\u7f13\u5b58\u5206\u7ec4\u4ea4\u4ed8\u4e0a\u5c42\uff0c\u63a5\u6536\u7a97\u53e3\u79fb\u52a8\u3002 \u2461 \u5728 [ rcv_base - N , rcv_base - 1 ] \u5185\u7684\u5206\u7ec4\u88ab\u63a5\u6536\uff1a\u5373\u63a5\u6536\u65b9\u5df2\u786e\u8ba4\u63a5\u6536\u5e76\u5728\u7a97\u53e3\u5916\u7684\u91cd\u590d\u5206\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a ACK \u3002 \u2462 \u5176\u4ed6\u60c5\u51b5\uff0c\u5ffd\u7565\u6536\u5230\u7684\u5206\u7ec4\u3002","title":"2.Principles of Reliable Data Transfer"},{"location":"3-TransportLayer/3.2/#1","text":"","title":"1. \u53ef\u9760\u6570\u636e\u4f20\u8f93\u57fa\u672c\u539f\u7406"},{"location":"3-TransportLayer/3.2/#1_1","text":"\u4fe1\u9053\u672c\u8eab\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u901a\u8fc7\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u5904\u7406\u4f7f\u4f20\u8f93\u53d8\u5f97\u53ef\u9760\u3002\u53ef\u9760\u7684\u5b9a\u4e49\u4e3a\uff1a\u4e0d\u9519\u3001\u4e0d\u4e22\u3001\u4e0d\u4e71\u3002\u4fe1\u9053\u7684\u4e0d\u53ef\u9760\u6027\u51b3\u5b9a\u4e86\u53ef\u9760\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u590d\u6742\u6027\u3002 \u2003\u53ef\u9760\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u57fa\u672c\u7ed3\u6784\uff1a \u5e94\u7528\u5c42\u4e0e\u4f20\u8f93\u5c42\u4e4b\u95f4\u7684\u8c03\u7528\u662f\u5355\u5411\u7684\uff1a\u53ef\u9760\u6570\u636e\u4f20\u8f93\u5e95\u5c42\u5b9e\u73b0\u4ea4\u7ed9\u4f20\u8f93\u5c42\u5b9e\u73b0\uff1b\u4f20\u8f93\u5c42\u548c\u7f51\u7edc\u5c42\u4e4b\u95f4\u7684\u8c03\u7528\u65f6\u53cc\u5411\u7684\uff1a\u5728\u4e0d\u53ef\u9760\u4fe1\u9053\u4e0a\u6570\u636e\u4f20\u8f93\u4e0d\u4ec5\u9700\u8981\u5355\u5411\u7684\u6570\u636e\u6d41\u52a8\uff0c\u8fd8\u9700\u8981\u53cc\u5411\u7684\u63a7\u5236\u4fe1\u606f\u6d41\u52a8\u3002 \u2003\u4ee5\u4e0b\u7684\u8ba8\u8bba\u4ec5\u8003\u8651\u5355\u5411 ( unidirectional ) \u6570\u636e\u4f20\u8f93\u3002","title":"(1). \u6982\u8ff0"},{"location":"3-TransportLayer/3.2/#2-rdt10","text":"\u5047\u8bbe\u5e95\u5c42\u4fe1\u9053\u5904\u4e8e\u7406\u60f3\u72b6\u6001\uff0c\u5b8c\u5168\u53ef\u9760\uff1a\u4e0d\u53d1\u751f\u4f4d\u9519\u8bef\u3001\u4e0d\u4e22\u5f03\u5206\u7ec4\u3001\u4e0d\u4e71\u5e8f\u3002 \u2003\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7684\u72b6\u6001\u673a\u72ec\u7acb\uff0c\u4e0d\u9700\u8981\u4ea4\u4e92\u63a7\u5236\u6d88\u606f\u3002","title":"(2). Rdt1.0: \u53ef\u9760\u4fe1\u9053"},{"location":"3-TransportLayer/3.2/#3-rdt20","text":"\u5047\u8bbe\u4fe1\u9053\u53ea\u4f1a\u4ea7\u751f\u4f4d\u9519\u8bef\uff0c\u5e95\u5c42\u4fe1\u9053\u53ef\u80fd\u7ffb\u8f6c\u67d0\u4e9b\u4f4d\u3002\u53d1\u9001\u65b9\u53ef\u4ee5\u4f7f\u7528 checksum \u673a\u5236\u68c0\u6d4b\u9519\u8bef\uff1b\u5982\u679c\u8981\u4ece\u9519\u8bef\u4e2d\u6062\u590d\uff0c\u5c31\u8981\u4f7f\u7528\u786e\u8ba4\u673a\u5236 ( Acknowledgements, ACK )\uff1a\u63a5\u6536\u65b9\u663e\u5f0f\u544a\u8bc9\u53d1\u9001\u65b9\u5df2\u6b63\u786e\u63a5\u6536\uff1b\u901a\u8fc7\u53d1\u9001 NAK \u544a\u77e5\u53d1\u9001\u65b9\u5b58\u5728\u9519\u8bef\uff0c\u53d1\u9001\u65b9\u6536\u5230 NAK \u540e\uff0c\u91cd\u4f20\u5206\u7ec4\u3002 \u2003\u57fa\u4e8e\u8fd9\u79cd\u91cd\u4f20\u673a\u5236\u7684 rdt \u534f\u8bae\u79f0\u4e3a ARQ(Automatic Repeat reQuest) \u534f\u8bae\u3002 ARQ \u534f\u8bae\u7684\u5b9e\u73b0\u9700\u8981\u4e09\u79cd\u529f\u80fd\uff1a1.\u5dee\u9519\u68c0\u6d4b\uff1b2.\u63a5\u6536\u65b9\u53cd\u9988\uff1b3.\u91cd\u4f20\u3002 \u2003\u5f53\u53d1\u9001\u65b9\u5904\u4e8e\u7b49\u5f85 ACK/NAK \u7684\u72b6\u6001\u65f6\uff0c\u4e0d\u80fd\u4ece\u4e0a\u5c42\u63a5\u6536\u65b0\u6570\u636e\uff0c\u9664\u975e\u5b83\u786e\u4fe1\u63a5\u6536\u65b9\u6b63\u786e\u63a5\u6536\u5206\u7ec4\u3002\u8fd9\u6837\u7684\u534f\u8bae\u88ab\u79f0\u4e3a\u505c-\u7b49 ( stop-and-wait ) \u534f\u8bae\u3002","title":"(3). Rdt2.0: \u4ea7\u751f\u4f4d\u9519\u8bef\u7684\u4fe1\u9053"},{"location":"3-TransportLayer/3.2/#4-rdt2122-rdt20","text":"Rdt2.0 \u5b58\u5728\u81f4\u547d\u7f3a\u9677\uff1a\u65e0\u6cd5\u5904\u7406 ACK/NAK \u53d1\u751f\u9519\u8bef\u6216\u8005\u88ab\u7834\u574f ( corrupted ) \u7684\u60c5\u51b5\u3002\u89e3\u51b3\u7684\u529e\u6cd5\u662f\u5982\u679c\u53d1\u9001\u65b9\u6536\u5230\u635f\u574f\u7684 ACK/NAK \u5c31\u8ba9\u53d1\u9001\u65b9\u91cd\u4f20\uff0c\u4f46\u7b80\u5355\u7684\u91cd\u4f20\u4f1a\u5bfc\u81f4\u91cd\u590d\u5206\u7ec4 ( duplicate packet ) \u95ee\u9898\uff1a\u63a5\u6536\u65b9\u53ef\u80fd\u6536\u5230\u76f8\u540c\u7684\u6570\u636e\uff0c\u56e0\u6b64 Rdt2.1 \u5f15\u5165\u5e8f\u5217\u53f7 ( sequence number ) \u673a\u5236\uff1a\u4e00\u65e6\u91cd\u590d\uff0c\u63a5\u6536\u65b9\u4e22\u5f03\u91cd\u590d\u5206\u7ec4\u3002 \u2003\u56e0\u4e3a\u91c7\u7528\u505c-\u7b49\u534f\u8bae\uff0c\u53ea\u9700\u8981\u4e24\u4e2a\u5e8f\u5217\u53f7\u5c31\u8db3\u591f\uff0c\u56e0\u6b64\u4e0e Rdt2.0 \u76f8\u6bd4\uff0c\u72b6\u6001\u6570\u91cf\u7ffb\u500d\u3002\u63a5\u6536\u65b9\u9700\u8981\u5224\u65ad\u662f\u5426\u91cd\u590d\uff1a\u6536\u5230\u4e00\u4e2a\u91cd\u590d\u5206\u7ec4\u540e\uff0c\u4e22\u5f03\uff0c\u5e76\u53d1\u9001\u4e00\u4e2a ACK \u3002 \u2003\u4ece\u53d1\u9001\u65b9\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u6536\u5230\u4e00\u4e2a NAK \uff0c\u7b49\u540c\u4e8e\u63a5\u6536\u65b9\u6700\u540e\u6536\u5230\u4e0a\u4e00\u4e2a\u6210\u529f\u53d1\u9001\u7684\u5305\u3002\u56e0\u6b64\uff0c Rdt2.2 \u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528 ACK + seq number \u4ee3\u66ff NAK \uff1b\u4ece\u63a5\u6536\u65b9\u6765\u770b\uff0c\u9700\u8981\u91cd\u4f20\u7684\u4e24\u79cd\u60c5\u51b5\u884c\u4e3a\u76f8\u540c\uff0c\u56e0\u6b64\u5408\u5e76\u3002","title":"(4). Rdt2.1\u30012.2: \u6539\u8fdb Rdt2.0"},{"location":"3-TransportLayer/3.2/#5-rdt30","text":"\u4fe1\u9053\u65e2\u53ef\u80fd\u53d1\u751f\u9519\u8bef\uff0c\u4e5f\u53ef\u80fd\u4e22\u5931\u5206\u7ec4\u3002\u53d1\u9001\u65b9\u53d1\u9001\u7684\u5206\u7ec4\u3001\u63a5\u6536\u65b9\u8fd4\u56de\u7684 ACK \u90fd\u53ef\u80fd\u4f1a\u53d1\u751f\u4e22\u5931\uff0c\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u8ba9\u53d1\u9001\u65b9\u7b49\u5f85\u4e00\u4e2a\u5408\u7406\u7684\u65f6\u95f4\uff0c\u8fd9\u4e2a\u65f6\u95f4\u8fc7\u540e\uff0c\u5982\u679c\u6ca1\u6536\u5230 ACK \uff0c\u5219\u91cd\u4f20\u3002\u5982\u679c\u662f\u56e0\u4e3a\u5ef6\u8fdf\u95ee\u9898\uff0c\u6570\u636e\u5305\u5e76\u672a\u771f\u751f\u4e22\u5931\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e8f\u5217\u53f7\u89e3\u51b3\u91cd\u590d\u5206\u7ec4\u95ee\u9898\u3002 \u2003\u5bf9\u4e8e\u53d1\u9001\u65b9\u6765\u8bf4\uff0c\u5206\u7ec4\u4e22\u5931\u3001 ACK \u4e22\u5931\u3001 ACK \u635f\u574f\u3001 ACK \u7684\u5e8f\u5217\u5217\u53f7\u9519\u8bef\u53d1\u751f\u65f6\u90fd\u4f1a\u5bfc\u81f4\u8d85\u65f6\uff0c\u7136\u540e\u91cd\u4f20\u3002\u5982\u679c\u5b9a\u65f6\u5668\u8bbe\u7f6e\u8fc7\u77ed\u9020\u6210\u63a5\u6536\u65b9\u5728\u7b49\u5f85\u72b6\u6001\u4e0b\u6536\u5230\u635f\u574f\u6216\u4e0d\u5bf9\u5e94\u7684 ACK \u65f6\u4f1a\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684\u91cd\u4f20\u3002 \u2003 Rdt3.0 \u53ef\u4ee5\u6b63\u786e\u5de5\u4f5c\uff0c\u4f46\u6027\u80fd\u5f88\u5dee\u3002\u505c-\u7b49\u534f\u8bae\u4fe1\u9053\u5229\u7528\u7387\uff1a$\\frac{L/R}{RTT+L/R}, RTT=2\u00d7d_{prop}$","title":"(5). Rdt3.0"},{"location":"3-TransportLayer/3.2/#2","text":"","title":"2. \u6ed1\u52a8\u7a97\u53e3\u534f\u8bae"},{"location":"3-TransportLayer/3.2/#1_2","text":"\u9488\u5bf9\u505c-\u7b49\u534f\u8bae\u5229\u7528\u7387\u4f4e\u7684\u539f\u56e0\uff0c\u5229\u7528\u6d41\u6c34\u7ebf\u673a\u5236\uff0c\u5141\u8bb8\u53d1\u9001\u65b9\u5728\u6536\u5230 ACK \u4e4b\u524d\u8fde\u7eed\u53d1\u9001\u591a\u4e2a\u5206\u7ec4\uff0c\u6b64\u65f6\u5229\u7528\u7387\u53d8\u4e3a $\\frac{n\u00d7L/R}{RTT+L/R}$\u3002\u76f8\u5e94\u5730\uff0c\u9700\u8981\u66f4\u5927\u7684\u5e8f\u5217\u53f7\u8303\u56f4\uff0c\u540c\u65f6\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e5f\u9700\u8981\u66f4\u5927\u7684\u7f13\u5b58\u7a7a\u95f4\u3002 \u2003\u8981\u60f3\u5b9e\u73b0\u8fd9\u79cd\u6d41\u6c34\u7ebf\u673a\u5236\uff0c\u5c31\u9700\u8981\u6ed1\u52a8\u7a97\u53e3\u534f\u8bae ( sliding-window protocol )\u3002\u7a97\u53e3\uff1a\u5141\u8bb8\u4f7f\u7528\u7684\u5e8f\u5217\u53f7\u8303\u56f4\uff0c\u6700\u591a\u7b49\u5f85\u786e\u8ba4\u7684\u6d88\u606f\u6570\u3002\u6ed1\u52a8\uff1a\u968f\u7740\u534f\u8bae\u8fd0\u884c\uff0c\u5e8f\u5217\u53f7\u5728\u7a7a\u95f4\u5185\u5411\u524d\u6ed1\u52a8\u3002","title":"(1). \u6982\u8ff0"},{"location":"3-TransportLayer/3.2/#2-gbn-go-back-n","text":"\u56fe\u793a\u4e3a\u53d1\u9001\u65b9\u89c6\u89d2\u7684\u5e8f\u53f7\u8303\u56f4\u3002\u57fa\u5e8f\u53f7 base \u4e3a\u6700\u65e9\u5df2\u53d1\u9001\u4f46\u672a\u786e\u8ba4\u7684\u5e8f\u53f7\uff0c nextseqnum \u4e3a\u6700\u5c0f\u7684\u672a\u4f7f\u7528\u5e8f\u53f7\u3002 \u53d1\u9001\u65b9\u54cd\u5e94\u4e8b\u4ef6\uff1a \u2460 \u4e0a\u5c42\u8c03\u7528\uff1a\u53d1\u9001\u65b9\u9996\u5148\u68c0\u67e5\u53d1\u9001\u7a97\u53e3\u662f\u5426\u5df2\u6ee1\uff0c\u5982\u679c\u672a\u6ee1\u5219\u751f\u6210\u5206\u7ec4\u5e76\u53d1\u9001\u3001\u5e76\u66f4\u65b0\u53d8\u91cf\uff1b\u5426\u5219\uff0c\u628a\u6570\u636e\u8fd4\u56de\u7ed9\u4e0a\u5c42\u3002\uff08\u5728\u5b9e\u9645\u5b9e\u73b0\u65f6\uff0c\u4f7f\u7528\u7f13\u5b58\u6216\u540c\u6b65\u673a\u5236) \u2461 \u8d85\u65f6\uff1a\u5982\u679c\u53d1\u751f\u8d85\u65f6\uff0c\u53d1\u9001\u65b9\u91cd\u4f20\u6240\u6709\u5df2\u53d1\u9001\u4f46\u8fd8\u672a\u786e\u8ba4\u7684\u5206\u7ec4\uff1b\u53d1\u9001\u65b9\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5b83\u88ab\u7528\u7ed9\u6700\u65e9\u53d1\u9001\u4f46\u8fd8\u672a\u88ab\u786e\u8ba4\u7684\u5206\u7ec4\u3002\u5728\u6536\u5230\u4e00\u4e2a ACK \u540e\uff0c\u5982\u679c\u4ecd\u6709\u672a\u88ab\u786e\u8ba4\u7684\u5206\u7ec4\uff0c\u91cd\u542f\u5b9a\u65f6\u5668\uff1b\u5426\u5219\u505c\u6b62\u5b9a\u65f6\u5668\u3002 \u2462 \u6536\u5230\u4e00\u4e2a ACK \uff1a GBN \u534f\u8bae\u5bf9\u5206\u7ec4\u91c7\u7528\u7d2f\u79ef\u786e\u8ba4 ( cumulative acknowledgment ) \u7684\u65b9\u5f0f\u3002\u53d1\u9001\u65b9\u66f4\u65b0 base \u548c\u5b9a\u65f6\u5668\uff1b\u5bf9\u63a5\u6536\u65b9\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5206\u7ec4 n \u88ab\u6536\u5230\u4e14\u6309\u5e8f\uff0c\u5219\u63a5\u6536\u65b9\u4e3a n \u53d1\u9001\u4e00\u4e2a ACK \uff0c\u8868\u660e\u5b83\u6536\u5230\u4e86 n \u4e4b\u524d\u4e14\u5305\u62ec n \u7684\u6240\u6709\u5206\u7ec4\uff0c\u5e76\u5411\u4e0a\u5c42\u4ea4\u4ed8\u6570\u636e\uff1b\u5728\u53d1\u9001\u65b9\u7684\u89c6\u89d2\uff0c\u53ef\u80fd\u6ca1\u6709\u6536\u5230\u67d0\u4e2a n-i \u7684 ACK \uff0c\u4f46\u53ea\u8981\u6536\u5230 ACK n \uff0c send_base \u5c31\u79fb\u52a8\u5230 n + 1 \u7684\u4f4d\u7f6e\u3002\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a5\u6536\u65b9\u4e22\u5f03\u5206\u7ec4\uff0c\u5e76\u53d1\u9001 ACK + \u6700\u8fd1\u6536\u5230\u7684\u6309\u5e8f\u5206\u7ec4\u5e8f\u5217\u53f7\u3002","title":"(2). GBN \u534f\u8bae (Go-Back-N)"},{"location":"3-TransportLayer/3.2/#3-sr-selective-repeat","text":"GBN \u534f\u8bae\u4ecd\u5b58\u5728\u6027\u80fd\u95ee\u9898\uff1a\u5f53\u7a97\u53e3\u957f\u5ea6\u548c\u65f6\u5ef6\u5e26\u5bbd\u79ef\u5f88\u5927\uff0c\u6d41\u6c34\u7ebf\u4e2d\u6709\u5f88\u591a\u5206\u7ec4\u65f6\uff0c\u5355\u4e2a\u5206\u7ec4\u7684\u5dee\u9519\u5c31\u4f1a\u5f15\u8d77\u5927\u91cf\u4e0d\u5fc5\u8981\u7684\u91cd\u4f20\u3002 \u53d1\u9001\u65b9\u54cd\u5e94\u4e8b\u4ef6\uff1a \u2460 \u4e0a\u5c42\u8c03\u7528\uff1a\u540c GBN \u3002 \u2461 \u8d85\u65f6\uff1a\u6bcf\u4e2a\u5206\u7ec4\u90fd\u6709\u81ea\u5df1\u7684\u903b\u8f91\u5b9a\u65f6\u5668\u3002 \u2462 \u6536\u5230\u4e00\u4e2a ACK \uff1a\u5982\u679c\u6536\u5230\u7684 ACK \u5728\u7a97\u53e3\u5185\uff0c\u5219\u6807\u8bb0\u4e3a\u5df2\u63a5\u6536\uff1b\u5982\u679c\u6536\u5230\u7684\u5206\u7ec4\u5e8f\u53f7\u7b49\u4e8e send_base \uff0c\u7a97\u53e3\u57fa\u5e8f\u53f7\u79fb\u52a8\u5230\u6700\u5c0f\u5df2\u53d1\u9001\u672a\u786e\u8ba4\u5e8f\u53f7\u5904\uff1b\u5982\u679c\u7a97\u53e3\u53d1\u751f\u79fb\u52a8\uff0c\u4e14\u6709\u53ef\u53d1\u9001\u5e8f\u53f7\uff0c\u5219\u53d1\u9001\u8fd9\u4e9b\u5206\u7ec4\u3002 \u63a5\u6536\u65b9\u54cd\u5e94\u4e8b\u4ef6\uff1a \u2460 \u5728 [ rcv_base , rcv_base + N - 1 ] \u5185\u7684\u5206\u7ec4\u88ab\u63a5\u6536\uff1a\u5373\u6536\u5230\u7684\u5206\u7ec4\u843d\u5728\u63a5\u6536\u65b9\u7684\u7a97\u53e3\u8303\u56f4\u5185\u3002\u9996\u5148\u8fd4\u56de\u4e00\u4e2a ACK \uff1b\u5982\u679c\u8be5\u5206\u7ec4\u4ee5\u524d\u672a\u6536\u5230\uff0c\u7f13\u5b58\u8be5\u5206\u7ec4\uff1b\u5982\u679c\u8be5\u5206\u7ec4\u7b49\u4e8e\u57fa\u5e8f\u53f7 rcv_base \uff0c\u5219\u5c06\u8fde\u7eed\u7684\u7f13\u5b58\u5206\u7ec4\u4ea4\u4ed8\u4e0a\u5c42\uff0c\u63a5\u6536\u7a97\u53e3\u79fb\u52a8\u3002 \u2461 \u5728 [ rcv_base - N , rcv_base - 1 ] \u5185\u7684\u5206\u7ec4\u88ab\u63a5\u6536\uff1a\u5373\u63a5\u6536\u65b9\u5df2\u786e\u8ba4\u63a5\u6536\u5e76\u5728\u7a97\u53e3\u5916\u7684\u91cd\u590d\u5206\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a ACK \u3002 \u2462 \u5176\u4ed6\u60c5\u51b5\uff0c\u5ffd\u7565\u6536\u5230\u7684\u5206\u7ec4\u3002","title":"(3) SR \u534f\u8bae (Selective Repeat)"},{"location":"3-TransportLayer/3.3/","text":"1. TCP \u62a5\u6587\u6bb5\u7ed3\u6784 TCP \u7684\u5934\u90e8\u4e00\u822c\u4e3a 20 \u5b57\u8282\u3002 \u2460 \u6e90\u7aef\u53e3\u53f7/\u76ee\u7684\u7aef\u53e3\u53f7 \u2003\u540c UDP \u4e00\u6837\uff0c\u7528\u4e8e\u591a\u8def\u590d\u7528/\u591a\u8def\u5206\u7528\u3002 \u2461 \u5e8f\u5217\u53f7\u3001\u786e\u8ba4\u53f7 ( 32 bit ) \u2003 TCP \u628a\u6570\u636e\u89c6\u4e3a\u6709\u5e8f\u7684\u5b57\u8282\u6d41\uff0c\u5e8f\u5217\u53f7\u57fa\u4e8e\u5b57\u8282\u987a\u5e8f\u800c\u4e0d\u662f\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\u3002\u5f53\u63a5\u6536\u65b9\u6536\u5230\u62a5\u6587\u6bb5\u4e4b\u540e\uff0c\u63a5\u6536\u65b9\u586b\u8fdb\u62a5\u6587\u6bb5\u7684\u5e8f\u5217\u53f7\u662f\u5b83\u671f\u671b\u4ece\u53d1\u9001\u65b9\u6536\u5230\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\u3002 \u2003 TCP \u662f\u63d0\u4f9b\u7d2f\u79ef\u786e\u8ba4\u7684\u534f\u8bae\uff0c\u5bf9\u4e8e\u63a5\u6536\u65b9\u6765\u8bf4\uff0c\u5982\u679c\u6536\u5230\u5931\u5e8f\u5206\u7ec4\uff0c\u4ecd\u4f1a\u8fd4\u56de\u6700\u540e\u6536\u5230\u7684\u6709\u5e8f\u5b57\u8282\u53f7+1\u7684\u786e\u8ba4\u53f7\u3002 TCP RFC \u6ca1\u6709\u660e\u786e\u89c4\u5b9a\u5bf9\u5931\u5e8f\u62a5\u6587\u6bb5\u7684\u5904\u7406\uff0c\u5b83\u7684\u5177\u4f53\u5b9e\u73b0\u53d6\u51b3\u4e8e TCP \u5b9e\u73b0\u8005\uff0c\u5b9e\u8df5\u4e2d\u63a5\u6536\u65b9\u4fdd\u7559\u5931\u5e8f\u5b57\u8282\u3001\u7b49\u5f85\u7f3a\u5c11\u7684\u5b57\u8282\u5bf9\u4e8e\u7f51\u7edc\u5e26\u5bbd\u66f4\u6709\u6548\u3002 \u2003 TCP \u53cc\u65b9\u7684\u521d\u59cb\u5e8f\u5217\u53f7\u4e00\u822c\u4e3a\u968f\u673a\u9009\u53d6\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u4e24\u53f0\u4e3b\u673a\u4e4b\u95f4\u5148\u524d\u5df2\u7ec8\u6b62\u7684\u8fde\u63a5\u53d1\u9001\u7684\u62a5\u6587\u6bb5\u88ab\u8bef\u8ba4\u4e3a\u662f\u65b0\u8fde\u63a5\u7684\u62a5\u6587\u6bb5\u7684\u53ef\u80fd\u6027\u3002 \u2462 \u9996\u90e8\u957f\u5ea6 ( 4 bit ) \u2003\u6307\u793a\u4e86\u4ee5 32 \u6bd4\u7279\u7684\u5b57\u4e3a\u5355\u4f4d\u7684 TCP \u9996\u90e8\u957f\u5ea6\u3002\u7531\u4e8e option \u5b57\u6bb5\u7684\u539f\u56e0\uff0c TCP \u9996\u90e8\u957f\u5ea6\u53ef\u53d8\u3002 option \u5b57\u6bb5\u901a\u5e38\u4e3a\u7a7a\uff0c\u56e0\u6b64 TCP \u9996\u90e8\u5b57\u6bb5\u957f\u5ea6\u4e00\u822c\u4e3a 20 \u5b57\u8282\u3002 \u2463 \u6807\u5fd7\u5b57\u6bb5 ( 6 bit ) \u2003 ACK : \u7528\u4e8e\u6307\u793a\u786e\u8ba4\u53f7\u5b57\u6bb5\u7684\u503c\u6709\u6548\u3002 RST\u3001SYN\u3001FIN : \u7528\u4e8e\u8fde\u63a5\u7684\u5efa\u7acb\u548c\u62c6\u9664\u3002 \u2464 \u63a5\u6536\u7a97\u53e3\u5b57\u6bb5 ( 16 bit ) \u2003\u7528\u4e8e\u6d41\u91cf\u63a7\u5236\u3002 \u2465 \u9009\u9879\u5b57\u6bb5 \u2003\u7528\u4e8e\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u534f\u5546\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\uff0c\u6216\u5728\u9ad8\u901f\u7f51\u7edc\u73af\u5883\u4e0b\u4f5c\u7a97\u53e3\u8c03\u8282\u56e0\u5b50\u4f7f\u7528\u3002 2. \u5f80\u8fd4\u65f6\u95f4\u4f30\u8ba1 ( Round-trip Time Estimation ) \u2003 TCP \u4ecd\u4f7f\u7528\u8d85\u65f6/\u91cd\u4f20\u673a\u5236\u5904\u7406\u6570\u636e\u4e22\u5931\u95ee\u9898\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u7684\u6837\u672c\u5f80\u8fd4\u65f6\u95f4 $SampleRTT$\u3002\u5927\u591a\u6570 TCP \u4ec5\u5728\u67d0\u4e2a\u65f6\u523b\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u53d1\u9001\u4f46\u672a\u786e\u8ba4\u7684\u62a5\u6587\u6bb5\u505a\u4e00\u6b21 $SampleRTT$ \u7684\u6d4b\u91cf\uff0c\u800c\u5ffd\u7565\u88ab\u91cd\u4f20\u7684\u62a5\u6587\u6bb5\u3002 TCP \u8fd8\u7ef4\u62a4\u4e00\u4e2a\u6837\u672c RTT \u7684\u5e73\u5747\u503c\uff0c\u6bcf\u5f53\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684\u6837\u672c\u503c\u65f6\u66f4\u65b0\u5747\u503c\uff1a $$EstimatedRTT=(1-\\alpha)\\cdot EstimatedRTT+\\alpha\\cdot SampleRTT$$ \u5176\u4e2d $\\alpha$ \u7684\u63a8\u8350\u503c\u4e3a 0.125\u3002$EstimatedRTT$ \u662f $SampleRTT$ \u7684\u4e00\u4e2a\u52a0\u6743\u5e73\u5747\u503c\uff0c\u5728\u7edf\u8ba1\u5b66\u4e0a\uff0c\u8fd9\u79cd\u5e73\u5747\u88ab\u79f0\u4e3a\u6307\u6570\u52a0\u6743\u79fb\u52a8\u5e73\u5747 ( Exponential Weighted Moving Average, EWMA )\u3002 \u2003 TCP \u8fd8\u7ef4\u62a4\u4e00\u4e2a RTT \u504f\u5dee\u503c\uff0c\u7528\u4e8e\u4f30\u7b97 $SampleRTT$ \u504f\u79bb $EstimatedRTT$ \u7684\u7a0b\u5ea6\uff1a $$DevRTT=(1-\\beta)\\cdot DevRTT+\\beta\\cdot |SampleRTT-EstimatedRTT|$$ $\\beta$ \u7684\u63a8\u8350\u503c\u4e3a 0.25\u3002\u5982\u679c $SampleRTT$ \u7684\u6ce2\u52a8\u5f88\u5c0f\uff0c\u90a3\u4e48 $DevRTT$ \u7684\u503c\u4e5f\u5f88\u5c0f\uff0c\u53cd\u4e4b\u5219\u5f88\u5927\u3002 \u2003 TCP \u8d85\u65f6\u95f4\u9694\u5e94\u8bbe\u4e3a\u5927\u4e8e\u7b49\u4e8e $EstimatedRTT$\uff0c\u5426\u5219\u4f1a\u9020\u6210\u4e0d\u5fc5\u8981\u7684\u91cd\u4f20\uff1b\u4f46\u4e0d\u80fd\u5927\u592a\u591a\uff0c\u5426\u5219\u4f1a\u5f92\u589e\u65f6\u5ef6\u3002 $$TimeoutInterval=EstimatedRTT+4\\cdot DevRTT$$ $TimeoutInterval$ \u7684\u521d\u503c\u63a8\u8350\u4e3a 1 \u79d2\u3002\u4e00\u65e6\u51fa\u73b0\u8d85\u65f6\uff0c\u5b83\u7684\u503c\u52a0\u500d\uff1b\u53ea\u8981\u6536\u5230\u62a5\u6587\u6bb5\u5e76\u66f4\u65b0 $EstimatedRTT$\uff0c\u5c31\u4f7f\u7528\u4e0a\u8ff0\u516c\u5f0f\u518d\u6b21\u8ba1\u7b97 $TimeoutInterval$\u3002 3. TCP \u7684\u53ef\u9760\u6570\u636e\u4f20\u8f93 (1). \u53d1\u9001\u65b9\u7684\u7b80\u5316\u63cf\u8ff0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* Assume: * \u53d1\u9001\u65b9\u4e0d\u53d7 TCP \u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\u7684\u9650\u5236 * \u6765\u81ea\u4e0a\u5c42\u7684\u6570\u636e\u5c0f\u4e8e MSS * \u5355\u5411\u6570\u636e\u4f20\u9001 */ NextSeqNum = Initial Sequence Number ; SendBase = Initial Sequence Number ; while ( true ) { switch ( event ) event : data received from application above create TCP Segment with sequence number NextSeqNum ; if ( \u5b9a\u65f6\u5668\u672a\u8fd0\u884c ) start timer ; pass segment to IP ; NextSeqNum = NextSeqNum + length ( data ); break ; event : timer timeout retransmit not - yet - acked segment with smallest sequence number ; start timer ; break ; event : ACK received , with ACK field value of y if ( y > SendBase ) { SendBase = y ; if ( there are currently any not - yet - acked segment ) { start timer ; } } break ; } \u2003 TCP \u91c7\u7528\u5355\u4e00\u5b9a\u65f6\u5668\u3002\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6536\u5230\u7684 ACK \u4f7f\u5f97 send_base \u5237\u65b0\uff0c\u4e14\u8fd8\u6709\u5df2\u53d1\u9001\u4f46\u672a\u6536\u5230\u56de\u5e94\u7684\u62a5\u6587\u6bb5\u7684\u8bdd\uff0c\u8981\u91cd\u542f\u8ba1\u65f6\u5668\u3002 (2). \u8d85\u65f6\u95f4\u9694\u52a0\u500d \u2003\u5728\u5927\u591a\u6570 TCP \u4e2d\uff0c\u6bcf\u5f53\u8d85\u65f6\u4e8b\u4ef6\u53d1\u751f\uff0c\u5728\u91cd\u4f20\u76f8\u5e94\u62a5\u6587\u6bb5\u540e\uff0c\u4f1a\u8bbe\u7f6e $TimeoutInterval\u00d72$\uff1b\u76f4\u5230\u53e6\u5916\u4e24\u4e2a\u54cd\u5e94\u65f6\u95f4\u5176\u4e00\u53d1\u751f\uff0c\u901a\u8fc7 $EstimatedRTT$ \u548c $DevRTT$ \u5f97\u5230\u8d85\u65f6\u95f4\u9694\u7684\u65b0\u503c\u3002 \u2003\u8fd9\u79cd\u673a\u5236\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f62\u5f0f\u53d7\u9650\u7684\u62e5\u585e\u63a7\u5236\uff0c\u5b9a\u65f6\u5668\u8fc7\u671f\u5f88\u53ef\u80fd\u7531\u7f51\u7edc\u62e5\u585e\u5f15\u8d77\u3002 (3). \u5feb\u901f\u91cd\u4f20 ( Fast Retransmit ) \u2003\u5f53\u4e00\u4e2a\u62a5\u6587\u6bb5\u4e22\u5931\uff0c\u5982\u679c\u8d85\u65f6\u5468\u671f\u8fc7\u957f\uff0c\u4f1a\u589e\u52a0\u7aef\u5230\u7aef\u65f6\u5ef6\u3002 TCP \u53d1\u9001\u65b9\u901a\u8fc7\u68c0\u6d4b\u91cd\u590d ACK ( duplicate ACK ) \u5b9e\u73b0\u5feb\u901f\u91cd\u4f20\u673a\u5236\uff1a\u5982\u679c TCP \u53d1\u9001\u65b9\u63a5\u6536\u5230\u5bf9\u4e8e\u540c\u4e00\u4e2a\u62a5\u6587\u6bb5\u7684 3 \u4e2a ACK \uff0c\u5c31\u8ba4\u4e3a\u8be5\u62a5\u6587\u6bb5\u5df2\u4e22\u5931\uff0c\u5728\u5b9a\u65f6\u5668\u8fc7\u671f\u4e4b\u524d\u6267\u884c\u5feb\u901f\u91cd\u4f20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 event : ACK received , with ACK field value of y if ( y > SendBase ) { SendBase = y ; if ( there are currently any not - yet - acked segment ) { start timer ; } } else { increment number of duplicate ACKs received for y ; if ( number of duplicated ACKs for y == 3 ) { resend segment with sequence number y ; } } break ; 4. TCP \u8fde\u63a5\u7ba1\u7406 (1). TCP \u901a\u4fe1\u8fc7\u7a0b \u2003\u5728\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5411\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u9001\u6570\u636e\u4e4b\u524d\uff0c\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u76f8\u4e92\u63e1\u624b\uff1a\u53d1\u9001\u9884\u5907\u62a5\u6587\u6bb5\u3001\u786e\u4fdd\u4f20\u8f93\u7684\u67d0\u4e9b\u53c2\u6570\u3002\u8fd9\u79cd\u8fde\u63a5\u662f\u4e00\u79cd\u903b\u8f91\u8fde\u63a5\uff0c\u8fde\u63a5\u7684\u72b6\u6001\u4ec5\u4fdd\u7559\u5728\u7aef\u7cfb\u7edf\u7684 TCP \u7a0b\u5e8f\u4e2d\uff0c\u800c\u4e2d\u95f4\u7684\u7f51\u7edc\u5143\u7d20\u4e0d\u4fdd\u7559\u5173\u4e8e\u8fde\u63a5\u7684\u4efb\u4f55\u4fe1\u5fc3\u3002 \u2003\u5728\u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u5c31\u53ef\u4ee5\u76f8\u4e92\u53d1\u9001\u6570\u636e\u3002\u53d1\u9001\u65b9\u901a\u8fc7 Socket \u5f97\u5230\u4e0a\u5c42\u7684\u6570\u636e\u540e\uff0c\u5c06\u5176\u5f15\u5bfc\u81f3\u53d1\u9001\u7f13\u5b58\u4e2d\u3002 TCP \u4ece\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684\u6570\u636e\u5927\u5c0f\u53d7\u9650\u4e8e\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6 ( Maximum Segment Size, MSS )\uff0c MSS \u901a\u5e38\u6839\u636e\u6700\u5927\u94fe\u8def\u5c42\u5e27\u957f\u5ea6 (\u6700\u5927\u4f20\u8f93\u5355\u5143 , Maximum Transmission Unit, MTU ) \u8bbe\u7f6e\u3002 TCP \u4e3a\u6bcf\u4e2a\u6570\u636e\u914d\u4e0a\u5934\u90e8\uff0c\u5f62\u6210\u62a5\u6587\u6bb5\uff0c\u4e0b\u4f20\u7ed9\u7f51\u7edc\u5c42\u3002\u63a5\u6536\u65b9\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u5f15\u5bfc\u81f3\u63a5\u6536\u7f13\u5b58\u4e2d\u3002 \u2003\u56e0\u6b64\uff0c TCP \u8fde\u63a5\u7684\u7ec4\u6210\u5305\u62ec\uff1a\u4e00\u53f0\u4e3b\u673a\u4e0a\u7684\u7f13\u5b58\u3001\u53d8\u91cf\u3001\u5957\u63a5\u5b57\u4ee5\u53ca\u53e6\u4e00\u53f0\u4e3b\u673a\u4e0a\u7684\u76f8\u540c\u5143\u7d20\u3002 (2). TCP \u8fde\u63a5\u5efa\u7acb\uff1a\u4e09\u6b21\u63e1\u624b \u2003\u4ee5\u5ba2\u6237\u7aef\u4e3b\u52a8\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8fde\u63a5\u4e3a\u4f8b\u3002 \u2460 \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a SYN \u62a5\u6587\u6bb5\uff0c\u5728\u8fd9\u4e2a\u62a5\u6587\u6bb5\u4e2d\uff0c\u6807\u5fd7\u4f4d SYN \u88ab\u7f6e\u4e3a 1 ( ACK = 0 )\uff0c\u5e76\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u968f\u673a\u7684\u521d\u59cb\u5e8f\u5217\u53f7 client_isn \u3002 C: to SYN_SENT \u2461 \u670d\u52a1\u5668\u6536\u5230\u540e\uff0c\u9996\u5148\u4e3a TCP \u8fde\u63a5\u5206\u914d\u7f13\u5b58\u548c\u53d8\u91cf\uff0c\u7136\u540e\u53d1\u9001\u4e00\u4e2a SYNACK \u62a5\u6587\u6bb5\uff0c\u5176\u4e2d\u6807\u5fd7\u4f4d SYN\u3001ACK \u88ab\u7f6e\u4e3a 1\uff0c\u8868\u793a\u5141\u8bb8\u8fde\u63a5\uff1b Ack = client_isn + 1 \uff0c Seq = server_isn \u3002 S: to SYN_RCVD \u2462 \u5ba2\u6237\u7aef\u6536\u5230 SYNACK \u62a5\u6587\u6bb5\u540e\uff0c\u4e3a\u8be5\u8fde\u63a5\u5206\u914d\u7f13\u5b58\u548c\u53d8\u91cf\u3002\u7136\u540e\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\u6bb5\uff0c\u5bf9\u670d\u52a1\u5668\u7684\u5141\u8bb8\u8fde\u63a5\u8fdb\u884c\u786e\u8ba4\uff0c\u56e0\u4e3a\u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\uff0c SYN \u88ab\u7f6e\u4e3a 0\u3002\u8fd9\u4e2a\u62a5\u6587\u6bb5\u53ef\u4ee5\u643a\u5e26\u5ba2\u6237\u7aef\u8981\u53d1\u9001\u7684\u6570\u636e\u3002 C/S: to ESTABLISHED \u2003\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u4e09\u6b21\u63e1\u624b ( three-way handshake )\u3002\u5728\u5efa\u7acb\u8fde\u63a5\u540e\uff0c C/S \u4e4b\u95f4\u5c31\u53ef\u4ee5\u76f8\u4e92\u53d1\u9001\u6570\u636e\u4e86\uff0c\u4f46 SYN \u88ab\u7f6e\u4e3a 0. (3). TCP \u8fde\u63a5\u5173\u95ed\uff1a\u56db\u6b21\u6325\u624b \u2003\u4ee5\u5ba2\u6237\u7aef\u4e3b\u52a8\u53d1\u8d77\u5173\u95ed\u8bf7\u6c42\u4e3a\u4f8b\u3002 \u2460 \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u7684\u62a5\u6587\u6bb5\uff0c\u5173\u95ed\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u6570\u636e\u4f20\u9001\uff0c\u5176\u4e2d\u7684 FIN \u6807\u5fd7\u4f4d\u7f6e\u4e3a 1\u3002 C: to FIN_WAIT_1 \u2461 \u670d\u52a1\u5668\u6536\u5230\u540e\uff0c\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u62a5\u6587\u6bb5\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u8fd9\u4e2a\u62a5\u6587\u6bb5\u3002 S: to CLOSE_WAIT , C: to FIN_WAIT_2 \u2462 \u670d\u52a1\u5668\u53d1\u9001\u7ec8\u6b62\u62a5\u6587\u6bb5\uff0c\u5173\u95ed\u670d\u52a1\u5668\u5230\u5ba2\u6237\u7aef\u7684\u6570\u636e\u4f20\u9001\uff0c FIN \u7f6e\u4e3a 1\u3002 S: to LAST_ACK \u2463 \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684 FIN \u540e\uff0c\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u62a5\u6587\u6bb5\u3002 C: to TIME_WAIT , S: to CLOSED \u3002 \u2003\u88ab\u52a8\u65b9\u5728\u6536\u5230\u4e3b\u52a8\u65b9\u7684\u5173\u95ed\u8bf7\u6c42\u540e\uff0c\u53ef\u80fd\u8fd8\u6709\u9700\u8981\u7ee7\u7eed\u5904\u7406\u7684\u62a5\u6587\u6bb5\uff0c\u56e0\u6b64\uff0c\u53d1\u9001 ACK \u548c\u53d1\u9001 FIN \u8981\u5206\u5f00\u8fdb\u884c\u3002 (4). C/S \u7684\u72b6\u6001\u8f6c\u6362","title":"3.Connection-Oriented Transport\uff1a TCP"},{"location":"3-TransportLayer/3.3/#1-tcp","text":"TCP \u7684\u5934\u90e8\u4e00\u822c\u4e3a 20 \u5b57\u8282\u3002 \u2460 \u6e90\u7aef\u53e3\u53f7/\u76ee\u7684\u7aef\u53e3\u53f7 \u2003\u540c UDP \u4e00\u6837\uff0c\u7528\u4e8e\u591a\u8def\u590d\u7528/\u591a\u8def\u5206\u7528\u3002 \u2461 \u5e8f\u5217\u53f7\u3001\u786e\u8ba4\u53f7 ( 32 bit ) \u2003 TCP \u628a\u6570\u636e\u89c6\u4e3a\u6709\u5e8f\u7684\u5b57\u8282\u6d41\uff0c\u5e8f\u5217\u53f7\u57fa\u4e8e\u5b57\u8282\u987a\u5e8f\u800c\u4e0d\u662f\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\u3002\u5f53\u63a5\u6536\u65b9\u6536\u5230\u62a5\u6587\u6bb5\u4e4b\u540e\uff0c\u63a5\u6536\u65b9\u586b\u8fdb\u62a5\u6587\u6bb5\u7684\u5e8f\u5217\u53f7\u662f\u5b83\u671f\u671b\u4ece\u53d1\u9001\u65b9\u6536\u5230\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\u3002 \u2003 TCP \u662f\u63d0\u4f9b\u7d2f\u79ef\u786e\u8ba4\u7684\u534f\u8bae\uff0c\u5bf9\u4e8e\u63a5\u6536\u65b9\u6765\u8bf4\uff0c\u5982\u679c\u6536\u5230\u5931\u5e8f\u5206\u7ec4\uff0c\u4ecd\u4f1a\u8fd4\u56de\u6700\u540e\u6536\u5230\u7684\u6709\u5e8f\u5b57\u8282\u53f7+1\u7684\u786e\u8ba4\u53f7\u3002 TCP RFC \u6ca1\u6709\u660e\u786e\u89c4\u5b9a\u5bf9\u5931\u5e8f\u62a5\u6587\u6bb5\u7684\u5904\u7406\uff0c\u5b83\u7684\u5177\u4f53\u5b9e\u73b0\u53d6\u51b3\u4e8e TCP \u5b9e\u73b0\u8005\uff0c\u5b9e\u8df5\u4e2d\u63a5\u6536\u65b9\u4fdd\u7559\u5931\u5e8f\u5b57\u8282\u3001\u7b49\u5f85\u7f3a\u5c11\u7684\u5b57\u8282\u5bf9\u4e8e\u7f51\u7edc\u5e26\u5bbd\u66f4\u6709\u6548\u3002 \u2003 TCP \u53cc\u65b9\u7684\u521d\u59cb\u5e8f\u5217\u53f7\u4e00\u822c\u4e3a\u968f\u673a\u9009\u53d6\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u4e24\u53f0\u4e3b\u673a\u4e4b\u95f4\u5148\u524d\u5df2\u7ec8\u6b62\u7684\u8fde\u63a5\u53d1\u9001\u7684\u62a5\u6587\u6bb5\u88ab\u8bef\u8ba4\u4e3a\u662f\u65b0\u8fde\u63a5\u7684\u62a5\u6587\u6bb5\u7684\u53ef\u80fd\u6027\u3002 \u2462 \u9996\u90e8\u957f\u5ea6 ( 4 bit ) \u2003\u6307\u793a\u4e86\u4ee5 32 \u6bd4\u7279\u7684\u5b57\u4e3a\u5355\u4f4d\u7684 TCP \u9996\u90e8\u957f\u5ea6\u3002\u7531\u4e8e option \u5b57\u6bb5\u7684\u539f\u56e0\uff0c TCP \u9996\u90e8\u957f\u5ea6\u53ef\u53d8\u3002 option \u5b57\u6bb5\u901a\u5e38\u4e3a\u7a7a\uff0c\u56e0\u6b64 TCP \u9996\u90e8\u5b57\u6bb5\u957f\u5ea6\u4e00\u822c\u4e3a 20 \u5b57\u8282\u3002 \u2463 \u6807\u5fd7\u5b57\u6bb5 ( 6 bit ) \u2003 ACK : \u7528\u4e8e\u6307\u793a\u786e\u8ba4\u53f7\u5b57\u6bb5\u7684\u503c\u6709\u6548\u3002 RST\u3001SYN\u3001FIN : \u7528\u4e8e\u8fde\u63a5\u7684\u5efa\u7acb\u548c\u62c6\u9664\u3002 \u2464 \u63a5\u6536\u7a97\u53e3\u5b57\u6bb5 ( 16 bit ) \u2003\u7528\u4e8e\u6d41\u91cf\u63a7\u5236\u3002 \u2465 \u9009\u9879\u5b57\u6bb5 \u2003\u7528\u4e8e\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u534f\u5546\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\uff0c\u6216\u5728\u9ad8\u901f\u7f51\u7edc\u73af\u5883\u4e0b\u4f5c\u7a97\u53e3\u8c03\u8282\u56e0\u5b50\u4f7f\u7528\u3002","title":"1. TCP \u62a5\u6587\u6bb5\u7ed3\u6784"},{"location":"3-TransportLayer/3.3/#2-round-trip-time-estimation","text":"TCP \u4ecd\u4f7f\u7528\u8d85\u65f6/\u91cd\u4f20\u673a\u5236\u5904\u7406\u6570\u636e\u4e22\u5931\u95ee\u9898\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u7684\u6837\u672c\u5f80\u8fd4\u65f6\u95f4 $SampleRTT$\u3002\u5927\u591a\u6570 TCP \u4ec5\u5728\u67d0\u4e2a\u65f6\u523b\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u53d1\u9001\u4f46\u672a\u786e\u8ba4\u7684\u62a5\u6587\u6bb5\u505a\u4e00\u6b21 $SampleRTT$ \u7684\u6d4b\u91cf\uff0c\u800c\u5ffd\u7565\u88ab\u91cd\u4f20\u7684\u62a5\u6587\u6bb5\u3002 TCP \u8fd8\u7ef4\u62a4\u4e00\u4e2a\u6837\u672c RTT \u7684\u5e73\u5747\u503c\uff0c\u6bcf\u5f53\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684\u6837\u672c\u503c\u65f6\u66f4\u65b0\u5747\u503c\uff1a $$EstimatedRTT=(1-\\alpha)\\cdot EstimatedRTT+\\alpha\\cdot SampleRTT$$ \u5176\u4e2d $\\alpha$ \u7684\u63a8\u8350\u503c\u4e3a 0.125\u3002$EstimatedRTT$ \u662f $SampleRTT$ \u7684\u4e00\u4e2a\u52a0\u6743\u5e73\u5747\u503c\uff0c\u5728\u7edf\u8ba1\u5b66\u4e0a\uff0c\u8fd9\u79cd\u5e73\u5747\u88ab\u79f0\u4e3a\u6307\u6570\u52a0\u6743\u79fb\u52a8\u5e73\u5747 ( Exponential Weighted Moving Average, EWMA )\u3002 \u2003 TCP \u8fd8\u7ef4\u62a4\u4e00\u4e2a RTT \u504f\u5dee\u503c\uff0c\u7528\u4e8e\u4f30\u7b97 $SampleRTT$ \u504f\u79bb $EstimatedRTT$ \u7684\u7a0b\u5ea6\uff1a $$DevRTT=(1-\\beta)\\cdot DevRTT+\\beta\\cdot |SampleRTT-EstimatedRTT|$$ $\\beta$ \u7684\u63a8\u8350\u503c\u4e3a 0.25\u3002\u5982\u679c $SampleRTT$ \u7684\u6ce2\u52a8\u5f88\u5c0f\uff0c\u90a3\u4e48 $DevRTT$ \u7684\u503c\u4e5f\u5f88\u5c0f\uff0c\u53cd\u4e4b\u5219\u5f88\u5927\u3002 \u2003 TCP \u8d85\u65f6\u95f4\u9694\u5e94\u8bbe\u4e3a\u5927\u4e8e\u7b49\u4e8e $EstimatedRTT$\uff0c\u5426\u5219\u4f1a\u9020\u6210\u4e0d\u5fc5\u8981\u7684\u91cd\u4f20\uff1b\u4f46\u4e0d\u80fd\u5927\u592a\u591a\uff0c\u5426\u5219\u4f1a\u5f92\u589e\u65f6\u5ef6\u3002 $$TimeoutInterval=EstimatedRTT+4\\cdot DevRTT$$ $TimeoutInterval$ \u7684\u521d\u503c\u63a8\u8350\u4e3a 1 \u79d2\u3002\u4e00\u65e6\u51fa\u73b0\u8d85\u65f6\uff0c\u5b83\u7684\u503c\u52a0\u500d\uff1b\u53ea\u8981\u6536\u5230\u62a5\u6587\u6bb5\u5e76\u66f4\u65b0 $EstimatedRTT$\uff0c\u5c31\u4f7f\u7528\u4e0a\u8ff0\u516c\u5f0f\u518d\u6b21\u8ba1\u7b97 $TimeoutInterval$\u3002","title":"2. \u5f80\u8fd4\u65f6\u95f4\u4f30\u8ba1 (Round-trip Time Estimation)"},{"location":"3-TransportLayer/3.3/#3-tcp","text":"","title":"3. TCP \u7684\u53ef\u9760\u6570\u636e\u4f20\u8f93"},{"location":"3-TransportLayer/3.3/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* Assume: * \u53d1\u9001\u65b9\u4e0d\u53d7 TCP \u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\u7684\u9650\u5236 * \u6765\u81ea\u4e0a\u5c42\u7684\u6570\u636e\u5c0f\u4e8e MSS * \u5355\u5411\u6570\u636e\u4f20\u9001 */ NextSeqNum = Initial Sequence Number ; SendBase = Initial Sequence Number ; while ( true ) { switch ( event ) event : data received from application above create TCP Segment with sequence number NextSeqNum ; if ( \u5b9a\u65f6\u5668\u672a\u8fd0\u884c ) start timer ; pass segment to IP ; NextSeqNum = NextSeqNum + length ( data ); break ; event : timer timeout retransmit not - yet - acked segment with smallest sequence number ; start timer ; break ; event : ACK received , with ACK field value of y if ( y > SendBase ) { SendBase = y ; if ( there are currently any not - yet - acked segment ) { start timer ; } } break ; } \u2003 TCP \u91c7\u7528\u5355\u4e00\u5b9a\u65f6\u5668\u3002\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6536\u5230\u7684 ACK \u4f7f\u5f97 send_base \u5237\u65b0\uff0c\u4e14\u8fd8\u6709\u5df2\u53d1\u9001\u4f46\u672a\u6536\u5230\u56de\u5e94\u7684\u62a5\u6587\u6bb5\u7684\u8bdd\uff0c\u8981\u91cd\u542f\u8ba1\u65f6\u5668\u3002","title":"(1). \u53d1\u9001\u65b9\u7684\u7b80\u5316\u63cf\u8ff0"},{"location":"3-TransportLayer/3.3/#2","text":"\u5728\u5927\u591a\u6570 TCP \u4e2d\uff0c\u6bcf\u5f53\u8d85\u65f6\u4e8b\u4ef6\u53d1\u751f\uff0c\u5728\u91cd\u4f20\u76f8\u5e94\u62a5\u6587\u6bb5\u540e\uff0c\u4f1a\u8bbe\u7f6e $TimeoutInterval\u00d72$\uff1b\u76f4\u5230\u53e6\u5916\u4e24\u4e2a\u54cd\u5e94\u65f6\u95f4\u5176\u4e00\u53d1\u751f\uff0c\u901a\u8fc7 $EstimatedRTT$ \u548c $DevRTT$ \u5f97\u5230\u8d85\u65f6\u95f4\u9694\u7684\u65b0\u503c\u3002 \u2003\u8fd9\u79cd\u673a\u5236\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f62\u5f0f\u53d7\u9650\u7684\u62e5\u585e\u63a7\u5236\uff0c\u5b9a\u65f6\u5668\u8fc7\u671f\u5f88\u53ef\u80fd\u7531\u7f51\u7edc\u62e5\u585e\u5f15\u8d77\u3002","title":"(2). \u8d85\u65f6\u95f4\u9694\u52a0\u500d"},{"location":"3-TransportLayer/3.3/#3-fast-retransmit","text":"\u5f53\u4e00\u4e2a\u62a5\u6587\u6bb5\u4e22\u5931\uff0c\u5982\u679c\u8d85\u65f6\u5468\u671f\u8fc7\u957f\uff0c\u4f1a\u589e\u52a0\u7aef\u5230\u7aef\u65f6\u5ef6\u3002 TCP \u53d1\u9001\u65b9\u901a\u8fc7\u68c0\u6d4b\u91cd\u590d ACK ( duplicate ACK ) \u5b9e\u73b0\u5feb\u901f\u91cd\u4f20\u673a\u5236\uff1a\u5982\u679c TCP \u53d1\u9001\u65b9\u63a5\u6536\u5230\u5bf9\u4e8e\u540c\u4e00\u4e2a\u62a5\u6587\u6bb5\u7684 3 \u4e2a ACK \uff0c\u5c31\u8ba4\u4e3a\u8be5\u62a5\u6587\u6bb5\u5df2\u4e22\u5931\uff0c\u5728\u5b9a\u65f6\u5668\u8fc7\u671f\u4e4b\u524d\u6267\u884c\u5feb\u901f\u91cd\u4f20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 event : ACK received , with ACK field value of y if ( y > SendBase ) { SendBase = y ; if ( there are currently any not - yet - acked segment ) { start timer ; } } else { increment number of duplicate ACKs received for y ; if ( number of duplicated ACKs for y == 3 ) { resend segment with sequence number y ; } } break ;","title":"(3). \u5feb\u901f\u91cd\u4f20 (Fast Retransmit)"},{"location":"3-TransportLayer/3.3/#4-tcp","text":"","title":"4. TCP \u8fde\u63a5\u7ba1\u7406"},{"location":"3-TransportLayer/3.3/#1-tcp_1","text":"\u5728\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5411\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u9001\u6570\u636e\u4e4b\u524d\uff0c\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u76f8\u4e92\u63e1\u624b\uff1a\u53d1\u9001\u9884\u5907\u62a5\u6587\u6bb5\u3001\u786e\u4fdd\u4f20\u8f93\u7684\u67d0\u4e9b\u53c2\u6570\u3002\u8fd9\u79cd\u8fde\u63a5\u662f\u4e00\u79cd\u903b\u8f91\u8fde\u63a5\uff0c\u8fde\u63a5\u7684\u72b6\u6001\u4ec5\u4fdd\u7559\u5728\u7aef\u7cfb\u7edf\u7684 TCP \u7a0b\u5e8f\u4e2d\uff0c\u800c\u4e2d\u95f4\u7684\u7f51\u7edc\u5143\u7d20\u4e0d\u4fdd\u7559\u5173\u4e8e\u8fde\u63a5\u7684\u4efb\u4f55\u4fe1\u5fc3\u3002 \u2003\u5728\u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u5c31\u53ef\u4ee5\u76f8\u4e92\u53d1\u9001\u6570\u636e\u3002\u53d1\u9001\u65b9\u901a\u8fc7 Socket \u5f97\u5230\u4e0a\u5c42\u7684\u6570\u636e\u540e\uff0c\u5c06\u5176\u5f15\u5bfc\u81f3\u53d1\u9001\u7f13\u5b58\u4e2d\u3002 TCP \u4ece\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684\u6570\u636e\u5927\u5c0f\u53d7\u9650\u4e8e\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6 ( Maximum Segment Size, MSS )\uff0c MSS \u901a\u5e38\u6839\u636e\u6700\u5927\u94fe\u8def\u5c42\u5e27\u957f\u5ea6 (\u6700\u5927\u4f20\u8f93\u5355\u5143 , Maximum Transmission Unit, MTU ) \u8bbe\u7f6e\u3002 TCP \u4e3a\u6bcf\u4e2a\u6570\u636e\u914d\u4e0a\u5934\u90e8\uff0c\u5f62\u6210\u62a5\u6587\u6bb5\uff0c\u4e0b\u4f20\u7ed9\u7f51\u7edc\u5c42\u3002\u63a5\u6536\u65b9\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u5f15\u5bfc\u81f3\u63a5\u6536\u7f13\u5b58\u4e2d\u3002 \u2003\u56e0\u6b64\uff0c TCP \u8fde\u63a5\u7684\u7ec4\u6210\u5305\u62ec\uff1a\u4e00\u53f0\u4e3b\u673a\u4e0a\u7684\u7f13\u5b58\u3001\u53d8\u91cf\u3001\u5957\u63a5\u5b57\u4ee5\u53ca\u53e6\u4e00\u53f0\u4e3b\u673a\u4e0a\u7684\u76f8\u540c\u5143\u7d20\u3002","title":"(1). TCP \u901a\u4fe1\u8fc7\u7a0b"},{"location":"3-TransportLayer/3.3/#2-tcp","text":"\u4ee5\u5ba2\u6237\u7aef\u4e3b\u52a8\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8fde\u63a5\u4e3a\u4f8b\u3002 \u2460 \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a SYN \u62a5\u6587\u6bb5\uff0c\u5728\u8fd9\u4e2a\u62a5\u6587\u6bb5\u4e2d\uff0c\u6807\u5fd7\u4f4d SYN \u88ab\u7f6e\u4e3a 1 ( ACK = 0 )\uff0c\u5e76\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u968f\u673a\u7684\u521d\u59cb\u5e8f\u5217\u53f7 client_isn \u3002 C: to SYN_SENT \u2461 \u670d\u52a1\u5668\u6536\u5230\u540e\uff0c\u9996\u5148\u4e3a TCP \u8fde\u63a5\u5206\u914d\u7f13\u5b58\u548c\u53d8\u91cf\uff0c\u7136\u540e\u53d1\u9001\u4e00\u4e2a SYNACK \u62a5\u6587\u6bb5\uff0c\u5176\u4e2d\u6807\u5fd7\u4f4d SYN\u3001ACK \u88ab\u7f6e\u4e3a 1\uff0c\u8868\u793a\u5141\u8bb8\u8fde\u63a5\uff1b Ack = client_isn + 1 \uff0c Seq = server_isn \u3002 S: to SYN_RCVD \u2462 \u5ba2\u6237\u7aef\u6536\u5230 SYNACK \u62a5\u6587\u6bb5\u540e\uff0c\u4e3a\u8be5\u8fde\u63a5\u5206\u914d\u7f13\u5b58\u548c\u53d8\u91cf\u3002\u7136\u540e\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\u6bb5\uff0c\u5bf9\u670d\u52a1\u5668\u7684\u5141\u8bb8\u8fde\u63a5\u8fdb\u884c\u786e\u8ba4\uff0c\u56e0\u4e3a\u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\uff0c SYN \u88ab\u7f6e\u4e3a 0\u3002\u8fd9\u4e2a\u62a5\u6587\u6bb5\u53ef\u4ee5\u643a\u5e26\u5ba2\u6237\u7aef\u8981\u53d1\u9001\u7684\u6570\u636e\u3002 C/S: to ESTABLISHED \u2003\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u4e09\u6b21\u63e1\u624b ( three-way handshake )\u3002\u5728\u5efa\u7acb\u8fde\u63a5\u540e\uff0c C/S \u4e4b\u95f4\u5c31\u53ef\u4ee5\u76f8\u4e92\u53d1\u9001\u6570\u636e\u4e86\uff0c\u4f46 SYN \u88ab\u7f6e\u4e3a 0.","title":"(2). TCP \u8fde\u63a5\u5efa\u7acb\uff1a\u4e09\u6b21\u63e1\u624b"},{"location":"3-TransportLayer/3.3/#3-tcp_1","text":"\u4ee5\u5ba2\u6237\u7aef\u4e3b\u52a8\u53d1\u8d77\u5173\u95ed\u8bf7\u6c42\u4e3a\u4f8b\u3002 \u2460 \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u7684\u62a5\u6587\u6bb5\uff0c\u5173\u95ed\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u6570\u636e\u4f20\u9001\uff0c\u5176\u4e2d\u7684 FIN \u6807\u5fd7\u4f4d\u7f6e\u4e3a 1\u3002 C: to FIN_WAIT_1 \u2461 \u670d\u52a1\u5668\u6536\u5230\u540e\uff0c\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u62a5\u6587\u6bb5\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u8fd9\u4e2a\u62a5\u6587\u6bb5\u3002 S: to CLOSE_WAIT , C: to FIN_WAIT_2 \u2462 \u670d\u52a1\u5668\u53d1\u9001\u7ec8\u6b62\u62a5\u6587\u6bb5\uff0c\u5173\u95ed\u670d\u52a1\u5668\u5230\u5ba2\u6237\u7aef\u7684\u6570\u636e\u4f20\u9001\uff0c FIN \u7f6e\u4e3a 1\u3002 S: to LAST_ACK \u2463 \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684 FIN \u540e\uff0c\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u62a5\u6587\u6bb5\u3002 C: to TIME_WAIT , S: to CLOSED \u3002 \u2003\u88ab\u52a8\u65b9\u5728\u6536\u5230\u4e3b\u52a8\u65b9\u7684\u5173\u95ed\u8bf7\u6c42\u540e\uff0c\u53ef\u80fd\u8fd8\u6709\u9700\u8981\u7ee7\u7eed\u5904\u7406\u7684\u62a5\u6587\u6bb5\uff0c\u56e0\u6b64\uff0c\u53d1\u9001 ACK \u548c\u53d1\u9001 FIN \u8981\u5206\u5f00\u8fdb\u884c\u3002","title":"(3). TCP \u8fde\u63a5\u5173\u95ed\uff1a\u56db\u6b21\u6325\u624b"},{"location":"3-TransportLayer/3.3/#4-cs","text":"","title":"(4). C/S \u7684\u72b6\u6001\u8f6c\u6362"},{"location":"3-TransportLayer/3.4/","text":"5. TCP: \u6d41\u91cf\u63a7\u5236 \u2003\u5f53\u4e00\u4e2a TCP \u8fde\u63a5\u6536\u5230\u6b63\u786e\u7684\u6570\u636e\u540e\uff0c\u4f1a\u5c06\u5176\u653e\u5165\u63a5\u6536\u7f13\u5b58\uff1b\u4e0a\u5c42\u5e94\u7528\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u7acb\u5373\u8bfb\u53d6\u5176\u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u8bfb\u53d6\u901f\u7387\u8fdc\u5c0f\u4e8e\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7f13\u5b58\u6ea2\u51fa\u3002 TCP \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u6d41\u91cf\u63a7\u5236\u670d\u52a1\uff0c\u4f7f\u5f97\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\u4e0e\u5e94\u7528\u7684\u8bfb\u53d6\u901f\u7387\u76f8\u5339\u914d\u3002 \u2003 TCP \u53d1\u9001\u65b9\u7ef4\u62a4\u4e00\u4e2a\u79f0\u4e3a\u63a5\u6536\u7a97\u53e3\u7684\u53d8\u91cf\uff0c\u8bb0\u4e3a RcvWindow \uff0c\u8868\u793a\u63a5\u6536\u65b9\u7a7a\u95f2\u7a7a\u95f4\u7684\u5927\u5c0f\u3002\u63a5\u6536\u7f13\u5b58\u5927\u5c0f\u8bb0\u4e3a RcvBuffer \uff0c\u5e76\u6ee1\u8db3 LastByteRcvd - LastByteRead \u2264 RcvBuffer \u3002 \u2003\u4e8e\u662f RcvWindow = RcvBuffer - [ LastByteRcvd - LastByteRead ] \u3002\u63a5\u6536\u65b9\u4f1a\u628a\u5f53\u524d\u7684 RcvWindow \u503c\u653e\u5165\u63a5\u6536\u7a97\u53e3\u5b57\u6bb5\u4e2d\u5e76\u53d1\u7ed9\u53d1\u9001\u65b9\uff0c\u5176\u521d\u503c\u8bbe\u4e3a RcvBuffer \u3002 \u2003\u53d1\u9001\u65b9\u7ef4\u62a4\u4e24\u4e2a\u53d8\u91cf LastByteSent \u548c LastByteAcked \uff0c\u5e76\u63a7\u5236 LastByteSent - LastByteAcked \u2264 RcvWindow \uff0c\u4fdd\u8bc1\u63a5\u6536\u65b9\u4e0d\u4f1a\u7f13\u5b58\u6ea2\u51fa\u3002 \u2003\u6ce8\u610f\u5230\uff0c\u5f53\u63a5\u6536\u65b9\u7f13\u5b58\u5df2\u6ee1\uff0c\u901a\u77e5\u53d1\u9001\u65b9 RcvWindow = 0 \uff0c\u6309\u7167\u4e0a\u9762\u7684\u903b\u8f91\uff0c\u53d1\u9001\u65b9\u4f1a\u505c\u6b62\u53d1\u9001\u6570\u636e\u5e76\u963b\u585e\u3002 TCP \u4e2d\u89c4\u5b9a\uff0c\u5f53\u63a5\u6536\u65b9\u63a5\u6536\u7a97\u53e3\u4e3a 0 \u65f6\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u5b57\u8282\u7684\u62a5\u6587\u6bb5\uff0c\u8fd9\u4e2a\u62a5\u6587\u6bb5\u4f1a\u88ab\u63a5\u6536\u65b9\u786e\u8ba4\uff0c\u7136\u540e\u6e05\u7a7a\u7f13\u5b58\u3001\u8fd4\u56de\u4e00\u4e2a\u975e 0 \u7684 RcvWindow \u3002","title":"4.TCP\uff1aFlow and Congestion Control"},{"location":"3-TransportLayer/3.4/#5-tcp","text":"\u5f53\u4e00\u4e2a TCP \u8fde\u63a5\u6536\u5230\u6b63\u786e\u7684\u6570\u636e\u540e\uff0c\u4f1a\u5c06\u5176\u653e\u5165\u63a5\u6536\u7f13\u5b58\uff1b\u4e0a\u5c42\u5e94\u7528\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u7acb\u5373\u8bfb\u53d6\u5176\u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u8bfb\u53d6\u901f\u7387\u8fdc\u5c0f\u4e8e\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7f13\u5b58\u6ea2\u51fa\u3002 TCP \u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u6d41\u91cf\u63a7\u5236\u670d\u52a1\uff0c\u4f7f\u5f97\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\u4e0e\u5e94\u7528\u7684\u8bfb\u53d6\u901f\u7387\u76f8\u5339\u914d\u3002 \u2003 TCP \u53d1\u9001\u65b9\u7ef4\u62a4\u4e00\u4e2a\u79f0\u4e3a\u63a5\u6536\u7a97\u53e3\u7684\u53d8\u91cf\uff0c\u8bb0\u4e3a RcvWindow \uff0c\u8868\u793a\u63a5\u6536\u65b9\u7a7a\u95f2\u7a7a\u95f4\u7684\u5927\u5c0f\u3002\u63a5\u6536\u7f13\u5b58\u5927\u5c0f\u8bb0\u4e3a RcvBuffer \uff0c\u5e76\u6ee1\u8db3 LastByteRcvd - LastByteRead \u2264 RcvBuffer \u3002 \u2003\u4e8e\u662f RcvWindow = RcvBuffer - [ LastByteRcvd - LastByteRead ] \u3002\u63a5\u6536\u65b9\u4f1a\u628a\u5f53\u524d\u7684 RcvWindow \u503c\u653e\u5165\u63a5\u6536\u7a97\u53e3\u5b57\u6bb5\u4e2d\u5e76\u53d1\u7ed9\u53d1\u9001\u65b9\uff0c\u5176\u521d\u503c\u8bbe\u4e3a RcvBuffer \u3002 \u2003\u53d1\u9001\u65b9\u7ef4\u62a4\u4e24\u4e2a\u53d8\u91cf LastByteSent \u548c LastByteAcked \uff0c\u5e76\u63a7\u5236 LastByteSent - LastByteAcked \u2264 RcvWindow \uff0c\u4fdd\u8bc1\u63a5\u6536\u65b9\u4e0d\u4f1a\u7f13\u5b58\u6ea2\u51fa\u3002 \u2003\u6ce8\u610f\u5230\uff0c\u5f53\u63a5\u6536\u65b9\u7f13\u5b58\u5df2\u6ee1\uff0c\u901a\u77e5\u53d1\u9001\u65b9 RcvWindow = 0 \uff0c\u6309\u7167\u4e0a\u9762\u7684\u903b\u8f91\uff0c\u53d1\u9001\u65b9\u4f1a\u505c\u6b62\u53d1\u9001\u6570\u636e\u5e76\u963b\u585e\u3002 TCP \u4e2d\u89c4\u5b9a\uff0c\u5f53\u63a5\u6536\u65b9\u63a5\u6536\u7a97\u53e3\u4e3a 0 \u65f6\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u5b57\u8282\u7684\u62a5\u6587\u6bb5\uff0c\u8fd9\u4e2a\u62a5\u6587\u6bb5\u4f1a\u88ab\u63a5\u6536\u65b9\u786e\u8ba4\uff0c\u7136\u540e\u6e05\u7a7a\u7f13\u5b58\u3001\u8fd4\u56de\u4e00\u4e2a\u975e 0 \u7684 RcvWindow \u3002","title":"5. TCP: \u6d41\u91cf\u63a7\u5236"},{"location":"4-NetworkLayer/4.1/","text":"1. \u7f51\u7edc\u5c42\u670d\u52a1\u6a21\u578b (1). \u7f51\u7edc\u5c42\u529f\u80fd\u6982\u8ff0 \u8f6c\u53d1 ( forwarding ): \u5c06\u5206\u7ec4\u4ece\u8def\u7531\u5668\u7684\u8f93\u5165\u7aef\u53e3\u79fb\u52a8\u5230\u5408\u9002\u7684\u8f93\u51fa\u7aef\u53e3\u3002\u65f6\u95f4\u5c3a\u5ea6\u77ed\uff0c\u5e38\u7531\u786c\u4ef6\u5b9e\u73b0\uff0c\u662f\u6570\u636e\u5e73\u9762 ( data plane ) \u7684\u552f\u4e00\u529f\u80fd\u3002 \u8def\u7531 ( routing ): \u901a\u8fc7\u8def\u7531\u9009\u62e9\u7b97\u6cd5\uff0c\u786e\u5b9a\u5206\u7ec4\u4ece\u53d1\u9001\u65b9\u6d41\u5411\u63a5\u6536\u65b9\u6240\u8d70\u7684\u8def\u5f84\u3002\u65f6\u95f4\u5c3a\u5ea6\u957f\uff0c\u5e38\u7528\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u662f\u63a7\u5236\u5e73\u9762 ( control plane ) \u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u2003\u6bcf\u53f0\u8def\u7531\u5668\u4e2d\u90fd\u6709\u4e00\u4e2a\u8f6c\u53d1\u8868 ( forwarding table )\uff0c\u8def\u7531\u5668\u901a\u8fc7\u5b83\u67e5\u627e\u8f93\u51fa\u94fe\u8def\u3002\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u8fd0\u884c\u5728\u6bcf\u53f0\u8def\u7531\u5668\u4e2d\uff0c\u51b3\u5b9a\u4e86\u8f6c\u53d1\u8868\u7684\u5185\u5bb9\uff0c\u8fd9\u4e5f\u63ed\u793a\u4e86\u8f6c\u53d1\u548c\u8def\u7531\u662f\u76f8\u4e92\u4f5c\u7528\u7684\u3002\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u5206\u79bb\u51fa\u6765\uff0c\u8fd0\u884c\u5728\u8fdc\u7a0b\u63a7\u5236\u5668\u4e0a\u3002 (2). \u7f51\u7edc\u670d\u52a1\u6a21\u578b \u2003\u7f51\u7edc\u670d\u52a1\u6a21\u578b\u5b9a\u4e49\u4e86\u5206\u7ec4\u5728\u53d1\u9001\u7aef\u4e0e\u63a5\u6536\u7aef\u4e4b\u95f4\u7684\u7aef\u5230\u7aef\u4f20\u8f93\u7279\u6027\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u7f51\u7edc\u5c42\u53ef\u80fd\u63d0\u4f9b\u7684\u670d\u52a1\u6709\uff1a\u786e\u4fdd\u4ea4\u4ed8\u3001\u6709\u5e8f\u4ea4\u4ed8\u3001\u786e\u4fdd\u5e26\u5bbd\u3001\u5b89\u5168\u6027\u7b49\u3002 Internet \u7684\u7f51\u7edc\u5c42\u63d0\u4f9b\u5c3d\u529b\u800c\u4e3a\u670d\u52a1 ( best-effort service )\uff0c\u5373\u4e0d\u63d0\u4f9b\u4efb\u4f55\u670d\u52a1\uff0c\u5c3d\u7ba1\u5b58\u5728\u5176\u4ed6\u7684\u7f51\u7edc\u6a21\u578b\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u7f51\u7edc\u5c42\u670d\u52a1\uff0c Internet \u7684\u5c3d\u529b\u800c\u4e3a\u670d\u52a1\u548c\u9002\u5f53\u5e26\u5bbd\u4f9b\u7ed9\u76f8\u7ed3\u5408\u5df2\u88ab\u5b9e\u8df5\u8bc1\u660e\u8db3\u591f\u597d\u3002 2. \u865a\u7535\u8def\u7f51\u7edc\u548c\u6570\u636e\u62a5\u7f51\u7edc (1). \u865a\u7535\u8def\u7f51\u7edc ( Virtual Circuit ) \u2003\u865a\u7535\u8def\u7f51\u7edc\u5728\u7f51\u7edc\u5c42\u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\u3002\u4e00\u6761\u865a\u7535\u8def\u7684\u7ec4\u6210\u5982\u4e0b\uff1a\u2460 \u6e90\u4e3b\u673a\u548c\u76ee\u7684\u4e3b\u673a\u4e4b\u95f4\u7684\u4e00\u6761\u8def\u5f84\uff1b\u2461 \u6bcf\u6761\u94fe\u8def\u7684 VC \u53f7\uff1b\u2462 \u8def\u5f84\u4e2d\u6bcf\u4e2a\u8def\u7531\u5668\u4e2d\u7684\u8f6c\u53d1\u8868\u3002\u540c\u4e00\u8def\u5f84\u4e2d\u6bcf\u6761\u94fe\u8def\u7684 VC \u53f7\u90fd\u4e0d\u76f8\u540c\uff0c\u5c5e\u4e8e\u4e00\u6761\u865a\u7535\u8def\u7684\u5206\u7ec4\u7684\u5934\u90e8\u643a\u5e26\u4e00\u4e2a VC \u53f7\uff0c\u6bcf\u5f53\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\u7684\u65f6\u5019\uff0c\u4f9d\u636e\u5176\u4e2d\u7684\u8f6c\u53d1\u8868\u67e5\u627e\u8f93\u51fa\u94fe\u8def\uff0c\u5e76\u7528\u8f93\u51fa\u94fe\u8def\u7684 VC \u53f7\u4ee3\u66ff\u81ea\u5df1\u5934\u90e8\u4e2d\u7684 VC \u53f7\u3002\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0c\u800c\u4e0d\u662f\u4e00\u6761\u7535\u8def\u4e2d\u6bcf\u4e2a\u94fe\u8def\u90fd\u4f7f\u7528\u540c\u4e00 VC \u53f7\uff0c\u7b80\u5316\u4e86\u865a\u7535\u8def\u7f51\u7edc\u7684\u5b9e\u73b0\uff1b\u5982\u679c\u91c7\u7528\u540e\u8005\uff0c\u8def\u7531\u5668\u4e4b\u95f4\u9700\u8981\u4ea4\u6362\u5e76\u5904\u7406\u5927\u91cf\u7684\u62a5\u6587\uff0c\u5e76\u5360\u7528\u66f4\u5927\u7684\u5934\u90e8\u7a7a\u95f4\u3002 \u2003\u865a\u7535\u8def\u901a\u4fe1\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a \u2003\u2460 \u865a\u7535\u8def\u5efa\u7acb\uff1a\u4f20\u8f93\u5c42\u6307\u5b9a\u63a5\u6536\u65b9\u5730\u5740\uff0c\u7f51\u7edc\u5c42\u786e\u5b9a\u8def\u5f84\uff0c\u5e76\u5728\u6bcf\u4e2a\u8def\u7531\u5668\u7684\u8f6c\u53d1\u8868\u4e2d\u589e\u52a0\u4e00\u9879\u3002\u5728\u865a\u7535\u8def\u5efa\u7acb\u671f\u95f4\uff0c\u7f51\u7edc\u5c42\u8fd8\u53ef\u4ee5\u9884\u7559\u865a\u7535\u8def\u8def\u5f84\u4e0a\u7684\u5e26\u5bbd\u8d44\u6e90\u3002 \u2003\u2461 \u6570\u636e\u4f20\u9001\uff1b \u2003\u2462 \u865a\u7535\u8def\u62c6\u9664\uff1a\u901a\u77e5\u53e6\u4e00\u4fa7\u7aef\u7cfb\u7edf\u7ed3\u675f\u547c\u53eb\uff0c\u5e76\u66f4\u65b0\u8def\u5f84\u4e0a\u8def\u7531\u5668\u7684\u8f6c\u53d1\u8868\u3002 \u2003\u7aef\u7cfb\u7edf\u53d1\u9001\u7684\u6307\u793a\u865a\u7535\u8def\u5efa\u7acb\u4e0e\u62c6\u9664\u3001\u8def\u7531\u5668\u95f4\u4f20\u9012\u7684\u7528\u4e8e\u5efa\u7acb\u548c\u62c6\u9664\u865a\u7535\u8def\u7684\u62a5\u6587\u79f0\u4e3a\u4fe1\u4ee4\u62a5\u6587 ( signaling message )\uff0c\u5904\u7406\u8fd9\u4e9b\u62a5\u6587\u7684\u534f\u8bae\u79f0\u4e3a\u4fe1\u4ee4\u534f\u8bae ( signaling protocol )\u3002 \u2003\u5b83\u4e0e\u7535\u8def\u4ea4\u6362\u7684\u4e3b\u8981\u533a\u522b\u662f\u5b83\u5efa\u7acb\u4e00\u4e2a\u903b\u8f91\u8fde\u63a5\uff0c\u4f7f\u7528\u5206\u7ec4\u4ea4\u6362\u3002 (2). \u6570\u636e\u62a5\u7f51\u7edc \u2003\u6570\u636e\u62a5\u7f51\u7edc\u63d0\u4f9b\u5c3d\u529b\u800c\u4e3a\u670d\u52a1\u3002\u6bcf\u5f53\u4e00\u4e2a\u7aef\u7cfb\u7edf\u8981\u53d1\u9001\u5206\u7ec4\uff0c\u5b83\u4e3a\u8be5\u5206\u7ec4\u6dfb\u52a0\u76ee\u7684\u7aef\u7cfb\u7edf\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u6b64\u5206\u7ec4\u63a8\u8fdb\u7f51\u7edc\u4e2d\uff1b\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u5c31\u68c0\u7d22\u8f6c\u53d1\u8868\uff0c\u786e\u5b9a\u8f93\u51fa\u94fe\u8def\u3002 \u2003\u7531\u4e8e\u5730\u5740\u7a7a\u95f4\u5f88\u5927\uff0c\u8f6c\u53d1\u8868\u7684\u8868\u9879\u4f7f\u7528\u5730\u5740\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u901a\u8fc7\u4e24\u7aef\u7684\u503c\u7684\u516c\u5171\u524d\u7f00\u6807\u8bc6\uff0c\u5728\u67e5\u627e\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u6700\u957f\u524d\u7f00\u5339\u914d\u89c4\u5219\u786e\u5b9a\u94fe\u8def\u63a5\u53e3\u3002 (3). \u4e24\u79cd\u7f51\u7edc\u7684\u6bd4\u8f83 \u2003\u865a\u7535\u8def\u7f51\u7edc\u7684\u5178\u578b\u4f8b\u5b50\u662f ATM \uff0c\u5b83\u7531\u7535\u8bdd\u7f51\u7edc\u6f14\u5316\u800c\u6765\uff0c\u6838\u5fc3\u4e1a\u52a1\u662f\u5b9e\u65f6\u5bf9\u8bdd\uff0c\u5bf9\u65f6\u95f4\u548c\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\uff0c\u4e14\u7aef\u7cfb\u7edf\u975e\u667a\u80fd\uff0c\u56e0\u6b64\u91c7\u7528\u201c\u7b80\u5316\u8fb9\u7f18\uff0c\u590d\u6742\u7f51\u7edc\u201d\u7684\u8bbe\u8ba1\u3002 \u2003\u6570\u636e\u62a5\u7f51\u7edc\u7684\u5178\u578b\u4f8b\u5b50\u662f Internet \uff0c\u5b83\u7531\u4e92\u8fde\u8ba1\u7b97\u673a\u7684\u9700\u6c42\u53d1\u5c55\u800c\u6765\uff0c\u5bf9\u54cd\u5e94\u65f6\u95f4\u7684\u8981\u6c42\u76f8\u5bf9\u4e0d\u662f\u5f88\u4e25\u683c\uff0c\u5e76\u4e14\u7aef\u7cfb\u7edf\u8bbe\u5907\u66f4\u52a0\u667a\u80fd\uff0c\u56e0\u6b64\u91c7\u7528\u201c\u7b80\u5316\u7f51\u7edc\uff0c\u590d\u6742\u8fb9\u7f18\u201d\u7684\u8bbe\u8ba1\uff0c\u66f4\u591a\u7684\u53ef\u9760\u670d\u52a1\u5728\u66f4\u9ad8\u5c42\u5b9e\u73b0\u3002","title":"1.Network Service Model"},{"location":"4-NetworkLayer/4.1/#1","text":"","title":"1. \u7f51\u7edc\u5c42\u670d\u52a1\u6a21\u578b"},{"location":"4-NetworkLayer/4.1/#1_1","text":"\u8f6c\u53d1 ( forwarding ): \u5c06\u5206\u7ec4\u4ece\u8def\u7531\u5668\u7684\u8f93\u5165\u7aef\u53e3\u79fb\u52a8\u5230\u5408\u9002\u7684\u8f93\u51fa\u7aef\u53e3\u3002\u65f6\u95f4\u5c3a\u5ea6\u77ed\uff0c\u5e38\u7531\u786c\u4ef6\u5b9e\u73b0\uff0c\u662f\u6570\u636e\u5e73\u9762 ( data plane ) \u7684\u552f\u4e00\u529f\u80fd\u3002 \u8def\u7531 ( routing ): \u901a\u8fc7\u8def\u7531\u9009\u62e9\u7b97\u6cd5\uff0c\u786e\u5b9a\u5206\u7ec4\u4ece\u53d1\u9001\u65b9\u6d41\u5411\u63a5\u6536\u65b9\u6240\u8d70\u7684\u8def\u5f84\u3002\u65f6\u95f4\u5c3a\u5ea6\u957f\uff0c\u5e38\u7528\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u662f\u63a7\u5236\u5e73\u9762 ( control plane ) \u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u2003\u6bcf\u53f0\u8def\u7531\u5668\u4e2d\u90fd\u6709\u4e00\u4e2a\u8f6c\u53d1\u8868 ( forwarding table )\uff0c\u8def\u7531\u5668\u901a\u8fc7\u5b83\u67e5\u627e\u8f93\u51fa\u94fe\u8def\u3002\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u8fd0\u884c\u5728\u6bcf\u53f0\u8def\u7531\u5668\u4e2d\uff0c\u51b3\u5b9a\u4e86\u8f6c\u53d1\u8868\u7684\u5185\u5bb9\uff0c\u8fd9\u4e5f\u63ed\u793a\u4e86\u8f6c\u53d1\u548c\u8def\u7531\u662f\u76f8\u4e92\u4f5c\u7528\u7684\u3002\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u5206\u79bb\u51fa\u6765\uff0c\u8fd0\u884c\u5728\u8fdc\u7a0b\u63a7\u5236\u5668\u4e0a\u3002","title":"(1). \u7f51\u7edc\u5c42\u529f\u80fd\u6982\u8ff0"},{"location":"4-NetworkLayer/4.1/#2","text":"\u7f51\u7edc\u670d\u52a1\u6a21\u578b\u5b9a\u4e49\u4e86\u5206\u7ec4\u5728\u53d1\u9001\u7aef\u4e0e\u63a5\u6536\u7aef\u4e4b\u95f4\u7684\u7aef\u5230\u7aef\u4f20\u8f93\u7279\u6027\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u7f51\u7edc\u5c42\u53ef\u80fd\u63d0\u4f9b\u7684\u670d\u52a1\u6709\uff1a\u786e\u4fdd\u4ea4\u4ed8\u3001\u6709\u5e8f\u4ea4\u4ed8\u3001\u786e\u4fdd\u5e26\u5bbd\u3001\u5b89\u5168\u6027\u7b49\u3002 Internet \u7684\u7f51\u7edc\u5c42\u63d0\u4f9b\u5c3d\u529b\u800c\u4e3a\u670d\u52a1 ( best-effort service )\uff0c\u5373\u4e0d\u63d0\u4f9b\u4efb\u4f55\u670d\u52a1\uff0c\u5c3d\u7ba1\u5b58\u5728\u5176\u4ed6\u7684\u7f51\u7edc\u6a21\u578b\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u7f51\u7edc\u5c42\u670d\u52a1\uff0c Internet \u7684\u5c3d\u529b\u800c\u4e3a\u670d\u52a1\u548c\u9002\u5f53\u5e26\u5bbd\u4f9b\u7ed9\u76f8\u7ed3\u5408\u5df2\u88ab\u5b9e\u8df5\u8bc1\u660e\u8db3\u591f\u597d\u3002","title":"(2). \u7f51\u7edc\u670d\u52a1\u6a21\u578b"},{"location":"4-NetworkLayer/4.1/#2_1","text":"","title":"2. \u865a\u7535\u8def\u7f51\u7edc\u548c\u6570\u636e\u62a5\u7f51\u7edc"},{"location":"4-NetworkLayer/4.1/#1-virtual-circuit","text":"\u865a\u7535\u8def\u7f51\u7edc\u5728\u7f51\u7edc\u5c42\u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\u3002\u4e00\u6761\u865a\u7535\u8def\u7684\u7ec4\u6210\u5982\u4e0b\uff1a\u2460 \u6e90\u4e3b\u673a\u548c\u76ee\u7684\u4e3b\u673a\u4e4b\u95f4\u7684\u4e00\u6761\u8def\u5f84\uff1b\u2461 \u6bcf\u6761\u94fe\u8def\u7684 VC \u53f7\uff1b\u2462 \u8def\u5f84\u4e2d\u6bcf\u4e2a\u8def\u7531\u5668\u4e2d\u7684\u8f6c\u53d1\u8868\u3002\u540c\u4e00\u8def\u5f84\u4e2d\u6bcf\u6761\u94fe\u8def\u7684 VC \u53f7\u90fd\u4e0d\u76f8\u540c\uff0c\u5c5e\u4e8e\u4e00\u6761\u865a\u7535\u8def\u7684\u5206\u7ec4\u7684\u5934\u90e8\u643a\u5e26\u4e00\u4e2a VC \u53f7\uff0c\u6bcf\u5f53\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\u7684\u65f6\u5019\uff0c\u4f9d\u636e\u5176\u4e2d\u7684\u8f6c\u53d1\u8868\u67e5\u627e\u8f93\u51fa\u94fe\u8def\uff0c\u5e76\u7528\u8f93\u51fa\u94fe\u8def\u7684 VC \u53f7\u4ee3\u66ff\u81ea\u5df1\u5934\u90e8\u4e2d\u7684 VC \u53f7\u3002\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0c\u800c\u4e0d\u662f\u4e00\u6761\u7535\u8def\u4e2d\u6bcf\u4e2a\u94fe\u8def\u90fd\u4f7f\u7528\u540c\u4e00 VC \u53f7\uff0c\u7b80\u5316\u4e86\u865a\u7535\u8def\u7f51\u7edc\u7684\u5b9e\u73b0\uff1b\u5982\u679c\u91c7\u7528\u540e\u8005\uff0c\u8def\u7531\u5668\u4e4b\u95f4\u9700\u8981\u4ea4\u6362\u5e76\u5904\u7406\u5927\u91cf\u7684\u62a5\u6587\uff0c\u5e76\u5360\u7528\u66f4\u5927\u7684\u5934\u90e8\u7a7a\u95f4\u3002 \u2003\u865a\u7535\u8def\u901a\u4fe1\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a \u2003\u2460 \u865a\u7535\u8def\u5efa\u7acb\uff1a\u4f20\u8f93\u5c42\u6307\u5b9a\u63a5\u6536\u65b9\u5730\u5740\uff0c\u7f51\u7edc\u5c42\u786e\u5b9a\u8def\u5f84\uff0c\u5e76\u5728\u6bcf\u4e2a\u8def\u7531\u5668\u7684\u8f6c\u53d1\u8868\u4e2d\u589e\u52a0\u4e00\u9879\u3002\u5728\u865a\u7535\u8def\u5efa\u7acb\u671f\u95f4\uff0c\u7f51\u7edc\u5c42\u8fd8\u53ef\u4ee5\u9884\u7559\u865a\u7535\u8def\u8def\u5f84\u4e0a\u7684\u5e26\u5bbd\u8d44\u6e90\u3002 \u2003\u2461 \u6570\u636e\u4f20\u9001\uff1b \u2003\u2462 \u865a\u7535\u8def\u62c6\u9664\uff1a\u901a\u77e5\u53e6\u4e00\u4fa7\u7aef\u7cfb\u7edf\u7ed3\u675f\u547c\u53eb\uff0c\u5e76\u66f4\u65b0\u8def\u5f84\u4e0a\u8def\u7531\u5668\u7684\u8f6c\u53d1\u8868\u3002 \u2003\u7aef\u7cfb\u7edf\u53d1\u9001\u7684\u6307\u793a\u865a\u7535\u8def\u5efa\u7acb\u4e0e\u62c6\u9664\u3001\u8def\u7531\u5668\u95f4\u4f20\u9012\u7684\u7528\u4e8e\u5efa\u7acb\u548c\u62c6\u9664\u865a\u7535\u8def\u7684\u62a5\u6587\u79f0\u4e3a\u4fe1\u4ee4\u62a5\u6587 ( signaling message )\uff0c\u5904\u7406\u8fd9\u4e9b\u62a5\u6587\u7684\u534f\u8bae\u79f0\u4e3a\u4fe1\u4ee4\u534f\u8bae ( signaling protocol )\u3002 \u2003\u5b83\u4e0e\u7535\u8def\u4ea4\u6362\u7684\u4e3b\u8981\u533a\u522b\u662f\u5b83\u5efa\u7acb\u4e00\u4e2a\u903b\u8f91\u8fde\u63a5\uff0c\u4f7f\u7528\u5206\u7ec4\u4ea4\u6362\u3002","title":"(1). \u865a\u7535\u8def\u7f51\u7edc (Virtual Circuit)"},{"location":"4-NetworkLayer/4.1/#2_2","text":"\u6570\u636e\u62a5\u7f51\u7edc\u63d0\u4f9b\u5c3d\u529b\u800c\u4e3a\u670d\u52a1\u3002\u6bcf\u5f53\u4e00\u4e2a\u7aef\u7cfb\u7edf\u8981\u53d1\u9001\u5206\u7ec4\uff0c\u5b83\u4e3a\u8be5\u5206\u7ec4\u6dfb\u52a0\u76ee\u7684\u7aef\u7cfb\u7edf\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u6b64\u5206\u7ec4\u63a8\u8fdb\u7f51\u7edc\u4e2d\uff1b\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u5c31\u68c0\u7d22\u8f6c\u53d1\u8868\uff0c\u786e\u5b9a\u8f93\u51fa\u94fe\u8def\u3002 \u2003\u7531\u4e8e\u5730\u5740\u7a7a\u95f4\u5f88\u5927\uff0c\u8f6c\u53d1\u8868\u7684\u8868\u9879\u4f7f\u7528\u5730\u5740\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u901a\u8fc7\u4e24\u7aef\u7684\u503c\u7684\u516c\u5171\u524d\u7f00\u6807\u8bc6\uff0c\u5728\u67e5\u627e\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u6700\u957f\u524d\u7f00\u5339\u914d\u89c4\u5219\u786e\u5b9a\u94fe\u8def\u63a5\u53e3\u3002","title":"(2). \u6570\u636e\u62a5\u7f51\u7edc"},{"location":"4-NetworkLayer/4.1/#3","text":"\u865a\u7535\u8def\u7f51\u7edc\u7684\u5178\u578b\u4f8b\u5b50\u662f ATM \uff0c\u5b83\u7531\u7535\u8bdd\u7f51\u7edc\u6f14\u5316\u800c\u6765\uff0c\u6838\u5fc3\u4e1a\u52a1\u662f\u5b9e\u65f6\u5bf9\u8bdd\uff0c\u5bf9\u65f6\u95f4\u548c\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\uff0c\u4e14\u7aef\u7cfb\u7edf\u975e\u667a\u80fd\uff0c\u56e0\u6b64\u91c7\u7528\u201c\u7b80\u5316\u8fb9\u7f18\uff0c\u590d\u6742\u7f51\u7edc\u201d\u7684\u8bbe\u8ba1\u3002 \u2003\u6570\u636e\u62a5\u7f51\u7edc\u7684\u5178\u578b\u4f8b\u5b50\u662f Internet \uff0c\u5b83\u7531\u4e92\u8fde\u8ba1\u7b97\u673a\u7684\u9700\u6c42\u53d1\u5c55\u800c\u6765\uff0c\u5bf9\u54cd\u5e94\u65f6\u95f4\u7684\u8981\u6c42\u76f8\u5bf9\u4e0d\u662f\u5f88\u4e25\u683c\uff0c\u5e76\u4e14\u7aef\u7cfb\u7edf\u8bbe\u5907\u66f4\u52a0\u667a\u80fd\uff0c\u56e0\u6b64\u91c7\u7528\u201c\u7b80\u5316\u7f51\u7edc\uff0c\u590d\u6742\u8fb9\u7f18\u201d\u7684\u8bbe\u8ba1\uff0c\u66f4\u591a\u7684\u53ef\u9760\u670d\u52a1\u5728\u66f4\u9ad8\u5c42\u5b9e\u73b0\u3002","title":"(3). \u4e24\u79cd\u7f51\u7edc\u7684\u6bd4\u8f83"},{"location":"4-NetworkLayer/4.2/","text":"1. IP \u6570\u636e\u62a5\u683c\u5f0f \u2460 \u7248\u672c\u53f7 ( 4 bit ) \u2003\u6570\u636e\u62a5\u5bf9\u5e94\u7684 IP \u534f\u8bae\u7248\u672c\uff0c\u51b3\u5b9a\u4e86\u5982\u4f55\u89e3\u91ca\u6570\u636e\u62a5\u7684\u5269\u4e0b\u90e8\u5206\u3002 \u2461 \u9996\u90e8\u957f\u5ea6 ( 4 bit ) \u2003\u4ee5 4 \u5b57\u8282\u4e3a\u5355\u4f4d\u3002\u7531\u4e8e options \u5b57\u6bb5\uff0c\u9996\u90e8\u957f\u5ea6\u53ef\u53d8\uff0c\u6545\u901a\u8fc7\u6b64\u5b57\u6bb5\u786e\u5b9a\u6570\u636e\u5b9e\u9645\u5f00\u59cb\u7684\u5730\u65b9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u591a\u6570 IP \u6570\u636e\u62a5\u4e0d\u5305\u542b\u9009\u9879\uff0c\u9996\u90e8\u957f\u5ea6\u4e3a 20 \u5b57\u8282\u3002 \u2462 \u670d\u52a1\u7c7b\u578b ( TOS, 8 bit ) \u2003\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u670d\u52a1\u7c7b\u578b\u7684\u6570\u636e\u62a5\uff0c\u670d\u52a1\u7c7b\u578b\u53ef\u80fd\u662f\u4f4e\u65f6\u5ef6\u3001\u9ad8\u541e\u5410\u91cf\u3001\u53ef\u9760\u6027\u7b49\u3002 \u2463 \u6570\u636e\u62a5\u957f\u5ea6 ( 16 bit ) \u2003 IP \u6570\u636e\u62a5\u7684\u603b\u957f\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c\u7406\u8bba\u6700\u5927\u957f\u5ea6\u4e3a 65535\uff0c\u5b9e\u9645\u4e0a\u5f88\u5c11\u5927\u4e8e 1500\u3002\u8be5\u7406\u8bba\u503c\u5927\u4e8e\u6700\u5927\u4ee5\u592a\u7f51\u5e27\u3002 \u2464 \u6807\u8bc6 ( 16 bit )\u3001\u6807\u5fd7 ( 3 bit )\u3001\u7247\u504f\u79fb ( 13 bit ) \u2003\u4e0e IP \u5206\u7247\u6709\u5173\u3002\u5177\u4f53\u89c1 \u7b2c 2 \u90e8\u5206\u3002 \u2465 \u751f\u5b58\u65f6\u95f4 ( TTL, 8 bit ) \u2003\u6570\u636e\u62a5\u7684\u5bff\u547d\uff0c\u6307\u51fa\u4e86\u6b64\u6570\u636e\u62a5\u80fd\u591f\u7ecf\u8fc7\u7684\u8def\u7531\u5668\u6570\u7684\u6700\u5927\u503c\u3002\u5f00\u59cb\u8bbe\u7f6e\u4e00\u4e2a\u521d\u503c\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\u7684\u5904\u7406\u8be5\u5b57\u6bb5\u503c\u51cf\u4e00\uff0c\u51cf\u4e3a\u96f6\u65f6\u8def\u7531\u5668\u5fc5\u987b\u5c06\u5176\u4e22\u5f03\u3002 \u2466 \u4e0a\u5c42\u534f\u8bae ( 8 bit ) \u2003\u6307\u793a\u4e86 IP \u6570\u636e\u62a5\u5e94\u8be5\u4ea4\u7ed9\u54ea\u4e2a\u4e0a\u5c42\u534f\u8bae\uff0c\u901a\u5e38\u53ea\u5728\u5230\u8fbe\u76ee\u7684\u5730\u8d77\u5230\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u503c\u4e3a 6 \u8868\u793a TCP \uff0c\u503c\u4e3a 17 \u8868\u793a UDP \u3002 \u2467 \u9996\u90e8\u6821\u9a8c\u548c ( 16 bit ) \u2003\u540c UDP \u4e00\u6837\uff0c\u6bcf\u4e24\u4e2a\u5b57\u8282\u5f53\u505a\u4e00\u4e2a\u6570\uff0c\u91c7\u7528\u53cd\u7801\u7b97\u672f\u8fd0\u7b97\u6c42\u548c\u3002\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\u5c31\u8981\u6821\u9a8c\u4e00\u6b21\u3002\u4e0e TCP/UDP \u4e0d\u540c\u7684\u662f\uff0c\u53ea\u5bf9\u9996\u90e8\u8fdb\u884c\u6821\u9a8c\uff1b\u5e76\u4e14\uff0c IP \u4e5f\u5e76\u4e0d\u4e00\u5b9a\u4e0e TCP/IP \u4f4d\u4e8e\u540c\u4e00\u4e2a\u534f\u8bae\u6808\uff0c\u56e0\u6b64\uff0c\u5728\u7f51\u7edc\u5c42\u505a\u6821\u9a8c\u662f\u6709\u5fc5\u8981\u7684\u3002 \u2466 \u6e90 IP \u3001\u76ee\u7684 IP ( 32 bit ) \u2003\u6e90\u4e3b\u673a\u901a\u5e38\u901a\u8fc7 DNS \u67e5\u627e\u786e\u5b9a\u76ee\u7684 IP \u5730\u5740\u3002 \u2467 \u9009\u9879 ( 0 ~ 40 bit ) \u2003\u53ef\u4ee5\u643a\u5e26\u5b89\u5168\u4fe1\u606f\u3001\u6e90\u9009\u8def\u5f84\u7b49\u3002\u8fd9\u4e2a\u5b57\u6bb5\u4f7f\u5f97\u5728\u5904\u7406\u6570\u636e\u62a5\u524d\u4e0d\u80fd\u9884\u5148\u786e\u8ba4\u6570\u636e\u5f00\u59cb\u5904\uff0c\u8fd9\u4e2a\u8003\u8651\u5bf9\u4e3b\u673a\u4e0a\u7684 IP \u5904\u7406\u3001\u9ad8\u6027\u80fd\u8def\u7531\u5668\u5f88\u91cd\u8981\uff0c\u56e0\u6b64\uff0c\u5728 IPv6 \u4e2d\u5df2\u5220\u9664\u6b64\u5b57\u6bb5\u3002 \u2468 \u586b\u5145 \u2003\u8865\u9f50\uff0c\u4f7f\u5934\u90e8\u957f\u4e3a 4 \u5b57\u8282\u7684\u500d\u6570\u3002 2. IP \u6570\u636e\u62a5\u5206\u7247 ( Fragmentation ) (1). \u6807\u8bc6\u3001\u6807\u5fd7\u3001\u7247\u504f\u79fb \u2003\u4e00\u4e2a\u94fe\u8def\u5c42\u5e27\u80fd\u627f\u8f7d\u7684\u6700\u5927\u6570\u636e\u91cf\u4e3a\u6700\u5927\u4f20\u8f93\u5355\u5143 ( MTU )\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u94fe\u8def\u5c42\u534f\u8bae\uff0c\u5176\u503c\u5e76\u4e0d\u786e\u5b9a\u3002\u5f53 IP \u6570\u636e\u62a5\u5927\u5c0f\u5927\u4e8e\u51fa\u94fe\u8def\u7684\u6709\u6548\u8f7d\u8377\u5927\u5c0f\uff0c\u4e14\u5bf9\u5e94\u7684\u6807\u5fd7\u4f4d\u5141\u8bb8\u8def\u7531\u5668\u8fdb\u884c\u5206\u7247\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fdb\u884c\u5206\u7247\uff0c\u8fd9\u4e9b\u7247 ( fragment ) \u5728\u76ee\u7684\u4e3b\u673a\u7684\u8fd0\u8f93\u5c42\u4e4b\u524d\u91cd\u65b0\u7ec4\u88c5\u3002\u5206\u7247\u8fc7\u7a0b\u5229\u7528\u4e86\u5934\u90e8\u76f8\u5173\u5b57\u6bb5\uff1a \u6807\u8bc6 ( ID, 16 bit )\uff1a\u548c\u6e90 IP \u3001\u76ee\u7684 IP \u3001\u4e0a\u5c42\u534f\u8bae\u5b57\u6bb5\u4e00\u540c\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u5206\u7247 \u6807\u5fd7 ( 3 bit )\uff1a\u5176\u4e2d\u4e00\u4e2a\u6bd4\u7279\u4fdd\u7559\uff0c\u53e6\u5916\u4e24\u4e2a\u6bd4\u7279\u5206\u522b\u4e3a\uff1a DF ( Don't Fragment )\uff1a\u5f53 DF = 1 \uff0c\u7981\u6b62\u5206\u7247 MF ( More Fragment )\uff1a\u5f53 MF = 0 \uff0c\u4ee3\u8868\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u5206\u7247 \u7247\u504f\u79fb ( 13 bit )\uff1a\u4ee5 8 \u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u6307\u51fa\u4e86\u5206\u7247\u5c01\u88c5\u7684\u539f\u6570\u636e\u7684\u76f8\u5bf9\u504f\u79fb\u91cf(\u9996\u5b57\u8282) (2). \u5206\u7247\u8fc7\u7a0b \u2003\u8bbe\u539f IP \u5206\u7ec4\u603b\u957f\u5ea6\u4e3a $L$ byte \uff0c\u5f85\u8f6c\u53d1\u94fe\u8def\u7684 MTU \u5927\u5c0f\u4e3a $M$ byte \u3002\u5f53 $L>M$ \u4e14 DF = 1 \uff0c\u9700\u8981\u5206\u7247\u3002 \u4e00\u4e2a\u6700\u5927\u5206\u7247\u53ef\u4ee5\u5c01\u88c5\u7684\u6570\u636e\u5927\u5c0f\uff1a$d=\\lfloor \\frac{(M-20)}{8}\\rfloor \u00d7 8$ \u5728\u6700\u5927\u5206\u7ec4\u6761\u4ef6\u4e0b\u9700\u8981\u7684\u603b\u7247\u6570\uff1a$n=\\lceil (L-20)/d \\rceil$ \u6bcf\u7247\u7684\u7247\u504f\u79fb\u91cf\u4e3a\uff1a$F_i=\\frac{d}{8}\u00d7(i-1),\\ 1\\leq i \\leq n$ \u524d $n-1$ \u7247\u7684\u603b\u957f\u5ea6\u4e3a $d+20$\uff0c\u6700\u540e\u4e00\u7247\u7684\u957f\u5ea6\u4e3a $L-(n-1)\\cdot d$\u3002 3. IPv4 \u7f16\u5740 (1). \u5b50\u7f51\u4e0e\u63a5\u53e3 \u2003\u7f51\u7edc\u5c42\u8bbe\u5907\uff08\u4e3b\u673a\u3001\u8def\u7531\u5668\uff09\u4e0e\u7269\u7406\u94fe\u8def\u4e4b\u95f4\u7684\u8fb9\u754c\u53eb\u505a\u63a5\u53e3 ( interface )\uff0c\u8def\u7531\u5668\u901a\u5e38\u6709\u591a\u4e2a\u63a5\u53e3\uff0c\u73b0\u4ee3\u7684\u4e3b\u673a\u4e5f\u53ef\u4ee5\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u63a5\u53e3\uff08\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e3b\u673a\u53ea\u6709\u4e00\u6761\u94fe\u8def\u63a5\u5165\u7f51\u7edc\uff09\u3002 IP \u8981\u6c42\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6709\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u5176\u957f\u5ea6\u4e3a 32 bit \uff0c\u7531\u4e8e\u4e8c\u8fdb\u5236\u6570\u96be\u4e8e\u8bb0\u5fc6\uff0c\u56e0\u6b64\u901a\u5e38\u7528\u70b9\u5206\u5341\u8fdb\u5236\u8bb0\u6cd5 ( dotted-decimal notation ) \u8868\u793a\u3002 \u2003\u6bcf\u4e2a\u4ee5\u4e3b\u673a\u548c\u8def\u7531\u5668\uff08\u7f51\u7edc\u5c42\u8bbe\u5907\uff09\u7684\u63a5\u53e3\u4e3a\u7aef\u70b9\u5212\u5206\u51fa\u7684\u533a\u57df ( \"islands of network\" ) \u53eb\u505a\u5b50\u7f51 ( subnet )\u3002 IP \u7f16\u5740\u4f9d\u7167\u8fd9\u4e00\u70b9\uff0c\u5c06 IP \u5730\u5740\u5206\u4e3a\u7f51\u7edc\u53f7 ( NetID ) \u548c\u4e3b\u673a\u53f7 ( HostID ) \u4e24\u90e8\u5206\u3002 (2). \u6709\u7c7b IP \u5730\u5740 \u2003\u5728 CIDR \u88ab\u91c7\u7528\u4e4b\u524d\uff0c IP \u4f7f\u7528\u5206\u7c7b\u7f16\u5740 ( classful addressing )\uff0c\u901a\u8fc7\u4e8c\u5206\u6cd5\u505a\u5982\u4e0b\u5212\u5206\uff1a A \u7c7b\u5730\u5740\uff1a\u9996\u4f4d\u4e3a 0\uff0c\u5360\u7528\u5730\u5740\u7a7a\u95f4\u7684 50%\uff0c NetID(8)-HostID(24) \uff0c 0.0.0.0 ~ 127.255.255.255 \u3002 B \u7c7b\u5730\u5740\uff1a\u524d\u4e24\u4f4d\u4e3a 10\uff0c\u5360 25%\uff0c NetID(16)-HostID(16) \uff0c 128.0.0.0 ~ 191.255.255.255 \u3002 C \u7c7b\u5730\u5740\uff1a\u524d\u4e09\u4f4d\u4e3a 110\uff0c\u5360 12.5%\uff0c NetID(24)-HostID(8) \uff0c 192.0.0.0 ~ 223.255.255.255 \u3002 D \u7c7b\u5730\u5740\uff1a\u524d\u56db\u4f4d 1110\uff0c\u5360 6.25%\uff0c\u4e0d\u533a\u5206\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\uff0c 224.0.0.0 ~ 239.255.255.255 \u3002\u4e5f\u88ab\u79f0\u4f5c\u591a\u64ad\u5730\u5740\uff0c\u7528\u4e8e\u6807\u8bc6\u4e92\u8054\u7f51\u4e2d\u4e00\u7ec4\u4e3b\u673a\uff0c\u53ea\u80fd\u4f5c\u76ee\u7684 IP \u3002 E \u7c7b\u5730\u5740\uff1a\u524d\u56db\u4f4d 1111\uff0c\u5360 6.25%\uff0c\u4e0d\u533a\u5206\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\uff0c 240.0.0.0 ~ 255.255.255.255 \u3002 \u2003 A\u3001B\u3001C \u7c7b\u5730\u5740\u53ef\u4ee5\u7528\u4e8e\u6807\u8bc6\u5b50\u7f51\uff0c\u4f46\u5176\u4e2d\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5730\u5740\u90fd\u53ef\u4ee5\u7528\u4e8e\u6807\u8bc6\u4e3b\u673a\u3002 \u4e0d\u80fd\u6807\u8bc6\u63a5\u53e3\u7684\u7279\u6b8a\u5730\u5740 NetID HostID \u4f5c\u4e3a\u6e90 IP \u4f5c\u4e3a\u76ee\u7684 IP \u7528\u9014 \u51680 \u51680 \u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u5728\u672c\u7f51\u8303\u56f4\u5185\u8868\u793a\u672c\u673a\uff1b\u5728\u8def\u7531\u8868\u4e2d\u7528\u4e8e\u8868\u793a\u9ed8\u8ba4\u8def\u7531 \u51680 \u7279\u5b9a\u503c \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u7528\u4e8e\u8868\u793a\u672c\u7f51\u5185\u67d0\u4e2a\u7279\u5b9a\u4e3b\u673a \u51681 \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u672c\u7f51\u5e7f\u64ad\u5730\u5740 \u7279\u5b9a\u503c \u51680 \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u7f51\u7edc\u7684\u5730\u5740\uff0c\u8868\u793a\u4e00\u4e2a\u7f51\u7edc \u7279\u5b9a\u503c \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u76f4\u63a5\u5e7f\u64ad\u5730\u5740\uff0c\u5bf9\u7279\u5b9a\u7f51\u7edc\uff08\u53e6\u5916\u4e00\u4e2a\u7f51\u7edc\uff09\u4e0a\u6240\u6709\u4e3b\u673a\u8fdb\u884c\u5e7f\u64ad 127 \u975e\u51680\u6216\u975e\u51681\u7684\u4efb\u4f55\u6570 \u53ef\u4ee5 \u53ef\u4ee5 \u73af\u56de\u5730\u5740\uff0c\u7528\u4e8e\u672c\u5730\u8f6f\u4ef6\u73af\u56de\u6d4b\u8bd5 \u2003 A\u3001B\u3001C \u8fd8\u4fdd\u7559\u4e86\u4e00\u90e8\u5206\u79c1\u6709\u5730\u5740\uff0c\u8fd9\u4e9b\u5730\u5740\u53ea\u80fd\u5728\u6bcf\u4e00\u4e2a\u7ec4\u7ec7\u6216\u5b50\u7f51\u5185\u90e8\u4f7f\u7528\uff0c\u5728\u516c\u5171\u4e92\u8054\u7f51\u7edc\u4e2d\u65e0\u6cd5\u4f7f\u7528\u3002 Private IPs Class NetIDs Blocks A 10 1 B 172.16 to 172.31 16 C 192.168.0 to 192.168.255 256 (3). IP \u5b50\u7f51\u5212\u5206 \u2003\u6709\u7c7b IP \u5730\u5740\u901a\u8fc7\u7f51\u7edc\u53f7\u5bf9\u5730\u5740\u7a7a\u95f4\u8fdb\u884c\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5212\u5206\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5f53\u4e00\u4e2a\u7ec4\u7ec7\u83b7\u5f97\u4e00\u4e2a\u7f51\u7edc\u53f7\u4ee5\u540e\uff0c\u5bf9 IP \u7ee7\u7eed\u8fdb\u884c\u5b50\u7f51\u5212\u5206\uff1a NetID-SubID-HostID \uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u5b50\u7f51\u901a\u8fc7\u8def\u7531\u5668\u4e92\u8fde\uff0c\u5728\u6570\u636e\u4f20\u64ad\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5b50\u7f51\u53f7\u9694\u79bb\u6d41\u91cf\u3002 \u2003\u5b50\u7f51\u63a9\u7801 ( network mask )\uff1a\u5f62\u5982 IP \u5730\u5740\uff0c\u662f\u4e00\u4e2a\u7528\u70b9\u5206\u5341\u8fdb\u5236\u8868\u793a\u7684 32 \u6bd4\u7279\u6570\uff1b NetID-SubID \u5168\u53d6 1\uff0c HostID \u5168\u53d6 0\u3002\u76ee\u7684 IP \u5730\u5740\u901a\u8fc7\u4e0e\u5b50\u7f51\u63a9\u7801\u8fdb\u884c\u6c42\u4e0e\u8fd0\u7b97\uff0c\u53ef\u4ee5\u63d0\u53d6\u51fa\u5b50\u7f51\u5730\u5740\uff0c\u4ece\u800c\u5f97\u5230\u5b50\u7f51\u7684\u5730\u5740\u8303\u56f4\uff1b\u5728\u5730\u5740\u8303\u56f4\u5185\u53bb\u6389\u4e3b\u673a\u57df\u5168 0 \u548c\u5168 1 \u7684 IP \u5730\u5740\uff0c\u5f97\u5230\u53ef\u5206\u914d\u5730\u5740\u8303\u56f4\u3002 (4). CIDR \u2003 Internet \u91c7\u7528\u7684\u5730\u5740\u5206\u914d\u7b56\u7565\u4e3a \u65e0\u7c7b\u57df\u95f4\u8def\u7531 ( Classless Interdomain Routing, CIDR )\uff0c\u5b83\u4e00\u822c\u5316\u4e86\u5b50\u7f51\u5bfb\u5740\u7684\u6982\u5ff5\uff0c\u6d88\u9664\u4e86\u4f20\u7edf\u7684 A\u3001B\u3001C \u7c7b\u5730\u5740\u754c\u9650\uff1a\u5c06 NetID-SubID \u7edf\u4e00\u4e3a\u7f51\u7edc\u524d\u7f00\uff1b\u878d\u5408\u4e86\u5b50\u7f51\u5730\u5740\u4e0e\u5b50\u7f51\u63a9\u7801\uff0c\u65e0\u7c7b\u5730\u5740\u683c\u5f0f\u4e3a a.b.c.d/ x \uff0c x \u4e3a\u7f51\u7edc\u524d\u7f00\u957f\u5ea6\u3002 \u2003 CIDR \u63d0\u9ad8\u4e86\u5730\u5740\u7a7a\u95f4\u7684\u5229\u7528\u7387\uff1b\u4f34\u968f\u7740\u8def\u7531\u805a\u5408\u6280\u672f\u7684\u51fa\u73b0\uff0c\u6709\u6548\u51cf\u5c11\u4e86\u8f6c\u53d1\u8868\u7684\u8868\u9879\u6570\uff0c\u63d0\u9ad8\u4e86\u8def\u7531\u6548\u7387\u3002 \u2003\u8def\u7531\u805a\u5408\u901a\u5e38\u4f5c\u7528\u4e8e\u8fd9\u6837\u7684\u60c5\u5f62\uff1a\u5b50\u7f51\u6570\u4e3a 2 \u7684\u500d\u6570\uff0c\u4e14\u5b83\u4eec\u7684\u5730\u5740\u7a7a\u95f4\u8fde\u7eed\u3002\u5f53\u8def\u7531\u805a\u96c6\u7684\u7a7a\u95f4\u5c5e\u4e8e\u53e6\u5916\u4e00\u4e2a ISP \u7684\u5b50\u7f51\uff0c\u5f53\u6570\u636e\u8f6c\u53d1\u5230\u8fd9\u4e2a\u5b50\u7f51\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u8def\u7531\u9ed1\u6d1e\u73b0\u8c61\u3002\u4e3a\u4e86\u4ecd\u80fd\u591f\u5229\u7528\u8def\u7531\u805a\u96c6\u53ca\u5e26\u6765\u7684\u4fbf\u5229\uff0c\u53ef\u4ee5\u5728\u4e24\u4e2a ISP \u524d\u7684\u8def\u7531\u5668\u7684\u8f6c\u53d1\u8868\u4e2d\uff0c\u5229\u7528\u6700\u957f\u524d\u7f00\u5339\u914d\u539f\u5219\uff0c\u907f\u514d\u8def\u7531\u9ed1\u6d1e\u3002 (5). DHCP \u534f\u8bae \u2003\u4e00\u53f0\u4e3b\u673a\u83b7\u53d6 IP \u901a\u5e38\u6709\u4e24\u79cd\u65b9\u6cd5\u3002\u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u914d\u7f6e\uff0c\u5373\u901a\u8fc7\u7f51\u7edc\u7ba1\u7406\u5458\u6216\u64cd\u4f5c\u7cfb\u7edf\u9759\u6001\u8bbe\u5b9a IP \u5730\u5740\u3002\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u9ed8\u8ba4\u7f51\u5173\uff08\u7b2c\u4e00\u8df3\u7684\u63a5\u53e3\u7684 IP\uff09\u3001\u672c\u5730\uff08\u9ed8\u8ba4\uff09 DNS \u670d\u52a1\u5668\u7b49\u3002 \u2003\u52a8\u6001\u5730\u5740\u914d\u7f6e\u901a\u8fc7\u52a8\u6001\u4e3b\u673a\u914d\u7f6e\u534f\u8bae ( Dynamic Host Configuration Protocol, DHCP ) \u5b9e\u73b0\u3002\u5728\u4e00\u53f0\u4e3b\u673a\u63a5\u5165\u7f51\u7edc\u65f6\uff0c\u53ef\u901a\u8fc7 DHCP \u83b7\u5f97\u4e34\u65f6\u7684 IP \u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u9ed8\u8ba4\u7f51\u5173\u3001\u672c\u5730 DNS \u670d\u52a1\u5668\u5730\u5740\uff0c DHCP \u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e3b\u673a\u52a8\u6001\u5730\u8fde\u63a5\u548c\u79bb\u5f00\u67d0\u5b50\u7f51\u7684\u60c5\u5883\u4e2d\u3002 \u2003 DHCP \u662f\u4e00\u4e2a\u5e94\u7528\u5c42\u7684 C-S \u534f\u8bae\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7f51\u5177\u6709\u4e00\u4e2a DHCP \u670d\u52a1\u5668\uff08\u5982\u679c\u6ca1\u6709\uff0c\u67d0\u53f0\u8def\u7531\u5668\u4f5c\u4e3a\u4e2d\u7ee7\u4ee3\u7406\uff0c\u8bb0\u5f55\u4e86\u7528\u4e8e\u8be5\u5b50\u7f51\u7684 DHCP \u670d\u52a1\u5668\u5730\u5740\uff09\u3002\u4e00\u53f0\u65b0\u63a5\u5165\u7684\u4e3b\u673a\u901a\u8fc7 4 \u4e2a\u6b65\u9aa4\u83b7\u5f97 IP \u5730\u5740\uff1a \u2460 DHCP server discovery \uff1a\u5ba2\u6237\u7aef\u5728\u7aef\u53e3 67 \u901a\u8fc7 UDP \u5206\u7ec4\u53d1\u9001\u4e00\u4e2a DHCP \u53d1\u73b0\u62a5\u6587 ( DHCP discovery message )\uff0c\u9996\u5148\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6b64\u62a5\u6587\u7684 IP \u6570\u636e\u62a5\uff0c\u6e90 IP \u586b\u4e3a\u201c\u672c\u4e3b\u673a\u201d 0.0.0.0 \uff0c\u76ee\u7684 IP \u586b\u4e3a\u5e7f\u64ad\u5730\u5740 255.255.255.255 \u3002\u5728\u5ba2\u6237\u7aef\u5c06\u6570\u636e\u62a5\u4f20\u7ed9\u94fe\u8def\u5c42\u540e\uff0c\u94fe\u8def\u5c42\u5c06\u8be5\u5e27\u5e7f\u64ad\u5230\u6240\u6709\u4e0e\u8be5\u5b50\u7f51\u76f8\u90bb\u7684\u8282\u70b9\u3002 \u2461 DHCP server offer \uff1a DHCP \u670d\u52a1\u5668\u6536\u5230\u4e00\u4e2a\u53d1\u73b0\u62a5\u6587\u65f6\uff0c\u4ecd\u901a\u8fc7\u5e7f\u64ad\u5730\u5740 255.255.255.255 \uff0c\u5411\u6240\u6709\u7ed3\u70b9\u5e7f\u64ad\u4e00\u4e2a DHCP \u53d1\u73b0\u62a5\u6587 ( DHCP offer message )\u3002\u62a5\u6587\u7684\u5185\u5bb9\u5305\u542b\u62a5\u6587\u7684\u4e8b\u52a1 ID\u3001\u5411\u5ba2\u6237\u7aef\u63a8\u8350\u7684 IP \u5730\u5740\u3001\u7f51\u7edc\u63a9\u7801\u548c IP \u5730\u5740\u7684\u79df\u7528\u671f\u3002 \u2462 DHCP request \uff1a\u5ba2\u6237\u7aef\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u5668\u4e2d\u9009\u62e9\u4e00\u4e2a\uff0c\u76f8\u5e94\u4e00\u4e2a DHCP \u8bf7\u6c42\u62a5\u6587 ( DHCP request message )\uff0c\u56de\u5e94\u914d\u7f6e\u53c2\u6570\u3002 \u2463 DHCP ACK \uff1a\u670d\u52a1\u5668\u54cd\u5e94\u4e00\u4e2a DHCP ACK \u62a5\u6587\uff0c\u8bc1\u5b9e\u53c2\u6570\u3002 \u2003 DHCP \u7684\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u5f53\u4e00\u53f0\u4e3b\u673a\u5728\u4e0d\u540c\u5b50\u7f51\u95f4\u79fb\u52a8\uff0c\u65e0\u6cd5\u7ef4\u6301\u4e0e\u8fdc\u7a0b\u5e94\u7528\u7684 TCP \u8fde\u63a5\u3002 (6). \u7f51\u7edc\u5730\u5740\u8f6c\u6362 ( NAT ) \u2003\u5bf9 IPv4 \u6765\u8bf4\uff0c IP \u5730\u5740\u5df2\u7ecf\u67af\u7aed\uff1b\u5e76\u4e14\uff0c\u5bf9\u4e00\u4e2a ISP \u6765\u8bf4\uff0c\u5982\u679c\u5b9e\u73b0\u4e3a\u5176\u5206\u914d\u4e86\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff0c\u4f46\u968f\u540e\u9700\u8981\u66f4\u591a\u7684\u5730\u5740\u6570\uff0c\u4e5f\u4f1a\u9020\u6210\u95ee\u9898\u3002\u4ee5\u4e0a\u7684\u60c5\u5f62\u901a\u8fc7\u5df2\u88ab\u5e7f\u6cdb\u5e94\u7528\u7684\u7f51\u7edc\u5730\u5740\u8f6c\u6362 ( Network Address Translation ) \u88ab\u89e3\u51b3\u3002 \u2003\u5047\u8bbe\u5f53\u524d\u5177\u6709 A \u7c7b\u79c1\u6709\u5730\u5740\u7684\u4e09\u53f0\u5bb6\u5ead\u4e3b\u673a 10.0.0.1 \u3001 10.0.0.2 \u3001 10.0.0.3 \uff0c\u5b83\u4eec\u5171\u540c\u63a5\u5165\u8def\u7531\u5668\u7684 10.0.0.4 \u7aef\uff0c\u8def\u7531\u5668\u53e6\u6709\u4e00\u7aef\u5177\u6709\u516c\u5171 IP \u5730\u5740 138.76.29.7 \u3002\u8fd9\u4e9b\u5185\u90e8\u4e3b\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u4f7f\u7528\u8fd9\u4e9b\u79c1\u6709\u5730\u5740\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u4f46\u5982\u679c\u8981\u4e0e\u5916\u754c\u901a\u4fe1\uff0c\u5c31\u8981\u4f7f\u7528\u8def\u7531\u5668\u7ef4\u62a4\u7684 NAT \u8f6c\u6362\u8868\uff1a\u6bcf\u4e2a\u5916\u51fa\u7684\u6570\u636e\u62a5\u7684 (src-IP, src-Port) \u88ab\u66ff\u6362\u4e3a (NAT-IP, new-Port) \uff0c NAT \u8f6c\u6362\u8868\u7ef4\u62a4\u8fd9\u4e2a\u6620\u5c04\uff0c\u8fd4\u56de\u6765\u7684\u6570\u636e\u62a5\u518d\u6839\u636e\u8868\u9879\u66ff\u6362\uff0c\u5c31\u53ef\u4ee5\u4e0e\u5185\u7f51\u76f8\u5e94\u4e3b\u673a\u901a\u4fe1\u3002 NAT Translation Table WAN side LAN side 138.76.29.7, 5001 10.0.0.1, 3345 \u2003 NAT \u6280\u672f\u7684\u4ea7\u751f\u8fd8\u5e26\u6765\u4e86\u5176\u4ed6\u7684\u597d\u5904\uff1a\u2460 \u672c\u5730\u4e3b\u673a IP \u53d8\u66f4\uff0c\u65e0\u9700\u901a\u77e5\u5916\u754c\uff1b\u2461 \u672c\u5730\u53d8\u66f4 ISP \u65f6\uff0c\u65e0\u9700\u4fee\u6539\u5185\u90e8\u7f51\u7edc IP \uff1b\u2462 \u5185\u90e8\u7f51\u7edc\u5bf9\u5916\u754c\u4e0d\u53ef\u89c1\uff0c\u5916\u754c\u65e0\u6cd5\u76f4\u63a5\u5bfb\u5740\uff0c\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002 \u2003\u76f8\u5e94\u5730\uff0c NAT \u8fd8\u5e26\u6765\u4e86\u4ee5\u4e0b\u4e89\u8bae\uff1a\u2460 \u8def\u7531\u5668\u53ea\u5e94\u8be5\u5904\u7406\u7f51\u7edc\u5c42\u529f\u80fd\uff1b\u2461 \u8fdd\u80cc\u7aef-\u7aef\u901a\u4fe1\u539f\u5219\uff0c\u4f5c\u4e3a\u4e2d\u95f4\u8bbe\u5907\u7684\u8def\u7531\u5668\u4e0d\u5e94\u4fee\u6539\u4f20\u8f93\u5c42\u7684\u5185\u5bb9\uff1b\u2462 \u7aef-\u7aef\u5e94\u7528\u7684\u5f00\u53d1\u5fc5\u987b\u8981\u8003\u8651\u5230 NAT \u7684\u5b58\u5728\uff0c\u5982 P2P \uff1b\u2463 \u5730\u5740\u77ed\u7f3a\u5e94\u8be5\u7531 IPv6 \u5b8c\u6210\u3002 \u2003\u6309\u7167\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4ee5 P2P \u5e94\u7528\u4e3a\u4f8b\uff0c\u5f53\u5176\u4e2d\u4e00\u53f0\u5bb6\u5ead\u4e3b\u673a\u8981\u4f5c\u4e3a\u5bf9\u7b49\u65b9\u7684\u670d\u52a1\u5668\u89d2\u8272\uff0c\u5ba2\u6237\u7aef\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u670d\u52a1\u5668\uff0c\u9020\u6210\u4e86 NAT \u7a7f\u900f\u95ee\u9898\u3002\u53ef\u6709\u4ee5\u4e0b\u89e3\u51b3\u65b9\u6848\uff1a \u2460 \u5728\u8def\u7531\u5668\u4e2d\u9759\u6001\u914d\u7f6e NAT \uff0c\u5c06\u7279\u5b9a\u7aef\u53e3\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u76f8\u5e94\u4e3b\u673a\uff0c e.g. (138.76.29.7, 2500) \u603b\u662f\u8f6c\u53d1\u7ed9 (10.0.0.1, 2500) \u2461 \u5229\u7528 UPnP \u4e92\u8054\u7f51\u7f51\u5173\u8bbe\u5907\u534f\u8bae\u81ea\u52a8\u914d\u7f6e \u2462 \u4e2d\u7ee7\uff1a\u53cc\u65b9\u4e0e\u4e2d\u7ee7\u670d\u52a1\u5668\u8fde\u63a5 (7). ICMP \u534f\u8bae \u2003\u4e92\u8054\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae (Internet Control Message Protocol, ICMP) \u652f\u6301\u4e3b\u673a\u6216\u8def\u7531\u5668\u8fdb\u884c\u5dee\u9519\u62a5\u544a\u6216\u7f51\u7edc\u63a2\u8be2\u3002 \u5dee\u9519\u62a5\u544a\u62a5\u6587 \u76ee\u7684\u4e0d\u53ef\u8fbe\uff1a\u6570\u636e\u62a5\u5230\u8fbe\u76ee\u7684\u5730\u540e\uff0c\u65e0\u6cd5\u4ea4\u4ed8\u6570\u636e\uff0c\u5219\u4e22\u5f03\u62a5\u6587\uff0c\u5e76\u53d1\u9001\u5dee\u9519\u62a5\u544a \u6e90\u6291\u5236\uff1a\u7f13\u5b58\u5df2\u6ee1\u5bfc\u81f4\u6570\u636e\u62a5\u88ab\u4e22\u5f03\uff0c\u5728\u5b9e\u9645\u7684\u7f51\u7edc\u7684\u62e5\u585e\u63a7\u5236\u6ca1\u6709\u91c7\u7528\u6b64\u65b9\u6cd5 \u8d85\u671f\uff1a TTL \u8d85\u671f\u4f7f\u5f97\u6570\u636e\u62a5\u88ab\u4e22\u5f03 \u53c2\u6570\u95ee\u9898\uff1a\u8f6c\u53d1\u6570\u636e\u62a5\u65f6\u53d1\u73b0\u5934\u90e8\u67d0\u4e9b\u5b57\u6bb5\u53c2\u6570\u9519\u8bef\uff0c\u4e22\u5f03\u62a5\u6587 \u91cd\u5b9a\u5411\uff1a\u5f53\u67d0\u6570\u636e\u62a5\u5230\u8fbe\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u5728\u8def\u7531\u5668\u770b\u6765\u4e0d\u8be5\u7531\u5b83\u8f6c\u53d1\uff0c\u5219\u50cf\u6e90\u4e3b\u673a\u53d1\u9001\u91cd\u5b9a\u5411\u62a5\u6587 \u7f51\u7edc\u63a2\u8be2 \u56de\u58f0\u8bf7\u6c42\u4e0e\u5e94\u7b54\u62a5\u6587\uff1a\u901a\u8fc7\u63a5\u6536\u76f8\u5e94\u63a2\u6d4b\u7f51\u7edc\u662f\u5426\u901a\u8fbe\uff0c\u5982 ping \u5de5\u5177 \u65f6\u95f4\u6233\u8bf7\u6c42\u4e0e\u5e94\u7b54\u62a5\u6587 \u4e0d\u53d1\u9001 ICMP \u5dee\u9519\u62a5\u544a\u62a5\u6587\u7684\u7279\u6b8a\u60c5\u51b5\uff1a ICMP \u62a5\u6587\u51fa\u5dee\u9519 \u9664\u4e86\u7b2c\u4e00\u4e2a IP \u6570\u636e\u62a5\u5206\u7247\u7684\u6240\u6709\u540e\u7eed\u5206\u7247 \u6240\u6709\u7684\u591a\u64ad IP \u6570\u636e\u62a5 \u5177\u6709\u7279\u6b8a\u5730\u5740\u7684 IP \u6570\u636e\u62a5 (\u5982 127.0.0.0 \u6216 0.0.0.0 ) \u2003 ICMP \u662f\u4e00\u4e2a\u4ecb\u4e8e\u7f51\u7edc\u5c42\u4e0e\u4f20\u8f93\u5c42\u4e4b\u95f4\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u3002 ICMP \u62a5\u6587\u88ab\u5c01\u88c5\u5230 IP \u6570\u636e\u62a5\u4e2d\u4f20\u8f93\uff0c\u5176\u7ed3\u6784\u4e3a ICMP header(8 byte) + \u51fa\u95ee\u9898\u7684 IP \u6570\u636e\u62a5\u5934\u90e8 + IP \u6570\u636e\u524d 8 \u5b57\u8282\u3002\u6700\u540e\u4e00\u90e8\u5206\u5bf9\u5e94\u5b8c\u6210\u7684 UDP \u5934\u90e8\u6216 TCP \u5934\u90e8\u7684\u7aef\u53e3\u53f7\u5b57\u6bb5\u4e4b\u524d\u3002 \u2003\u5e94\u7528 Trace Route \u4e3e\u4f8b\uff1a\u6e90\u4e3b\u673a\u53d1\u9001\u4e00\u7cfb\u5217 UDP \u6570\u636e\u62a5\uff0c\u7b2c i \u7ec4\u6570\u636e\u62a5 TTL = i \uff0c\u4e14\u76ee\u7684\u7aef\u53e3\u53f7\u8bbe\u4e3a\u4e0d\u53ef\u80fd\u4f7f\u7528\u7684\u4e00\u4e2a\u7aef\u53e3\u53f7\u3002\u8def\u7531\u5668\u4f1a\u8fd4\u56de ICMP \u62a5\u6587 (type = 11, code = 0)\uff0c\u643a\u5e26\u8def\u7531\u5668\u540d\u79f0\u548c IP \u5730\u5740\u4fe1\u606f\uff1b\u5f53\u76ee\u7684\u4e3b\u673a\u8fd4\u56de ICMP \u62a5\u6587\u201c\u76ee\u7684\u7aef\u53e3\u4e0d\u53ef\u8fbe\u201d (type = 3, code = 3)\uff0c\u6e90\u4e3b\u673a\u505c\u6b62\u53d1\u9001\u3002 4. IPv6 \u7b80\u4ecb (1). IPv6 \u6570\u636e\u62a5\u683c\u5f0f IPv6 \u6700\u521d\u52a8\u673a\u662f IPv4 \u5730\u5740\u7a7a\u95f4\u7684\u8017\u5c3d\uff1b\u5b83\u8fd8\u6539\u8fdb\u4e86\u5934\u90e8\u7684\u683c\u5f0f\uff0c\u652f\u6301\u5feb\u901f\u5904\u7406\u3001 QoS \u3002 \u2460 \u4f18\u5148\u7ea7 ( 8 bit ) \u2003\u529f\u80fd\u7279\u6027\u5bf9\u5e94 IPv4 \u7684 ToS \u3002 \u2461 \u6d41\u6807\u7b7e ( 20 bit ) \u2003\u7528\u4e8e\u6807\u8bc6\u6e90\u4e3b\u673a\u5230\u76ee\u7684\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u62a5\uff0c\u4ee5\u7ed9\u5b9a\u67d0\u4e9b\u6570\u636e\u62a5\u4f18\u5148\u6743\u3002\u6d41\u7684\u5b9a\u4e49\u5c1a\u5728\u8ba8\u8bba\u4e2d\u3002 \u2462 \u6709\u6548\u8f7d\u8377\u957f\u5ea6 ( 16 bit ) \u2003\u7ed9\u51fa IPv6 \u7684 40 \u5b57\u8282\u9996\u90e8\u4e4b\u540e\u7684\u6570\u636e\u957f\u5ea6\uff0c\u5305\u62ec\u6269\u5c55\u9996\u90e8 + \u6570\u636e\u3002 \u2463 \u4e0b\u4e00\u4e2a\u9996\u90e8 ( 8 bit ) \u2003\u5982\u679c\u6570\u636e\u90e8\u5206\u6709\u6269\u5c55\u9996\u90e8\u7684\u8bdd\uff0c\u8be5\u90e8\u5206\u6307\u5411\u4e0b\u4e00\u4e2a\u6269\u5c55\u9996\u90e8\uff0c\u4e0b\u4e00\u4e2a\u6269\u5c55\u9996\u90e8\u4e5f\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u3002\u6700\u540e\u4e00\u4e2a\u9996\u90e8\u6307\u5411\u4f20\u8f93\u5c42\u62a5\u6587\u7684\u5934\u90e8\u3002 \u2464 \u8df3\u6b65\u9650\u5236 ( 8 bit ) \u2003\u529f\u80fd\u7279\u6027\u540c IPv4 \u7684 TTL \uff1a\u6bcf\u7ecf\u8fc7\u4e00\u8df3\u503c\u51cf\u4e00\uff0c\u51cf\u4e3a\u96f6\u540e\u4e22\u5f03\u5e76\u53d1\u9001 ICMP \u62a5\u6587\u3002 \u2465 \u6e90\u5730\u5740\u3001\u76ee\u7684\u5730\u5740 ( 128 bit ) \u2003\u5927\u5927\u6269\u5c55\u4e86\u5730\u5740\u7a7a\u95f4\u3002 \u8fd8\u6709\u53e6\u5916\u4e00\u90e8\u5206\u76f8\u5bf9\u4e8e IPv4 \u7684\u6539\u53d8\uff1a \u5f7b\u5e95\u79fb\u9664 checksum \uff0c\u51cf\u5c11\u6bcf\u8df3\u5904\u7406\u65f6\u95f4 \u9009\u9879\u5b57\u6bb5\u79fb\u9664\uff0c\u901a\u8fc7\u4e0b\u4e00\u4e2a\u9996\u90e8\u5b57\u6bb5\u5141\u8bb8\u591a\u4e2a\u9009\u9879\u9996\u90e8 \u91c7\u7528\u65b0\u7248\u7684 ICMPv6 \uff0c\u589e\u52a0\u62a5\u6587\u7c7b\u578b\u3001\u6269\u5c55\u90e8\u5206\u529f\u80fd (2). IPv6 \u5730\u5740\u8868\u793a \u2003\u5730\u5740\u7a7a\u95f4\u6269\u5c55\u81f3 128 \u4f4d\uff0c IPv6 \u91c7\u7528\u5f62\u5982 1080:0:FF:0:8:800:200C:417A \u7684\u4e00\u822c\u8868\u793a\u5f62\u5f0f\uff0c8 \u4e2a\u5341\u516d\u8fdb\u5236 16 bit \u6570\u7528\u5192\u53f7\u5206\u9694\u3002\u5f53\u51fa\u73b0\u591a\u4e2a\u8fde\u7eed\u7684\u96f6\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u538b\u7f29\u5f62\u5f0f\uff0c\u7528\u4e24\u4e2a\u5192\u53f7\u4ee3\u66ff\u8fde\u7eed\u7684 0\uff0c\u5982 FF01::43 \uff0c\u4f46\u53ea\u80fd\u66ff\u6362\u4e00\u5904\u3002 \u2003\u4e3a\u4e0e IPv4 \u517c\u5bb9\uff0c IPv6 \u5212\u5b9a\u4e86\u4e00\u5757\u7a7a\u95f4 0:0:0:0:0:FFFF:a.b.c.d \uff0c\u8868\u793a IPv4 \u7684\u5d4c\u5165\u5f62\u5f0f\u3002 \u2003 IPv6 \u820d\u5f03\u4e86\u63a9\u7801\u7684\u6982\u5ff5\uff0c\u91c7\u7528 CIDR \u7684\u5f62\u5f0f\uff0c\u4f8b\u5982 2002:43C:476B::/48 \u3002 \u2003\u5728\u8868\u793a URL \u7684\u65f6\u5019\uff0c IPv6 \u53ef\u80fd\u9020\u6210\u6b67\u4e49\uff0c\u56e0\u6b64\u89c4\u5b9a\u5730\u5740\u90e8\u5206\u7528\u4e2d\u62ec\u53f7\u201c [] \u201d\u62ec\u8d77\u6765\uff0c\u4f8b\u5982 http://[3FFE::1:800:200C:417A]:8080 \u3002 (3). IPv4 \u2192 IPv6 \u2003 IPv4 \u7684\u7f51\u7edc\u8bbe\u5907\u4e0d\u53ef\u80fd\u540c\u65f6\u90fd\u88ab\u66f4\u65b0\u4e3a IPv6 \u3002\u8fc7\u6e21\u7684\u65b9\u6cd5\u662f\uff0c IPv4 \u8def\u7531\u5668\u652f\u6301\u53cc\u534f\u8bae\uff0c\u5728\u4f20\u8f93 IPv6 \u6570\u636e\u62a5\u65f6\u53ef\u4ee5\u88ab\u770b\u505a\u903b\u8f91\u4e0a\u7684\u4e00\u4e2a\u96a7\u9053\uff1a\u628a IPv6 \u6570\u636e\u62a5\u4f5c\u4e3a\u6709\u6548\u8f7d\u8377\u5c01\u88c5\u8fdb IPv4 \u6570\u636e\u62a5\u4e2d\u3002","title":"2.IP"},{"location":"4-NetworkLayer/4.2/#1-ip","text":"\u2460 \u7248\u672c\u53f7 ( 4 bit ) \u2003\u6570\u636e\u62a5\u5bf9\u5e94\u7684 IP \u534f\u8bae\u7248\u672c\uff0c\u51b3\u5b9a\u4e86\u5982\u4f55\u89e3\u91ca\u6570\u636e\u62a5\u7684\u5269\u4e0b\u90e8\u5206\u3002 \u2461 \u9996\u90e8\u957f\u5ea6 ( 4 bit ) \u2003\u4ee5 4 \u5b57\u8282\u4e3a\u5355\u4f4d\u3002\u7531\u4e8e options \u5b57\u6bb5\uff0c\u9996\u90e8\u957f\u5ea6\u53ef\u53d8\uff0c\u6545\u901a\u8fc7\u6b64\u5b57\u6bb5\u786e\u5b9a\u6570\u636e\u5b9e\u9645\u5f00\u59cb\u7684\u5730\u65b9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u591a\u6570 IP \u6570\u636e\u62a5\u4e0d\u5305\u542b\u9009\u9879\uff0c\u9996\u90e8\u957f\u5ea6\u4e3a 20 \u5b57\u8282\u3002 \u2462 \u670d\u52a1\u7c7b\u578b ( TOS, 8 bit ) \u2003\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u670d\u52a1\u7c7b\u578b\u7684\u6570\u636e\u62a5\uff0c\u670d\u52a1\u7c7b\u578b\u53ef\u80fd\u662f\u4f4e\u65f6\u5ef6\u3001\u9ad8\u541e\u5410\u91cf\u3001\u53ef\u9760\u6027\u7b49\u3002 \u2463 \u6570\u636e\u62a5\u957f\u5ea6 ( 16 bit ) \u2003 IP \u6570\u636e\u62a5\u7684\u603b\u957f\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c\u7406\u8bba\u6700\u5927\u957f\u5ea6\u4e3a 65535\uff0c\u5b9e\u9645\u4e0a\u5f88\u5c11\u5927\u4e8e 1500\u3002\u8be5\u7406\u8bba\u503c\u5927\u4e8e\u6700\u5927\u4ee5\u592a\u7f51\u5e27\u3002 \u2464 \u6807\u8bc6 ( 16 bit )\u3001\u6807\u5fd7 ( 3 bit )\u3001\u7247\u504f\u79fb ( 13 bit ) \u2003\u4e0e IP \u5206\u7247\u6709\u5173\u3002\u5177\u4f53\u89c1 \u7b2c 2 \u90e8\u5206\u3002 \u2465 \u751f\u5b58\u65f6\u95f4 ( TTL, 8 bit ) \u2003\u6570\u636e\u62a5\u7684\u5bff\u547d\uff0c\u6307\u51fa\u4e86\u6b64\u6570\u636e\u62a5\u80fd\u591f\u7ecf\u8fc7\u7684\u8def\u7531\u5668\u6570\u7684\u6700\u5927\u503c\u3002\u5f00\u59cb\u8bbe\u7f6e\u4e00\u4e2a\u521d\u503c\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\u7684\u5904\u7406\u8be5\u5b57\u6bb5\u503c\u51cf\u4e00\uff0c\u51cf\u4e3a\u96f6\u65f6\u8def\u7531\u5668\u5fc5\u987b\u5c06\u5176\u4e22\u5f03\u3002 \u2466 \u4e0a\u5c42\u534f\u8bae ( 8 bit ) \u2003\u6307\u793a\u4e86 IP \u6570\u636e\u62a5\u5e94\u8be5\u4ea4\u7ed9\u54ea\u4e2a\u4e0a\u5c42\u534f\u8bae\uff0c\u901a\u5e38\u53ea\u5728\u5230\u8fbe\u76ee\u7684\u5730\u8d77\u5230\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u503c\u4e3a 6 \u8868\u793a TCP \uff0c\u503c\u4e3a 17 \u8868\u793a UDP \u3002 \u2467 \u9996\u90e8\u6821\u9a8c\u548c ( 16 bit ) \u2003\u540c UDP \u4e00\u6837\uff0c\u6bcf\u4e24\u4e2a\u5b57\u8282\u5f53\u505a\u4e00\u4e2a\u6570\uff0c\u91c7\u7528\u53cd\u7801\u7b97\u672f\u8fd0\u7b97\u6c42\u548c\u3002\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\u5668\u5c31\u8981\u6821\u9a8c\u4e00\u6b21\u3002\u4e0e TCP/UDP \u4e0d\u540c\u7684\u662f\uff0c\u53ea\u5bf9\u9996\u90e8\u8fdb\u884c\u6821\u9a8c\uff1b\u5e76\u4e14\uff0c IP \u4e5f\u5e76\u4e0d\u4e00\u5b9a\u4e0e TCP/IP \u4f4d\u4e8e\u540c\u4e00\u4e2a\u534f\u8bae\u6808\uff0c\u56e0\u6b64\uff0c\u5728\u7f51\u7edc\u5c42\u505a\u6821\u9a8c\u662f\u6709\u5fc5\u8981\u7684\u3002 \u2466 \u6e90 IP \u3001\u76ee\u7684 IP ( 32 bit ) \u2003\u6e90\u4e3b\u673a\u901a\u5e38\u901a\u8fc7 DNS \u67e5\u627e\u786e\u5b9a\u76ee\u7684 IP \u5730\u5740\u3002 \u2467 \u9009\u9879 ( 0 ~ 40 bit ) \u2003\u53ef\u4ee5\u643a\u5e26\u5b89\u5168\u4fe1\u606f\u3001\u6e90\u9009\u8def\u5f84\u7b49\u3002\u8fd9\u4e2a\u5b57\u6bb5\u4f7f\u5f97\u5728\u5904\u7406\u6570\u636e\u62a5\u524d\u4e0d\u80fd\u9884\u5148\u786e\u8ba4\u6570\u636e\u5f00\u59cb\u5904\uff0c\u8fd9\u4e2a\u8003\u8651\u5bf9\u4e3b\u673a\u4e0a\u7684 IP \u5904\u7406\u3001\u9ad8\u6027\u80fd\u8def\u7531\u5668\u5f88\u91cd\u8981\uff0c\u56e0\u6b64\uff0c\u5728 IPv6 \u4e2d\u5df2\u5220\u9664\u6b64\u5b57\u6bb5\u3002 \u2468 \u586b\u5145 \u2003\u8865\u9f50\uff0c\u4f7f\u5934\u90e8\u957f\u4e3a 4 \u5b57\u8282\u7684\u500d\u6570\u3002","title":"1. IP \u6570\u636e\u62a5\u683c\u5f0f"},{"location":"4-NetworkLayer/4.2/#2-ip-fragmentation","text":"","title":"2. IP \u6570\u636e\u62a5\u5206\u7247 (Fragmentation)"},{"location":"4-NetworkLayer/4.2/#1","text":"\u4e00\u4e2a\u94fe\u8def\u5c42\u5e27\u80fd\u627f\u8f7d\u7684\u6700\u5927\u6570\u636e\u91cf\u4e3a\u6700\u5927\u4f20\u8f93\u5355\u5143 ( MTU )\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u94fe\u8def\u5c42\u534f\u8bae\uff0c\u5176\u503c\u5e76\u4e0d\u786e\u5b9a\u3002\u5f53 IP \u6570\u636e\u62a5\u5927\u5c0f\u5927\u4e8e\u51fa\u94fe\u8def\u7684\u6709\u6548\u8f7d\u8377\u5927\u5c0f\uff0c\u4e14\u5bf9\u5e94\u7684\u6807\u5fd7\u4f4d\u5141\u8bb8\u8def\u7531\u5668\u8fdb\u884c\u5206\u7247\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fdb\u884c\u5206\u7247\uff0c\u8fd9\u4e9b\u7247 ( fragment ) \u5728\u76ee\u7684\u4e3b\u673a\u7684\u8fd0\u8f93\u5c42\u4e4b\u524d\u91cd\u65b0\u7ec4\u88c5\u3002\u5206\u7247\u8fc7\u7a0b\u5229\u7528\u4e86\u5934\u90e8\u76f8\u5173\u5b57\u6bb5\uff1a \u6807\u8bc6 ( ID, 16 bit )\uff1a\u548c\u6e90 IP \u3001\u76ee\u7684 IP \u3001\u4e0a\u5c42\u534f\u8bae\u5b57\u6bb5\u4e00\u540c\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u5206\u7247 \u6807\u5fd7 ( 3 bit )\uff1a\u5176\u4e2d\u4e00\u4e2a\u6bd4\u7279\u4fdd\u7559\uff0c\u53e6\u5916\u4e24\u4e2a\u6bd4\u7279\u5206\u522b\u4e3a\uff1a DF ( Don't Fragment )\uff1a\u5f53 DF = 1 \uff0c\u7981\u6b62\u5206\u7247 MF ( More Fragment )\uff1a\u5f53 MF = 0 \uff0c\u4ee3\u8868\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u5206\u7247 \u7247\u504f\u79fb ( 13 bit )\uff1a\u4ee5 8 \u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u6307\u51fa\u4e86\u5206\u7247\u5c01\u88c5\u7684\u539f\u6570\u636e\u7684\u76f8\u5bf9\u504f\u79fb\u91cf(\u9996\u5b57\u8282)","title":"(1). \u6807\u8bc6\u3001\u6807\u5fd7\u3001\u7247\u504f\u79fb"},{"location":"4-NetworkLayer/4.2/#2","text":"\u8bbe\u539f IP \u5206\u7ec4\u603b\u957f\u5ea6\u4e3a $L$ byte \uff0c\u5f85\u8f6c\u53d1\u94fe\u8def\u7684 MTU \u5927\u5c0f\u4e3a $M$ byte \u3002\u5f53 $L>M$ \u4e14 DF = 1 \uff0c\u9700\u8981\u5206\u7247\u3002 \u4e00\u4e2a\u6700\u5927\u5206\u7247\u53ef\u4ee5\u5c01\u88c5\u7684\u6570\u636e\u5927\u5c0f\uff1a$d=\\lfloor \\frac{(M-20)}{8}\\rfloor \u00d7 8$ \u5728\u6700\u5927\u5206\u7ec4\u6761\u4ef6\u4e0b\u9700\u8981\u7684\u603b\u7247\u6570\uff1a$n=\\lceil (L-20)/d \\rceil$ \u6bcf\u7247\u7684\u7247\u504f\u79fb\u91cf\u4e3a\uff1a$F_i=\\frac{d}{8}\u00d7(i-1),\\ 1\\leq i \\leq n$ \u524d $n-1$ \u7247\u7684\u603b\u957f\u5ea6\u4e3a $d+20$\uff0c\u6700\u540e\u4e00\u7247\u7684\u957f\u5ea6\u4e3a $L-(n-1)\\cdot d$\u3002","title":"(2). \u5206\u7247\u8fc7\u7a0b"},{"location":"4-NetworkLayer/4.2/#3-ipv4","text":"","title":"3. IPv4 \u7f16\u5740"},{"location":"4-NetworkLayer/4.2/#1_1","text":"\u7f51\u7edc\u5c42\u8bbe\u5907\uff08\u4e3b\u673a\u3001\u8def\u7531\u5668\uff09\u4e0e\u7269\u7406\u94fe\u8def\u4e4b\u95f4\u7684\u8fb9\u754c\u53eb\u505a\u63a5\u53e3 ( interface )\uff0c\u8def\u7531\u5668\u901a\u5e38\u6709\u591a\u4e2a\u63a5\u53e3\uff0c\u73b0\u4ee3\u7684\u4e3b\u673a\u4e5f\u53ef\u4ee5\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u63a5\u53e3\uff08\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e3b\u673a\u53ea\u6709\u4e00\u6761\u94fe\u8def\u63a5\u5165\u7f51\u7edc\uff09\u3002 IP \u8981\u6c42\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6709\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u5176\u957f\u5ea6\u4e3a 32 bit \uff0c\u7531\u4e8e\u4e8c\u8fdb\u5236\u6570\u96be\u4e8e\u8bb0\u5fc6\uff0c\u56e0\u6b64\u901a\u5e38\u7528\u70b9\u5206\u5341\u8fdb\u5236\u8bb0\u6cd5 ( dotted-decimal notation ) \u8868\u793a\u3002 \u2003\u6bcf\u4e2a\u4ee5\u4e3b\u673a\u548c\u8def\u7531\u5668\uff08\u7f51\u7edc\u5c42\u8bbe\u5907\uff09\u7684\u63a5\u53e3\u4e3a\u7aef\u70b9\u5212\u5206\u51fa\u7684\u533a\u57df ( \"islands of network\" ) \u53eb\u505a\u5b50\u7f51 ( subnet )\u3002 IP \u7f16\u5740\u4f9d\u7167\u8fd9\u4e00\u70b9\uff0c\u5c06 IP \u5730\u5740\u5206\u4e3a\u7f51\u7edc\u53f7 ( NetID ) \u548c\u4e3b\u673a\u53f7 ( HostID ) \u4e24\u90e8\u5206\u3002","title":"(1). \u5b50\u7f51\u4e0e\u63a5\u53e3"},{"location":"4-NetworkLayer/4.2/#2-ip","text":"\u5728 CIDR \u88ab\u91c7\u7528\u4e4b\u524d\uff0c IP \u4f7f\u7528\u5206\u7c7b\u7f16\u5740 ( classful addressing )\uff0c\u901a\u8fc7\u4e8c\u5206\u6cd5\u505a\u5982\u4e0b\u5212\u5206\uff1a A \u7c7b\u5730\u5740\uff1a\u9996\u4f4d\u4e3a 0\uff0c\u5360\u7528\u5730\u5740\u7a7a\u95f4\u7684 50%\uff0c NetID(8)-HostID(24) \uff0c 0.0.0.0 ~ 127.255.255.255 \u3002 B \u7c7b\u5730\u5740\uff1a\u524d\u4e24\u4f4d\u4e3a 10\uff0c\u5360 25%\uff0c NetID(16)-HostID(16) \uff0c 128.0.0.0 ~ 191.255.255.255 \u3002 C \u7c7b\u5730\u5740\uff1a\u524d\u4e09\u4f4d\u4e3a 110\uff0c\u5360 12.5%\uff0c NetID(24)-HostID(8) \uff0c 192.0.0.0 ~ 223.255.255.255 \u3002 D \u7c7b\u5730\u5740\uff1a\u524d\u56db\u4f4d 1110\uff0c\u5360 6.25%\uff0c\u4e0d\u533a\u5206\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\uff0c 224.0.0.0 ~ 239.255.255.255 \u3002\u4e5f\u88ab\u79f0\u4f5c\u591a\u64ad\u5730\u5740\uff0c\u7528\u4e8e\u6807\u8bc6\u4e92\u8054\u7f51\u4e2d\u4e00\u7ec4\u4e3b\u673a\uff0c\u53ea\u80fd\u4f5c\u76ee\u7684 IP \u3002 E \u7c7b\u5730\u5740\uff1a\u524d\u56db\u4f4d 1111\uff0c\u5360 6.25%\uff0c\u4e0d\u533a\u5206\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\uff0c 240.0.0.0 ~ 255.255.255.255 \u3002 \u2003 A\u3001B\u3001C \u7c7b\u5730\u5740\u53ef\u4ee5\u7528\u4e8e\u6807\u8bc6\u5b50\u7f51\uff0c\u4f46\u5176\u4e2d\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5730\u5740\u90fd\u53ef\u4ee5\u7528\u4e8e\u6807\u8bc6\u4e3b\u673a\u3002 \u4e0d\u80fd\u6807\u8bc6\u63a5\u53e3\u7684\u7279\u6b8a\u5730\u5740 NetID HostID \u4f5c\u4e3a\u6e90 IP \u4f5c\u4e3a\u76ee\u7684 IP \u7528\u9014 \u51680 \u51680 \u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u5728\u672c\u7f51\u8303\u56f4\u5185\u8868\u793a\u672c\u673a\uff1b\u5728\u8def\u7531\u8868\u4e2d\u7528\u4e8e\u8868\u793a\u9ed8\u8ba4\u8def\u7531 \u51680 \u7279\u5b9a\u503c \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u7528\u4e8e\u8868\u793a\u672c\u7f51\u5185\u67d0\u4e2a\u7279\u5b9a\u4e3b\u673a \u51681 \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u672c\u7f51\u5e7f\u64ad\u5730\u5740 \u7279\u5b9a\u503c \u51680 \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u7f51\u7edc\u7684\u5730\u5740\uff0c\u8868\u793a\u4e00\u4e2a\u7f51\u7edc \u7279\u5b9a\u503c \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u76f4\u63a5\u5e7f\u64ad\u5730\u5740\uff0c\u5bf9\u7279\u5b9a\u7f51\u7edc\uff08\u53e6\u5916\u4e00\u4e2a\u7f51\u7edc\uff09\u4e0a\u6240\u6709\u4e3b\u673a\u8fdb\u884c\u5e7f\u64ad 127 \u975e\u51680\u6216\u975e\u51681\u7684\u4efb\u4f55\u6570 \u53ef\u4ee5 \u53ef\u4ee5 \u73af\u56de\u5730\u5740\uff0c\u7528\u4e8e\u672c\u5730\u8f6f\u4ef6\u73af\u56de\u6d4b\u8bd5 \u2003 A\u3001B\u3001C \u8fd8\u4fdd\u7559\u4e86\u4e00\u90e8\u5206\u79c1\u6709\u5730\u5740\uff0c\u8fd9\u4e9b\u5730\u5740\u53ea\u80fd\u5728\u6bcf\u4e00\u4e2a\u7ec4\u7ec7\u6216\u5b50\u7f51\u5185\u90e8\u4f7f\u7528\uff0c\u5728\u516c\u5171\u4e92\u8054\u7f51\u7edc\u4e2d\u65e0\u6cd5\u4f7f\u7528\u3002 Private IPs Class NetIDs Blocks A 10 1 B 172.16 to 172.31 16 C 192.168.0 to 192.168.255 256","title":"(2). \u6709\u7c7b IP \u5730\u5740"},{"location":"4-NetworkLayer/4.2/#3-ip","text":"\u6709\u7c7b IP \u5730\u5740\u901a\u8fc7\u7f51\u7edc\u53f7\u5bf9\u5730\u5740\u7a7a\u95f4\u8fdb\u884c\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5212\u5206\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5f53\u4e00\u4e2a\u7ec4\u7ec7\u83b7\u5f97\u4e00\u4e2a\u7f51\u7edc\u53f7\u4ee5\u540e\uff0c\u5bf9 IP \u7ee7\u7eed\u8fdb\u884c\u5b50\u7f51\u5212\u5206\uff1a NetID-SubID-HostID \uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u5b50\u7f51\u901a\u8fc7\u8def\u7531\u5668\u4e92\u8fde\uff0c\u5728\u6570\u636e\u4f20\u64ad\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5b50\u7f51\u53f7\u9694\u79bb\u6d41\u91cf\u3002 \u2003\u5b50\u7f51\u63a9\u7801 ( network mask )\uff1a\u5f62\u5982 IP \u5730\u5740\uff0c\u662f\u4e00\u4e2a\u7528\u70b9\u5206\u5341\u8fdb\u5236\u8868\u793a\u7684 32 \u6bd4\u7279\u6570\uff1b NetID-SubID \u5168\u53d6 1\uff0c HostID \u5168\u53d6 0\u3002\u76ee\u7684 IP \u5730\u5740\u901a\u8fc7\u4e0e\u5b50\u7f51\u63a9\u7801\u8fdb\u884c\u6c42\u4e0e\u8fd0\u7b97\uff0c\u53ef\u4ee5\u63d0\u53d6\u51fa\u5b50\u7f51\u5730\u5740\uff0c\u4ece\u800c\u5f97\u5230\u5b50\u7f51\u7684\u5730\u5740\u8303\u56f4\uff1b\u5728\u5730\u5740\u8303\u56f4\u5185\u53bb\u6389\u4e3b\u673a\u57df\u5168 0 \u548c\u5168 1 \u7684 IP \u5730\u5740\uff0c\u5f97\u5230\u53ef\u5206\u914d\u5730\u5740\u8303\u56f4\u3002","title":"(3). IP \u5b50\u7f51\u5212\u5206"},{"location":"4-NetworkLayer/4.2/#4-cidr","text":"Internet \u91c7\u7528\u7684\u5730\u5740\u5206\u914d\u7b56\u7565\u4e3a \u65e0\u7c7b\u57df\u95f4\u8def\u7531 ( Classless Interdomain Routing, CIDR )\uff0c\u5b83\u4e00\u822c\u5316\u4e86\u5b50\u7f51\u5bfb\u5740\u7684\u6982\u5ff5\uff0c\u6d88\u9664\u4e86\u4f20\u7edf\u7684 A\u3001B\u3001C \u7c7b\u5730\u5740\u754c\u9650\uff1a\u5c06 NetID-SubID \u7edf\u4e00\u4e3a\u7f51\u7edc\u524d\u7f00\uff1b\u878d\u5408\u4e86\u5b50\u7f51\u5730\u5740\u4e0e\u5b50\u7f51\u63a9\u7801\uff0c\u65e0\u7c7b\u5730\u5740\u683c\u5f0f\u4e3a a.b.c.d/ x \uff0c x \u4e3a\u7f51\u7edc\u524d\u7f00\u957f\u5ea6\u3002 \u2003 CIDR \u63d0\u9ad8\u4e86\u5730\u5740\u7a7a\u95f4\u7684\u5229\u7528\u7387\uff1b\u4f34\u968f\u7740\u8def\u7531\u805a\u5408\u6280\u672f\u7684\u51fa\u73b0\uff0c\u6709\u6548\u51cf\u5c11\u4e86\u8f6c\u53d1\u8868\u7684\u8868\u9879\u6570\uff0c\u63d0\u9ad8\u4e86\u8def\u7531\u6548\u7387\u3002 \u2003\u8def\u7531\u805a\u5408\u901a\u5e38\u4f5c\u7528\u4e8e\u8fd9\u6837\u7684\u60c5\u5f62\uff1a\u5b50\u7f51\u6570\u4e3a 2 \u7684\u500d\u6570\uff0c\u4e14\u5b83\u4eec\u7684\u5730\u5740\u7a7a\u95f4\u8fde\u7eed\u3002\u5f53\u8def\u7531\u805a\u96c6\u7684\u7a7a\u95f4\u5c5e\u4e8e\u53e6\u5916\u4e00\u4e2a ISP \u7684\u5b50\u7f51\uff0c\u5f53\u6570\u636e\u8f6c\u53d1\u5230\u8fd9\u4e2a\u5b50\u7f51\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u8def\u7531\u9ed1\u6d1e\u73b0\u8c61\u3002\u4e3a\u4e86\u4ecd\u80fd\u591f\u5229\u7528\u8def\u7531\u805a\u96c6\u53ca\u5e26\u6765\u7684\u4fbf\u5229\uff0c\u53ef\u4ee5\u5728\u4e24\u4e2a ISP \u524d\u7684\u8def\u7531\u5668\u7684\u8f6c\u53d1\u8868\u4e2d\uff0c\u5229\u7528\u6700\u957f\u524d\u7f00\u5339\u914d\u539f\u5219\uff0c\u907f\u514d\u8def\u7531\u9ed1\u6d1e\u3002","title":"(4). CIDR"},{"location":"4-NetworkLayer/4.2/#5-dhcp","text":"\u4e00\u53f0\u4e3b\u673a\u83b7\u53d6 IP \u901a\u5e38\u6709\u4e24\u79cd\u65b9\u6cd5\u3002\u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u914d\u7f6e\uff0c\u5373\u901a\u8fc7\u7f51\u7edc\u7ba1\u7406\u5458\u6216\u64cd\u4f5c\u7cfb\u7edf\u9759\u6001\u8bbe\u5b9a IP \u5730\u5740\u3002\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u9ed8\u8ba4\u7f51\u5173\uff08\u7b2c\u4e00\u8df3\u7684\u63a5\u53e3\u7684 IP\uff09\u3001\u672c\u5730\uff08\u9ed8\u8ba4\uff09 DNS \u670d\u52a1\u5668\u7b49\u3002 \u2003\u52a8\u6001\u5730\u5740\u914d\u7f6e\u901a\u8fc7\u52a8\u6001\u4e3b\u673a\u914d\u7f6e\u534f\u8bae ( Dynamic Host Configuration Protocol, DHCP ) \u5b9e\u73b0\u3002\u5728\u4e00\u53f0\u4e3b\u673a\u63a5\u5165\u7f51\u7edc\u65f6\uff0c\u53ef\u901a\u8fc7 DHCP \u83b7\u5f97\u4e34\u65f6\u7684 IP \u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u9ed8\u8ba4\u7f51\u5173\u3001\u672c\u5730 DNS \u670d\u52a1\u5668\u5730\u5740\uff0c DHCP \u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e3b\u673a\u52a8\u6001\u5730\u8fde\u63a5\u548c\u79bb\u5f00\u67d0\u5b50\u7f51\u7684\u60c5\u5883\u4e2d\u3002 \u2003 DHCP \u662f\u4e00\u4e2a\u5e94\u7528\u5c42\u7684 C-S \u534f\u8bae\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7f51\u5177\u6709\u4e00\u4e2a DHCP \u670d\u52a1\u5668\uff08\u5982\u679c\u6ca1\u6709\uff0c\u67d0\u53f0\u8def\u7531\u5668\u4f5c\u4e3a\u4e2d\u7ee7\u4ee3\u7406\uff0c\u8bb0\u5f55\u4e86\u7528\u4e8e\u8be5\u5b50\u7f51\u7684 DHCP \u670d\u52a1\u5668\u5730\u5740\uff09\u3002\u4e00\u53f0\u65b0\u63a5\u5165\u7684\u4e3b\u673a\u901a\u8fc7 4 \u4e2a\u6b65\u9aa4\u83b7\u5f97 IP \u5730\u5740\uff1a \u2460 DHCP server discovery \uff1a\u5ba2\u6237\u7aef\u5728\u7aef\u53e3 67 \u901a\u8fc7 UDP \u5206\u7ec4\u53d1\u9001\u4e00\u4e2a DHCP \u53d1\u73b0\u62a5\u6587 ( DHCP discovery message )\uff0c\u9996\u5148\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6b64\u62a5\u6587\u7684 IP \u6570\u636e\u62a5\uff0c\u6e90 IP \u586b\u4e3a\u201c\u672c\u4e3b\u673a\u201d 0.0.0.0 \uff0c\u76ee\u7684 IP \u586b\u4e3a\u5e7f\u64ad\u5730\u5740 255.255.255.255 \u3002\u5728\u5ba2\u6237\u7aef\u5c06\u6570\u636e\u62a5\u4f20\u7ed9\u94fe\u8def\u5c42\u540e\uff0c\u94fe\u8def\u5c42\u5c06\u8be5\u5e27\u5e7f\u64ad\u5230\u6240\u6709\u4e0e\u8be5\u5b50\u7f51\u76f8\u90bb\u7684\u8282\u70b9\u3002 \u2461 DHCP server offer \uff1a DHCP \u670d\u52a1\u5668\u6536\u5230\u4e00\u4e2a\u53d1\u73b0\u62a5\u6587\u65f6\uff0c\u4ecd\u901a\u8fc7\u5e7f\u64ad\u5730\u5740 255.255.255.255 \uff0c\u5411\u6240\u6709\u7ed3\u70b9\u5e7f\u64ad\u4e00\u4e2a DHCP \u53d1\u73b0\u62a5\u6587 ( DHCP offer message )\u3002\u62a5\u6587\u7684\u5185\u5bb9\u5305\u542b\u62a5\u6587\u7684\u4e8b\u52a1 ID\u3001\u5411\u5ba2\u6237\u7aef\u63a8\u8350\u7684 IP \u5730\u5740\u3001\u7f51\u7edc\u63a9\u7801\u548c IP \u5730\u5740\u7684\u79df\u7528\u671f\u3002 \u2462 DHCP request \uff1a\u5ba2\u6237\u7aef\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u5668\u4e2d\u9009\u62e9\u4e00\u4e2a\uff0c\u76f8\u5e94\u4e00\u4e2a DHCP \u8bf7\u6c42\u62a5\u6587 ( DHCP request message )\uff0c\u56de\u5e94\u914d\u7f6e\u53c2\u6570\u3002 \u2463 DHCP ACK \uff1a\u670d\u52a1\u5668\u54cd\u5e94\u4e00\u4e2a DHCP ACK \u62a5\u6587\uff0c\u8bc1\u5b9e\u53c2\u6570\u3002 \u2003 DHCP \u7684\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u5f53\u4e00\u53f0\u4e3b\u673a\u5728\u4e0d\u540c\u5b50\u7f51\u95f4\u79fb\u52a8\uff0c\u65e0\u6cd5\u7ef4\u6301\u4e0e\u8fdc\u7a0b\u5e94\u7528\u7684 TCP \u8fde\u63a5\u3002","title":"(5). DHCP \u534f\u8bae"},{"location":"4-NetworkLayer/4.2/#6-nat","text":"\u5bf9 IPv4 \u6765\u8bf4\uff0c IP \u5730\u5740\u5df2\u7ecf\u67af\u7aed\uff1b\u5e76\u4e14\uff0c\u5bf9\u4e00\u4e2a ISP \u6765\u8bf4\uff0c\u5982\u679c\u5b9e\u73b0\u4e3a\u5176\u5206\u914d\u4e86\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff0c\u4f46\u968f\u540e\u9700\u8981\u66f4\u591a\u7684\u5730\u5740\u6570\uff0c\u4e5f\u4f1a\u9020\u6210\u95ee\u9898\u3002\u4ee5\u4e0a\u7684\u60c5\u5f62\u901a\u8fc7\u5df2\u88ab\u5e7f\u6cdb\u5e94\u7528\u7684\u7f51\u7edc\u5730\u5740\u8f6c\u6362 ( Network Address Translation ) \u88ab\u89e3\u51b3\u3002 \u2003\u5047\u8bbe\u5f53\u524d\u5177\u6709 A \u7c7b\u79c1\u6709\u5730\u5740\u7684\u4e09\u53f0\u5bb6\u5ead\u4e3b\u673a 10.0.0.1 \u3001 10.0.0.2 \u3001 10.0.0.3 \uff0c\u5b83\u4eec\u5171\u540c\u63a5\u5165\u8def\u7531\u5668\u7684 10.0.0.4 \u7aef\uff0c\u8def\u7531\u5668\u53e6\u6709\u4e00\u7aef\u5177\u6709\u516c\u5171 IP \u5730\u5740 138.76.29.7 \u3002\u8fd9\u4e9b\u5185\u90e8\u4e3b\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u4f7f\u7528\u8fd9\u4e9b\u79c1\u6709\u5730\u5740\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u4f46\u5982\u679c\u8981\u4e0e\u5916\u754c\u901a\u4fe1\uff0c\u5c31\u8981\u4f7f\u7528\u8def\u7531\u5668\u7ef4\u62a4\u7684 NAT \u8f6c\u6362\u8868\uff1a\u6bcf\u4e2a\u5916\u51fa\u7684\u6570\u636e\u62a5\u7684 (src-IP, src-Port) \u88ab\u66ff\u6362\u4e3a (NAT-IP, new-Port) \uff0c NAT \u8f6c\u6362\u8868\u7ef4\u62a4\u8fd9\u4e2a\u6620\u5c04\uff0c\u8fd4\u56de\u6765\u7684\u6570\u636e\u62a5\u518d\u6839\u636e\u8868\u9879\u66ff\u6362\uff0c\u5c31\u53ef\u4ee5\u4e0e\u5185\u7f51\u76f8\u5e94\u4e3b\u673a\u901a\u4fe1\u3002 NAT Translation Table WAN side LAN side 138.76.29.7, 5001 10.0.0.1, 3345 \u2003 NAT \u6280\u672f\u7684\u4ea7\u751f\u8fd8\u5e26\u6765\u4e86\u5176\u4ed6\u7684\u597d\u5904\uff1a\u2460 \u672c\u5730\u4e3b\u673a IP \u53d8\u66f4\uff0c\u65e0\u9700\u901a\u77e5\u5916\u754c\uff1b\u2461 \u672c\u5730\u53d8\u66f4 ISP \u65f6\uff0c\u65e0\u9700\u4fee\u6539\u5185\u90e8\u7f51\u7edc IP \uff1b\u2462 \u5185\u90e8\u7f51\u7edc\u5bf9\u5916\u754c\u4e0d\u53ef\u89c1\uff0c\u5916\u754c\u65e0\u6cd5\u76f4\u63a5\u5bfb\u5740\uff0c\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002 \u2003\u76f8\u5e94\u5730\uff0c NAT \u8fd8\u5e26\u6765\u4e86\u4ee5\u4e0b\u4e89\u8bae\uff1a\u2460 \u8def\u7531\u5668\u53ea\u5e94\u8be5\u5904\u7406\u7f51\u7edc\u5c42\u529f\u80fd\uff1b\u2461 \u8fdd\u80cc\u7aef-\u7aef\u901a\u4fe1\u539f\u5219\uff0c\u4f5c\u4e3a\u4e2d\u95f4\u8bbe\u5907\u7684\u8def\u7531\u5668\u4e0d\u5e94\u4fee\u6539\u4f20\u8f93\u5c42\u7684\u5185\u5bb9\uff1b\u2462 \u7aef-\u7aef\u5e94\u7528\u7684\u5f00\u53d1\u5fc5\u987b\u8981\u8003\u8651\u5230 NAT \u7684\u5b58\u5728\uff0c\u5982 P2P \uff1b\u2463 \u5730\u5740\u77ed\u7f3a\u5e94\u8be5\u7531 IPv6 \u5b8c\u6210\u3002 \u2003\u6309\u7167\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4ee5 P2P \u5e94\u7528\u4e3a\u4f8b\uff0c\u5f53\u5176\u4e2d\u4e00\u53f0\u5bb6\u5ead\u4e3b\u673a\u8981\u4f5c\u4e3a\u5bf9\u7b49\u65b9\u7684\u670d\u52a1\u5668\u89d2\u8272\uff0c\u5ba2\u6237\u7aef\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u670d\u52a1\u5668\uff0c\u9020\u6210\u4e86 NAT \u7a7f\u900f\u95ee\u9898\u3002\u53ef\u6709\u4ee5\u4e0b\u89e3\u51b3\u65b9\u6848\uff1a \u2460 \u5728\u8def\u7531\u5668\u4e2d\u9759\u6001\u914d\u7f6e NAT \uff0c\u5c06\u7279\u5b9a\u7aef\u53e3\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u76f8\u5e94\u4e3b\u673a\uff0c e.g. (138.76.29.7, 2500) \u603b\u662f\u8f6c\u53d1\u7ed9 (10.0.0.1, 2500) \u2461 \u5229\u7528 UPnP \u4e92\u8054\u7f51\u7f51\u5173\u8bbe\u5907\u534f\u8bae\u81ea\u52a8\u914d\u7f6e \u2462 \u4e2d\u7ee7\uff1a\u53cc\u65b9\u4e0e\u4e2d\u7ee7\u670d\u52a1\u5668\u8fde\u63a5","title":"(6). \u7f51\u7edc\u5730\u5740\u8f6c\u6362 (NAT)"},{"location":"4-NetworkLayer/4.2/#7-icmp","text":"\u4e92\u8054\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae (Internet Control Message Protocol, ICMP) \u652f\u6301\u4e3b\u673a\u6216\u8def\u7531\u5668\u8fdb\u884c\u5dee\u9519\u62a5\u544a\u6216\u7f51\u7edc\u63a2\u8be2\u3002 \u5dee\u9519\u62a5\u544a\u62a5\u6587 \u76ee\u7684\u4e0d\u53ef\u8fbe\uff1a\u6570\u636e\u62a5\u5230\u8fbe\u76ee\u7684\u5730\u540e\uff0c\u65e0\u6cd5\u4ea4\u4ed8\u6570\u636e\uff0c\u5219\u4e22\u5f03\u62a5\u6587\uff0c\u5e76\u53d1\u9001\u5dee\u9519\u62a5\u544a \u6e90\u6291\u5236\uff1a\u7f13\u5b58\u5df2\u6ee1\u5bfc\u81f4\u6570\u636e\u62a5\u88ab\u4e22\u5f03\uff0c\u5728\u5b9e\u9645\u7684\u7f51\u7edc\u7684\u62e5\u585e\u63a7\u5236\u6ca1\u6709\u91c7\u7528\u6b64\u65b9\u6cd5 \u8d85\u671f\uff1a TTL \u8d85\u671f\u4f7f\u5f97\u6570\u636e\u62a5\u88ab\u4e22\u5f03 \u53c2\u6570\u95ee\u9898\uff1a\u8f6c\u53d1\u6570\u636e\u62a5\u65f6\u53d1\u73b0\u5934\u90e8\u67d0\u4e9b\u5b57\u6bb5\u53c2\u6570\u9519\u8bef\uff0c\u4e22\u5f03\u62a5\u6587 \u91cd\u5b9a\u5411\uff1a\u5f53\u67d0\u6570\u636e\u62a5\u5230\u8fbe\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u5728\u8def\u7531\u5668\u770b\u6765\u4e0d\u8be5\u7531\u5b83\u8f6c\u53d1\uff0c\u5219\u50cf\u6e90\u4e3b\u673a\u53d1\u9001\u91cd\u5b9a\u5411\u62a5\u6587 \u7f51\u7edc\u63a2\u8be2 \u56de\u58f0\u8bf7\u6c42\u4e0e\u5e94\u7b54\u62a5\u6587\uff1a\u901a\u8fc7\u63a5\u6536\u76f8\u5e94\u63a2\u6d4b\u7f51\u7edc\u662f\u5426\u901a\u8fbe\uff0c\u5982 ping \u5de5\u5177 \u65f6\u95f4\u6233\u8bf7\u6c42\u4e0e\u5e94\u7b54\u62a5\u6587 \u4e0d\u53d1\u9001 ICMP \u5dee\u9519\u62a5\u544a\u62a5\u6587\u7684\u7279\u6b8a\u60c5\u51b5\uff1a ICMP \u62a5\u6587\u51fa\u5dee\u9519 \u9664\u4e86\u7b2c\u4e00\u4e2a IP \u6570\u636e\u62a5\u5206\u7247\u7684\u6240\u6709\u540e\u7eed\u5206\u7247 \u6240\u6709\u7684\u591a\u64ad IP \u6570\u636e\u62a5 \u5177\u6709\u7279\u6b8a\u5730\u5740\u7684 IP \u6570\u636e\u62a5 (\u5982 127.0.0.0 \u6216 0.0.0.0 ) \u2003 ICMP \u662f\u4e00\u4e2a\u4ecb\u4e8e\u7f51\u7edc\u5c42\u4e0e\u4f20\u8f93\u5c42\u4e4b\u95f4\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u3002 ICMP \u62a5\u6587\u88ab\u5c01\u88c5\u5230 IP \u6570\u636e\u62a5\u4e2d\u4f20\u8f93\uff0c\u5176\u7ed3\u6784\u4e3a ICMP header(8 byte) + \u51fa\u95ee\u9898\u7684 IP \u6570\u636e\u62a5\u5934\u90e8 + IP \u6570\u636e\u524d 8 \u5b57\u8282\u3002\u6700\u540e\u4e00\u90e8\u5206\u5bf9\u5e94\u5b8c\u6210\u7684 UDP \u5934\u90e8\u6216 TCP \u5934\u90e8\u7684\u7aef\u53e3\u53f7\u5b57\u6bb5\u4e4b\u524d\u3002 \u2003\u5e94\u7528 Trace Route \u4e3e\u4f8b\uff1a\u6e90\u4e3b\u673a\u53d1\u9001\u4e00\u7cfb\u5217 UDP \u6570\u636e\u62a5\uff0c\u7b2c i \u7ec4\u6570\u636e\u62a5 TTL = i \uff0c\u4e14\u76ee\u7684\u7aef\u53e3\u53f7\u8bbe\u4e3a\u4e0d\u53ef\u80fd\u4f7f\u7528\u7684\u4e00\u4e2a\u7aef\u53e3\u53f7\u3002\u8def\u7531\u5668\u4f1a\u8fd4\u56de ICMP \u62a5\u6587 (type = 11, code = 0)\uff0c\u643a\u5e26\u8def\u7531\u5668\u540d\u79f0\u548c IP \u5730\u5740\u4fe1\u606f\uff1b\u5f53\u76ee\u7684\u4e3b\u673a\u8fd4\u56de ICMP \u62a5\u6587\u201c\u76ee\u7684\u7aef\u53e3\u4e0d\u53ef\u8fbe\u201d (type = 3, code = 3)\uff0c\u6e90\u4e3b\u673a\u505c\u6b62\u53d1\u9001\u3002","title":"(7). ICMP \u534f\u8bae"},{"location":"4-NetworkLayer/4.2/#4-ipv6","text":"","title":"4. IPv6 \u7b80\u4ecb"},{"location":"4-NetworkLayer/4.2/#1-ipv6","text":"IPv6 \u6700\u521d\u52a8\u673a\u662f IPv4 \u5730\u5740\u7a7a\u95f4\u7684\u8017\u5c3d\uff1b\u5b83\u8fd8\u6539\u8fdb\u4e86\u5934\u90e8\u7684\u683c\u5f0f\uff0c\u652f\u6301\u5feb\u901f\u5904\u7406\u3001 QoS \u3002 \u2460 \u4f18\u5148\u7ea7 ( 8 bit ) \u2003\u529f\u80fd\u7279\u6027\u5bf9\u5e94 IPv4 \u7684 ToS \u3002 \u2461 \u6d41\u6807\u7b7e ( 20 bit ) \u2003\u7528\u4e8e\u6807\u8bc6\u6e90\u4e3b\u673a\u5230\u76ee\u7684\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\u62a5\uff0c\u4ee5\u7ed9\u5b9a\u67d0\u4e9b\u6570\u636e\u62a5\u4f18\u5148\u6743\u3002\u6d41\u7684\u5b9a\u4e49\u5c1a\u5728\u8ba8\u8bba\u4e2d\u3002 \u2462 \u6709\u6548\u8f7d\u8377\u957f\u5ea6 ( 16 bit ) \u2003\u7ed9\u51fa IPv6 \u7684 40 \u5b57\u8282\u9996\u90e8\u4e4b\u540e\u7684\u6570\u636e\u957f\u5ea6\uff0c\u5305\u62ec\u6269\u5c55\u9996\u90e8 + \u6570\u636e\u3002 \u2463 \u4e0b\u4e00\u4e2a\u9996\u90e8 ( 8 bit ) \u2003\u5982\u679c\u6570\u636e\u90e8\u5206\u6709\u6269\u5c55\u9996\u90e8\u7684\u8bdd\uff0c\u8be5\u90e8\u5206\u6307\u5411\u4e0b\u4e00\u4e2a\u6269\u5c55\u9996\u90e8\uff0c\u4e0b\u4e00\u4e2a\u6269\u5c55\u9996\u90e8\u4e5f\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u3002\u6700\u540e\u4e00\u4e2a\u9996\u90e8\u6307\u5411\u4f20\u8f93\u5c42\u62a5\u6587\u7684\u5934\u90e8\u3002 \u2464 \u8df3\u6b65\u9650\u5236 ( 8 bit ) \u2003\u529f\u80fd\u7279\u6027\u540c IPv4 \u7684 TTL \uff1a\u6bcf\u7ecf\u8fc7\u4e00\u8df3\u503c\u51cf\u4e00\uff0c\u51cf\u4e3a\u96f6\u540e\u4e22\u5f03\u5e76\u53d1\u9001 ICMP \u62a5\u6587\u3002 \u2465 \u6e90\u5730\u5740\u3001\u76ee\u7684\u5730\u5740 ( 128 bit ) \u2003\u5927\u5927\u6269\u5c55\u4e86\u5730\u5740\u7a7a\u95f4\u3002 \u8fd8\u6709\u53e6\u5916\u4e00\u90e8\u5206\u76f8\u5bf9\u4e8e IPv4 \u7684\u6539\u53d8\uff1a \u5f7b\u5e95\u79fb\u9664 checksum \uff0c\u51cf\u5c11\u6bcf\u8df3\u5904\u7406\u65f6\u95f4 \u9009\u9879\u5b57\u6bb5\u79fb\u9664\uff0c\u901a\u8fc7\u4e0b\u4e00\u4e2a\u9996\u90e8\u5b57\u6bb5\u5141\u8bb8\u591a\u4e2a\u9009\u9879\u9996\u90e8 \u91c7\u7528\u65b0\u7248\u7684 ICMPv6 \uff0c\u589e\u52a0\u62a5\u6587\u7c7b\u578b\u3001\u6269\u5c55\u90e8\u5206\u529f\u80fd","title":"(1). IPv6 \u6570\u636e\u62a5\u683c\u5f0f"},{"location":"4-NetworkLayer/4.2/#2-ipv6","text":"\u5730\u5740\u7a7a\u95f4\u6269\u5c55\u81f3 128 \u4f4d\uff0c IPv6 \u91c7\u7528\u5f62\u5982 1080:0:FF:0:8:800:200C:417A \u7684\u4e00\u822c\u8868\u793a\u5f62\u5f0f\uff0c8 \u4e2a\u5341\u516d\u8fdb\u5236 16 bit \u6570\u7528\u5192\u53f7\u5206\u9694\u3002\u5f53\u51fa\u73b0\u591a\u4e2a\u8fde\u7eed\u7684\u96f6\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u538b\u7f29\u5f62\u5f0f\uff0c\u7528\u4e24\u4e2a\u5192\u53f7\u4ee3\u66ff\u8fde\u7eed\u7684 0\uff0c\u5982 FF01::43 \uff0c\u4f46\u53ea\u80fd\u66ff\u6362\u4e00\u5904\u3002 \u2003\u4e3a\u4e0e IPv4 \u517c\u5bb9\uff0c IPv6 \u5212\u5b9a\u4e86\u4e00\u5757\u7a7a\u95f4 0:0:0:0:0:FFFF:a.b.c.d \uff0c\u8868\u793a IPv4 \u7684\u5d4c\u5165\u5f62\u5f0f\u3002 \u2003 IPv6 \u820d\u5f03\u4e86\u63a9\u7801\u7684\u6982\u5ff5\uff0c\u91c7\u7528 CIDR \u7684\u5f62\u5f0f\uff0c\u4f8b\u5982 2002:43C:476B::/48 \u3002 \u2003\u5728\u8868\u793a URL \u7684\u65f6\u5019\uff0c IPv6 \u53ef\u80fd\u9020\u6210\u6b67\u4e49\uff0c\u56e0\u6b64\u89c4\u5b9a\u5730\u5740\u90e8\u5206\u7528\u4e2d\u62ec\u53f7\u201c [] \u201d\u62ec\u8d77\u6765\uff0c\u4f8b\u5982 http://[3FFE::1:800:200C:417A]:8080 \u3002","title":"(2). IPv6 \u5730\u5740\u8868\u793a"},{"location":"4-NetworkLayer/4.2/#3-ipv4-ipv6","text":"IPv4 \u7684\u7f51\u7edc\u8bbe\u5907\u4e0d\u53ef\u80fd\u540c\u65f6\u90fd\u88ab\u66f4\u65b0\u4e3a IPv6 \u3002\u8fc7\u6e21\u7684\u65b9\u6cd5\u662f\uff0c IPv4 \u8def\u7531\u5668\u652f\u6301\u53cc\u534f\u8bae\uff0c\u5728\u4f20\u8f93 IPv6 \u6570\u636e\u62a5\u65f6\u53ef\u4ee5\u88ab\u770b\u505a\u903b\u8f91\u4e0a\u7684\u4e00\u4e2a\u96a7\u9053\uff1a\u628a IPv6 \u6570\u636e\u62a5\u4f5c\u4e3a\u6709\u6548\u8f7d\u8377\u5c01\u88c5\u8fdb IPv4 \u6570\u636e\u62a5\u4e2d\u3002","title":"(3). IPv4 \u2192 IPv6"},{"location":"4-NetworkLayer/4.3/","text":"1. \u8def\u7531\u7b97\u6cd5\u6982\u8ff0 \u2003\u8def\u7531\u9009\u62e9\u95ee\u9898\u901a\u8fc7\u56fe $G=(V, E)$ \u8868\u793a\uff0c\u4e00\u6761\u94fe\u8def\u4e0a\u7684\u5f00\u9500\u901a\u5e38\u53ef\u80fd\u4e0e\u7269\u7406\u957f\u5ea6\u3001\u94fe\u8def\u901f\u5ea6\u3001\u91d1\u94b1\u5f00\u9500\u7b49\u6709\u5173\u3002\u8def\u7531\u7b97\u6cd5\u7684\u76ee\u7684\u662f\u627e\u51fa\u4e00\u6761\u4ece\u6e90\u5230\u76ee\u7684\u7684\u6700\u77ed\u8def\u5f84 $(x_1,...,x_p)$\u3002\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u901a\u5e38\u5b58\u5728\u4ee5\u4e0b\u51e0\u79cd\u5212\u5206\u65b9\u5f0f\u3002 \u2003\u96c6\u4e2d\u5f0f or \u5206\u6563\u5f0f\uff1a \u96c6\u4e2d\u5f0f\u8def\u7531\u7b97\u6cd5 ( centralized ): \u6240\u6709\u7684\u8def\u7531\u5668\u638c\u63e1\u5168\u5c40\u4fe1\u606f\uff0c\u5373\u5b8c\u6574\u7684\u7f51\u7edc\u62d3\u6251\u548c\u94fe\u8def\u8d39\u7528\u3002 \u5206\u6563\u5f0f\u8def\u7531\u7b97\u6cd5 ( decentralized ): \u6240\u6709\u7684\u8def\u7531\u5668\u4ec5\u4ec5\u6709\u76f4\u63a5\u4e0e\u5176\u76f8\u8fde\u7684\u94fe\u8def\u5f00\u9500\u548c\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u901a\u8fc7\u8fed\u4ee3\u3001\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u3002 \u2003\u9759\u6001 or \u52a8\u6001\uff1a \u9759\u6001\u8def\u7531\u7b97\u6cd5\uff1a\u624b\u5de5\u914d\u7f6e\uff0c\u8def\u7531\u66f4\u65b0\u6162\u3002 \u52a8\u6001\u8def\u7531\u7b97\u6cd5\uff1a\u968f\u7740\u7f51\u7edc\u6d41\u91cf\u8d1f\u8f7d\u6216\u62d3\u6251\u53d1\u751f\u53d8\u5316\u800c\u6539\u53d8\u8def\u7531\u9009\u62e9\u8def\u5f84\u3002 2. \u94fe\u8def\u72b6\u6001\u8def\u7531\u7b97\u6cd5 \u2003\u94fe\u8def\u72b6\u6001 ( Link State, LS ) \u8def\u7531\u7b97\u6cd5\u662f\u4e00\u79cd\u5168\u5c40\u8def\u7531\u7b97\u6cd5\u3002\u9996\u5148\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7f6e\u94fe\u8def\u6210\u672c\u3001\u6784\u9020\u5e76\u5411\u5176\u4ed6\u7ed3\u70b9\u5e7f\u64ad\u94fe\u8def\u72b6\u6001\u5206\u7ec4\uff08\u6cdb\u6d2a\uff09\uff0c\u5f53\u67d0\u4e2a\u7ed3\u70b9\u83b7\u5f97\u4e86\u5168\u5c40\u7684\u8def\u7531\u4fe1\u606f\u540e\uff0c\u5c31\u4f7f\u7528 Dijskra \u7b97\u6cd5\uff0c\u7ecf\u8fc7 k \u6b21\u8fed\u4ee3\uff0c\u6c42\u51fa\u5230\u76f8\u90bb\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u6700\u540e\uff0c\u8def\u7531\u5668\u5c06\u6c42\u51fa\u7684\u6700\u77ed\u8def\u5f84\u53cd\u6620\u5230\u8f6c\u53d1\u8868\u4e2d\u3002 \u2003 LS \u7b97\u6cd5 (\u4ee5\u53ca\u5176\u4ed6\u4ee5\u62e5\u585e\u3001\u65f6\u5ef6\u4e3a\u6d4b\u5ea6\u7684\u7b97\u6cd5) \u53ef\u80fd\u4f1a\u5bfc\u81f4\u9707\u8361 ( oscillations ) \u73b0\u8c61\u3002\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u8282\u70b9 x \u3001 y \u3001 z \u5206\u522b\u8981\u53d1\u5f80 w \u8282\u70b9 1\u3001e\u30011 \u4e2a\u5355\u4f4d\u7684\u6d41\u91cf\uff0c\u521d\u59cb\u7684\u94fe\u8def\u72b6\u6001\u5982 (a) \u6240\u793a\u3002\u968f\u540e\uff0c\u4e09\u53f0\u8def\u7531\u5668\u90fd\u8fd0\u884c LS \u7b97\u6cd5\uff0c\u5b83\u4eec\u786e\u5b9a\u7684\u5230 w \u7684\u6700\u77ed\u8def\u5f84\u5c06\u5728\u9006\u65f6\u9488\u548c\u987a\u65f6\u9488\u4e4b\u95f4\u6765\u56de\u9707\u8361\u3002 \u2003\u4e00\u79cd\u6709\u6548\u7684\u6539\u8fdb\u63aa\u65bd\u662f\u4e0d\u8ba9\u6240\u6709\u7684\u8def\u7531\u5668\u540c\u65f6\u8fd0\u884c LS \u7b97\u6cd5\uff0c\u8ba9\u6bcf\u53f0\u8def\u7531\u5668\u53d1\u9001\u94fe\u8def\u72b6\u6001\u5206\u7ec4\u7684\u65f6\u95f4\u968f\u673a\u5316\u3002 3. \u8ddd\u79bb\u5411\u91cf\u8def\u7531\u7b97\u6cd5 \u2003\u8ddd\u79bb\u5411\u91cf ( Distance-Vertor, DV ) \u8def\u7531\u7b97\u6cd5\u662f\u4e00\u4e2a\u8fed\u4ee3\u7684\u3001\u5f02\u6b65\u7684\u3001\u5206\u5e03\u5f0f\u7684\u7b97\u6cd5\u3002\u5206\u5e03\u5f0f\uff1a DV \u7b97\u6cd5\u9700\u8981\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u90bb\u5c45\u6536\u96c6\u4fe1\u606f\uff0c\u6267\u884c\u8ba1\u7b97\u540e\u518d\u628a\u7ed3\u679c\u5206\u53d1\u7ed9\u90bb\u5c45\uff1b\u8fed\u4ee3\uff1a DV \u7b97\u6cd5\u6267\u884c\u5230\u90bb\u5c45\u4e4b\u95f4\u65e0\u66f4\u591a\u4fe1\u606f\u53ef\u4ea4\u6362\u4e3a\u6b62\uff1b\u5f02\u6b65\uff1a\u6240\u6709\u8282\u70b9\u4e4b\u95f4\u4e0d\u9700\u8981\u6b65\u8c03\u4e00\u81f4\u3002 \u2003 DV \u7b97\u6cd5\u57fa\u4e8e\u52a8\u6001\u89c4\u5212\u7684 Bellman-Ford \u65b9\u7a0b\uff1a$d_x(y)=\\min_v\\lbrace c(x,v)+d_v(y)\\rbrace$\uff0c\u5176\u4e2d $(x,v)\\in E$\uff0c$d_u(v)$ \u8868\u793a $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\u3002 DV \u7b97\u6cd5\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9 $x$ \u7ef4\u62a4\u4ee5\u4e0b\u4e09\u79cd\u8def\u7531\u9009\u62e9\u4fe1\u606f\uff1a \u4e00\u4e2a\u8ddd\u79bb\u5411\u91cf\uff1a$\\boldsymbol{D_x(y)}=( D_x(y):\\ y\\in E)$\uff0c\u5305\u542b $x$ \u5230 $E$ \u4e2d\u6240\u6709\u70b9\u7684\u5f00\u9500\u4f30\u8ba1 \u6bcf\u4e2a\u90bb\u63a5\u70b9\u7684\u5f00\u9500 $c(x,v)$ \u6bcf\u4e2a\u90bb\u63a5\u70b9\u7684\u8ddd\u79bb\u5411\u91cf \u6bcf\u4e2a\u8282\u70b9\u4e0d\u65f6\u5730\u5411\u5b83\u7684\u6bcf\u4e2a\u90bb\u5c45\u53d1\u9001\u81ea\u5df1\u7684\u8ddd\u79bb\u5411\u91cf\u526f\u672c\u3002\u5f53 $x$ \u4ece\u67d0\u4e2a\u90bb\u5c45 $v$ \u6536\u5230\u4e86\u4e00\u4e2a\u8ddd\u79bb\u5411\u91cf\uff0c\u5c31\u4fdd\u5b58\u5b83\u5e76\u901a\u8fc7 Bellman-Ford \u65b9\u7a0b\u66f4\u65b0\u81ea\u5df1\u7684\u8ddd\u79bb\u5411\u91cf\uff1b\u5982\u679c $x$ \u7684\u8ddd\u79bb\u5411\u91cf\u56e0\u6b64\u800c\u53d1\u751f\u6539\u53d8\uff0c\u5c31\u5411\u6bcf\u4e2a\u90bb\u5c45\u53d1\u9001\u66f4\u65b0\u540e\u7684\u8ddd\u79bb\u5411\u91cf\u3002\u53ea\u8981\u8282\u70b9\u4e4b\u95f4\u6301\u7eed\u4ee5\u5f02\u6b65\u7684\u65b9\u5f0f\u4ea4\u6362\u8ddd\u79bb\u5411\u91cf\uff0c\u8fed\u4ee3\u7ec8\u6b62\u65f6\uff0c$D_x(y)$ \u5c31\u4f1a\u6536\u655b\u5230 $d_x(y)$\u3002 1 2 3 4 5 6 7 8 9 loop for each node : wait ( until I see a link cost change to some neighbor w or until I receive a distance vector from some neighbor w ) for each y in E : D ( x , y ) = min { c ( x , v ) + D ( v , y )} if D ( x , y ) changed for any destination y send distance vector Dx to all neighbors \u2460 \u94fe\u8def\u5f00\u9500\u6539\u53d8/\u94fe\u8def\u6545\u969c \u2003\u5047\u8bbe $c(x,y)$ \u4ece $4$ \u53d8\u4e3a $60$\uff0c\u5728\u53d8\u5316\u4e4b\u524d\uff0c$\\boldsymbol{D_y}=(4,0,1)$\uff0c$\\boldsymbol{D_z}=(5,1,0)$\u3002\u5728 $t_0$ \u65f6\u523b\uff0c$y$ \u63a2\u6d4b\u5230\u8fd9\u4e2a\u53d8\u5316\uff0c\u5e76\u7531 $\\boldsymbol{D_z}$ \u91cd\u8ba1\u7b97 $D_y(x)=6$\uff1b\u968f\u540e\uff0c\u5728 $t_1$ \u65f6\u523b\uff0c$y$ \u5c06\u53d8\u5316\u901a\u77e5 $z$\uff0c$z$ \u53c8\u91cd\u8ba1\u7b97 $D_z(x)=7$\uff0c\u8fd9\u65f6\u5c31\u8fdb\u5165\u4e86\u8def\u7531\u9009\u62e9\u73af\u8def (routing loop) \u3002\u7ecf\u8fc7 $44$ \u6b21\u62a5\u6587\u4ea4\u6362\u4ee5\u540e\uff0c$z$ \u624d\u80fd\u786e\u5b9a\u5230 $x$ \u7684\u6700\u77ed\u8def\u4e3a $(z,x)$\u3002\u5f53\u94fe\u8def\u5f00\u9500\u589e\u52a0\u7684\u975e\u5e38\u5927\uff0c\u6216\u8005\u94fe\u8def\u6545\u969c\u4e86\uff0c\u8fed\u4ee3\u7684\u6b21\u6570\u4e5f\u5c31\u66f4\u591a\u3002\u8fd9\u4e2a\u95ee\u9898\u4e5f\u88ab\u79f0\u4f5c\u65e0\u7a77\u8ba1\u6570\u95ee\u9898 ( count-to-infinity )\u3002 \u2461 \u65e0\u7a77\u8ba1\u6570\uff1a\u589e\u52a0\u6bd2\u6027\u9006\u8f6c \u2003\u6bd2\u6027\u9006\u8f6c ( poisoned reverse ) \u7684\u57fa\u672c\u601d\u60f3\u4e3a\uff1a\u5982\u679c\u67d0\u70b9 $a$ \u901a\u8fc7 $m$ \u8def\u7531\u5230\u76ee\u7684\u5730 $b$\uff0c\u90a3\u4e48 $z$ \u5411 $m$ \u53d1\u9001\u8ddd\u79bb\u5411\u91cf\u65f6\uff0c\u901a\u544a $m$ \u66f4\u65b0 $D_a(b)=\\infty$\uff0c\u5373\u4f7f\u8fd9\u662f\u4e00\u4e2a\u201c\u5584\u610f\u7684\u8c0e\u8a00\u201d\u3002 \u2003\u8003\u8651 \u2460 \u4e2d\u7684\u60c5\u5f62\uff0c\u53d8\u5316\u53d1\u751f\u524d\uff0c$y$ \u5b58\u50a8\u7684 $D_z(x)$ \u5df2\u7ecf\u4e3a $\\infty$\u3002\u968f\u540e\uff0c$y$ \u4e0e $z$ \u7ecf\u8fc7\u4e09\u6b21\u62a5\u6587\u4ea4\u6362\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a $D_y(x)=d_y(x)=51$\uff0c\u4e14 $z$ \u6700\u540e\u5b58\u50a8\u7684 $D_y(x)=\\infty$\u3002 \u2003\u6bd2\u6027\u9006\u8f6c\u5e76\u6ca1\u6709\u89e3\u51b3\u4e00\u822c\u6027\u7684\u65e0\u7a77\u8ba1\u6570\u95ee\u9898\uff0c\u5982\u679c\u4e0d\u662f\u4e24\u4e2a\u76f4\u8fde\u7684\u7ed3\u70b9\uff0c\u5c31\u65e0\u6cd5\u901a\u8fc7\u6bd2\u6027\u9006\u8f6c\u89e3\u51b3\u3002 \u2462 \u65e0\u7a77\u8ba1\u6570\uff1a\u5b9a\u4e49\u6700\u5927\u5ea6\u91cf \u2003\u5176\u57fa\u672c\u601d\u60f3\u4e3a\u5b9a\u4e49\u4e00\u4e2a\u6700\u5927\u7684\u5ea6\u91cf\uff0c\u5f53\u8d85\u8fc7\u8fd9\u4e2a\u503c\u5c31\u8ba4\u4e3a\u662f $\\infty$\uff0c\u5e76\u505c\u6b62\u8fed\u4ee3\u3002","title":"3.Route Algorithm"},{"location":"4-NetworkLayer/4.3/#1","text":"\u8def\u7531\u9009\u62e9\u95ee\u9898\u901a\u8fc7\u56fe $G=(V, E)$ \u8868\u793a\uff0c\u4e00\u6761\u94fe\u8def\u4e0a\u7684\u5f00\u9500\u901a\u5e38\u53ef\u80fd\u4e0e\u7269\u7406\u957f\u5ea6\u3001\u94fe\u8def\u901f\u5ea6\u3001\u91d1\u94b1\u5f00\u9500\u7b49\u6709\u5173\u3002\u8def\u7531\u7b97\u6cd5\u7684\u76ee\u7684\u662f\u627e\u51fa\u4e00\u6761\u4ece\u6e90\u5230\u76ee\u7684\u7684\u6700\u77ed\u8def\u5f84 $(x_1,...,x_p)$\u3002\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u901a\u5e38\u5b58\u5728\u4ee5\u4e0b\u51e0\u79cd\u5212\u5206\u65b9\u5f0f\u3002 \u2003\u96c6\u4e2d\u5f0f or \u5206\u6563\u5f0f\uff1a \u96c6\u4e2d\u5f0f\u8def\u7531\u7b97\u6cd5 ( centralized ): \u6240\u6709\u7684\u8def\u7531\u5668\u638c\u63e1\u5168\u5c40\u4fe1\u606f\uff0c\u5373\u5b8c\u6574\u7684\u7f51\u7edc\u62d3\u6251\u548c\u94fe\u8def\u8d39\u7528\u3002 \u5206\u6563\u5f0f\u8def\u7531\u7b97\u6cd5 ( decentralized ): \u6240\u6709\u7684\u8def\u7531\u5668\u4ec5\u4ec5\u6709\u76f4\u63a5\u4e0e\u5176\u76f8\u8fde\u7684\u94fe\u8def\u5f00\u9500\u548c\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u901a\u8fc7\u8fed\u4ee3\u3001\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u3002 \u2003\u9759\u6001 or \u52a8\u6001\uff1a \u9759\u6001\u8def\u7531\u7b97\u6cd5\uff1a\u624b\u5de5\u914d\u7f6e\uff0c\u8def\u7531\u66f4\u65b0\u6162\u3002 \u52a8\u6001\u8def\u7531\u7b97\u6cd5\uff1a\u968f\u7740\u7f51\u7edc\u6d41\u91cf\u8d1f\u8f7d\u6216\u62d3\u6251\u53d1\u751f\u53d8\u5316\u800c\u6539\u53d8\u8def\u7531\u9009\u62e9\u8def\u5f84\u3002","title":"1. \u8def\u7531\u7b97\u6cd5\u6982\u8ff0"},{"location":"4-NetworkLayer/4.3/#2","text":"\u94fe\u8def\u72b6\u6001 ( Link State, LS ) \u8def\u7531\u7b97\u6cd5\u662f\u4e00\u79cd\u5168\u5c40\u8def\u7531\u7b97\u6cd5\u3002\u9996\u5148\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7f6e\u94fe\u8def\u6210\u672c\u3001\u6784\u9020\u5e76\u5411\u5176\u4ed6\u7ed3\u70b9\u5e7f\u64ad\u94fe\u8def\u72b6\u6001\u5206\u7ec4\uff08\u6cdb\u6d2a\uff09\uff0c\u5f53\u67d0\u4e2a\u7ed3\u70b9\u83b7\u5f97\u4e86\u5168\u5c40\u7684\u8def\u7531\u4fe1\u606f\u540e\uff0c\u5c31\u4f7f\u7528 Dijskra \u7b97\u6cd5\uff0c\u7ecf\u8fc7 k \u6b21\u8fed\u4ee3\uff0c\u6c42\u51fa\u5230\u76f8\u90bb\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u6700\u540e\uff0c\u8def\u7531\u5668\u5c06\u6c42\u51fa\u7684\u6700\u77ed\u8def\u5f84\u53cd\u6620\u5230\u8f6c\u53d1\u8868\u4e2d\u3002 \u2003 LS \u7b97\u6cd5 (\u4ee5\u53ca\u5176\u4ed6\u4ee5\u62e5\u585e\u3001\u65f6\u5ef6\u4e3a\u6d4b\u5ea6\u7684\u7b97\u6cd5) \u53ef\u80fd\u4f1a\u5bfc\u81f4\u9707\u8361 ( oscillations ) \u73b0\u8c61\u3002\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u8282\u70b9 x \u3001 y \u3001 z \u5206\u522b\u8981\u53d1\u5f80 w \u8282\u70b9 1\u3001e\u30011 \u4e2a\u5355\u4f4d\u7684\u6d41\u91cf\uff0c\u521d\u59cb\u7684\u94fe\u8def\u72b6\u6001\u5982 (a) \u6240\u793a\u3002\u968f\u540e\uff0c\u4e09\u53f0\u8def\u7531\u5668\u90fd\u8fd0\u884c LS \u7b97\u6cd5\uff0c\u5b83\u4eec\u786e\u5b9a\u7684\u5230 w \u7684\u6700\u77ed\u8def\u5f84\u5c06\u5728\u9006\u65f6\u9488\u548c\u987a\u65f6\u9488\u4e4b\u95f4\u6765\u56de\u9707\u8361\u3002 \u2003\u4e00\u79cd\u6709\u6548\u7684\u6539\u8fdb\u63aa\u65bd\u662f\u4e0d\u8ba9\u6240\u6709\u7684\u8def\u7531\u5668\u540c\u65f6\u8fd0\u884c LS \u7b97\u6cd5\uff0c\u8ba9\u6bcf\u53f0\u8def\u7531\u5668\u53d1\u9001\u94fe\u8def\u72b6\u6001\u5206\u7ec4\u7684\u65f6\u95f4\u968f\u673a\u5316\u3002","title":"2. \u94fe\u8def\u72b6\u6001\u8def\u7531\u7b97\u6cd5"},{"location":"4-NetworkLayer/4.3/#3","text":"\u8ddd\u79bb\u5411\u91cf ( Distance-Vertor, DV ) \u8def\u7531\u7b97\u6cd5\u662f\u4e00\u4e2a\u8fed\u4ee3\u7684\u3001\u5f02\u6b65\u7684\u3001\u5206\u5e03\u5f0f\u7684\u7b97\u6cd5\u3002\u5206\u5e03\u5f0f\uff1a DV \u7b97\u6cd5\u9700\u8981\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u90bb\u5c45\u6536\u96c6\u4fe1\u606f\uff0c\u6267\u884c\u8ba1\u7b97\u540e\u518d\u628a\u7ed3\u679c\u5206\u53d1\u7ed9\u90bb\u5c45\uff1b\u8fed\u4ee3\uff1a DV \u7b97\u6cd5\u6267\u884c\u5230\u90bb\u5c45\u4e4b\u95f4\u65e0\u66f4\u591a\u4fe1\u606f\u53ef\u4ea4\u6362\u4e3a\u6b62\uff1b\u5f02\u6b65\uff1a\u6240\u6709\u8282\u70b9\u4e4b\u95f4\u4e0d\u9700\u8981\u6b65\u8c03\u4e00\u81f4\u3002 \u2003 DV \u7b97\u6cd5\u57fa\u4e8e\u52a8\u6001\u89c4\u5212\u7684 Bellman-Ford \u65b9\u7a0b\uff1a$d_x(y)=\\min_v\\lbrace c(x,v)+d_v(y)\\rbrace$\uff0c\u5176\u4e2d $(x,v)\\in E$\uff0c$d_u(v)$ \u8868\u793a $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\u3002 DV \u7b97\u6cd5\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9 $x$ \u7ef4\u62a4\u4ee5\u4e0b\u4e09\u79cd\u8def\u7531\u9009\u62e9\u4fe1\u606f\uff1a \u4e00\u4e2a\u8ddd\u79bb\u5411\u91cf\uff1a$\\boldsymbol{D_x(y)}=( D_x(y):\\ y\\in E)$\uff0c\u5305\u542b $x$ \u5230 $E$ \u4e2d\u6240\u6709\u70b9\u7684\u5f00\u9500\u4f30\u8ba1 \u6bcf\u4e2a\u90bb\u63a5\u70b9\u7684\u5f00\u9500 $c(x,v)$ \u6bcf\u4e2a\u90bb\u63a5\u70b9\u7684\u8ddd\u79bb\u5411\u91cf \u6bcf\u4e2a\u8282\u70b9\u4e0d\u65f6\u5730\u5411\u5b83\u7684\u6bcf\u4e2a\u90bb\u5c45\u53d1\u9001\u81ea\u5df1\u7684\u8ddd\u79bb\u5411\u91cf\u526f\u672c\u3002\u5f53 $x$ \u4ece\u67d0\u4e2a\u90bb\u5c45 $v$ \u6536\u5230\u4e86\u4e00\u4e2a\u8ddd\u79bb\u5411\u91cf\uff0c\u5c31\u4fdd\u5b58\u5b83\u5e76\u901a\u8fc7 Bellman-Ford \u65b9\u7a0b\u66f4\u65b0\u81ea\u5df1\u7684\u8ddd\u79bb\u5411\u91cf\uff1b\u5982\u679c $x$ \u7684\u8ddd\u79bb\u5411\u91cf\u56e0\u6b64\u800c\u53d1\u751f\u6539\u53d8\uff0c\u5c31\u5411\u6bcf\u4e2a\u90bb\u5c45\u53d1\u9001\u66f4\u65b0\u540e\u7684\u8ddd\u79bb\u5411\u91cf\u3002\u53ea\u8981\u8282\u70b9\u4e4b\u95f4\u6301\u7eed\u4ee5\u5f02\u6b65\u7684\u65b9\u5f0f\u4ea4\u6362\u8ddd\u79bb\u5411\u91cf\uff0c\u8fed\u4ee3\u7ec8\u6b62\u65f6\uff0c$D_x(y)$ \u5c31\u4f1a\u6536\u655b\u5230 $d_x(y)$\u3002 1 2 3 4 5 6 7 8 9 loop for each node : wait ( until I see a link cost change to some neighbor w or until I receive a distance vector from some neighbor w ) for each y in E : D ( x , y ) = min { c ( x , v ) + D ( v , y )} if D ( x , y ) changed for any destination y send distance vector Dx to all neighbors","title":"3. \u8ddd\u79bb\u5411\u91cf\u8def\u7531\u7b97\u6cd5"},{"location":"4-NetworkLayer/4.3/#1_1","text":"\u5047\u8bbe $c(x,y)$ \u4ece $4$ \u53d8\u4e3a $60$\uff0c\u5728\u53d8\u5316\u4e4b\u524d\uff0c$\\boldsymbol{D_y}=(4,0,1)$\uff0c$\\boldsymbol{D_z}=(5,1,0)$\u3002\u5728 $t_0$ \u65f6\u523b\uff0c$y$ \u63a2\u6d4b\u5230\u8fd9\u4e2a\u53d8\u5316\uff0c\u5e76\u7531 $\\boldsymbol{D_z}$ \u91cd\u8ba1\u7b97 $D_y(x)=6$\uff1b\u968f\u540e\uff0c\u5728 $t_1$ \u65f6\u523b\uff0c$y$ \u5c06\u53d8\u5316\u901a\u77e5 $z$\uff0c$z$ \u53c8\u91cd\u8ba1\u7b97 $D_z(x)=7$\uff0c\u8fd9\u65f6\u5c31\u8fdb\u5165\u4e86\u8def\u7531\u9009\u62e9\u73af\u8def (routing loop) \u3002\u7ecf\u8fc7 $44$ \u6b21\u62a5\u6587\u4ea4\u6362\u4ee5\u540e\uff0c$z$ \u624d\u80fd\u786e\u5b9a\u5230 $x$ \u7684\u6700\u77ed\u8def\u4e3a $(z,x)$\u3002\u5f53\u94fe\u8def\u5f00\u9500\u589e\u52a0\u7684\u975e\u5e38\u5927\uff0c\u6216\u8005\u94fe\u8def\u6545\u969c\u4e86\uff0c\u8fed\u4ee3\u7684\u6b21\u6570\u4e5f\u5c31\u66f4\u591a\u3002\u8fd9\u4e2a\u95ee\u9898\u4e5f\u88ab\u79f0\u4f5c\u65e0\u7a77\u8ba1\u6570\u95ee\u9898 ( count-to-infinity )\u3002","title":"\u2460 \u94fe\u8def\u5f00\u9500\u6539\u53d8/\u94fe\u8def\u6545\u969c"},{"location":"4-NetworkLayer/4.3/#2_1","text":"\u6bd2\u6027\u9006\u8f6c ( poisoned reverse ) \u7684\u57fa\u672c\u601d\u60f3\u4e3a\uff1a\u5982\u679c\u67d0\u70b9 $a$ \u901a\u8fc7 $m$ \u8def\u7531\u5230\u76ee\u7684\u5730 $b$\uff0c\u90a3\u4e48 $z$ \u5411 $m$ \u53d1\u9001\u8ddd\u79bb\u5411\u91cf\u65f6\uff0c\u901a\u544a $m$ \u66f4\u65b0 $D_a(b)=\\infty$\uff0c\u5373\u4f7f\u8fd9\u662f\u4e00\u4e2a\u201c\u5584\u610f\u7684\u8c0e\u8a00\u201d\u3002 \u2003\u8003\u8651 \u2460 \u4e2d\u7684\u60c5\u5f62\uff0c\u53d8\u5316\u53d1\u751f\u524d\uff0c$y$ \u5b58\u50a8\u7684 $D_z(x)$ \u5df2\u7ecf\u4e3a $\\infty$\u3002\u968f\u540e\uff0c$y$ \u4e0e $z$ \u7ecf\u8fc7\u4e09\u6b21\u62a5\u6587\u4ea4\u6362\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a $D_y(x)=d_y(x)=51$\uff0c\u4e14 $z$ \u6700\u540e\u5b58\u50a8\u7684 $D_y(x)=\\infty$\u3002 \u2003\u6bd2\u6027\u9006\u8f6c\u5e76\u6ca1\u6709\u89e3\u51b3\u4e00\u822c\u6027\u7684\u65e0\u7a77\u8ba1\u6570\u95ee\u9898\uff0c\u5982\u679c\u4e0d\u662f\u4e24\u4e2a\u76f4\u8fde\u7684\u7ed3\u70b9\uff0c\u5c31\u65e0\u6cd5\u901a\u8fc7\u6bd2\u6027\u9006\u8f6c\u89e3\u51b3\u3002","title":"\u2461 \u65e0\u7a77\u8ba1\u6570\uff1a\u589e\u52a0\u6bd2\u6027\u9006\u8f6c"},{"location":"4-NetworkLayer/4.3/#3_1","text":"\u5176\u57fa\u672c\u601d\u60f3\u4e3a\u5b9a\u4e49\u4e00\u4e2a\u6700\u5927\u7684\u5ea6\u91cf\uff0c\u5f53\u8d85\u8fc7\u8fd9\u4e2a\u503c\u5c31\u8ba4\u4e3a\u662f $\\infty$\uff0c\u5e76\u505c\u6b62\u8fed\u4ee3\u3002","title":"\u2462 \u65e0\u7a77\u8ba1\u6570\uff1a\u5b9a\u4e49\u6700\u5927\u5ea6\u91cf"},{"location":"4-NetworkLayer/4.4/","text":"1. Internet \u8def\u7531: \u5c42\u6b21\u5316\u8def\u7531 \u2003\u5c06\u6574\u4e2a\u7f51\u7edc\u770b\u6210\u4e00\u5f20\u56fe\u8fc7\u4e8e\u7406\u60f3\u5316\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a \u89c4\u6a21\uff1a\u968f\u7740\u8282\u70b9\u6570\u589e\u591a\uff0c\u6709\u5173\u8def\u7531\u9009\u62e9\u4fe1\u606f\u7684\u901a\u4fe1\u3001\u8ba1\u7b97\u3001\u5b58\u50a8\u7684\u5f00\u9500\u4e0d\u53ef\u5b9e\u73b0 \u7ba1\u7406\u81ea\u6cbb\uff1a\u6bcf\u4e2a ISP \u90fd\u9700\u8981\u80fd\u63a7\u5236\u5176\u7f51\u5185\u7684\u8def\u7531\uff0c\u5982\u9009\u62e9\u8def\u7531\u534f\u8bae\u3001\u63a7\u5236\u6d41\u91cf\u5982\u4f55\u88ab\u8def\u7531\u7b49 \u2003\u56e0\u6b64\uff0c\u5b9e\u9645\u4e2d\uff0c\u8def\u7531\u5668\u901a\u8fc7\u81ea\u6cbb\u7cfb\u7edf ( Autonomous System, AS ) \u7ec4\u7ec7\u8d77\u6765\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u7531\u552f\u4e00\u7684 AS \u53f7\u6807\u8bc6\u3002\u8def\u7531\u4e5f\u56e0\u6b64\u53d8\u5f97\u5c42\u6b21\u5316\uff0c\u5206\u4e3a inter-AS \u548c intra-AS \uff0c\u540c\u4e00 AS \u5185\u8fd0\u884c\u76f8\u540c\u7684\u8def\u7531\u534f\u8bae\uff0c\u4e5f\u79f0\u5185\u90e8\u7f51\u7edc\u534f\u8bae ( interior gateway protocols, IGP )\uff0c\u4e0d\u540c\u7cfb\u7edf\u5185\u7684\u534f\u8bae\u53ef\u4ee5\u4e0d\u540c\uff1b \u4e3a\u5b9e\u73b0 AS \u95f4\u7684\u901a\u4fe1\uff0c\u6bcf\u4e2a AS \u90fd\u9700\u8981\u6709\u4e00\u4e9b\u7f51\u5173\u8def\u7531\u5668 ( gateway router )\u3002 \u2003\u5728 Internet \u4e2d\uff0c intra-AS \u4fa7\u91cd\u6027\u80fd\uff0c\u800c inter-AS \u4fa7\u91cd\u7b56\u7565\u3002 \u2003 e.g. \u5047\u8bbe AS1 \u901a\u8fc7 AS \u95f4\u8def\u7531\u534f\u8bae\u5b66\u4e60\u5230\uff0c\u5b50\u7f51 x \u901a\u8fc7 AS2 \u548c AS3 \u5747\u53ef\u8fbe\uff0c\u90a3\u4e48\u8def\u7531\u5668 1d \u4f1a\u6839\u636e\u70ed\u571f\u8c46\u8def\u7531\u7b56\u7565\uff0c\u5c06\u5206\u7ec4\u53d1\u5f80\u6700\u8fd1\u7684\u7f51\u5173\u8def\u7531\u5668\u3002\u8fd9\u4e2a\u4efb\u52a1\u4e5f\u662f\u7531 AS \u95f4\u8def\u7531\u534f\u8bae\u5b8c\u6210\u7684\u3002 2. RIP \u534f\u8bae \u2003\u8def\u7531\u4fe1\u606f\u534f\u8bae ( Routing Information Protocol, RIP ) \u662f\u4e00\u79cd AS \u5185\u90e8\u534f\u8bae\uff0c\u4f7f\u7528\u8ddd\u79bb\u5411\u91cf\u8def\u7531\u7b97\u6cd5\uff1a \u5176\u8ddd\u79bb\u5ea6\u91cf\u4e3a\u8df3\u6b65\u6570 ( hops )\uff0c\u6700\u5927\u5ea6\u91cf\u4e3a $15$ \u8df3\u6b65 \u6bcf\u9694 $30s$\uff0c\u90bb\u5c45\u4e4b\u95f4\u4ea4\u6362\u4e00\u6b21 DV \uff08\u901a\u544a\uff09\uff0c\u6bcf\u6b21\u6700\u591a\u901a\u544a $25$ \u4e2a\u76ee\u7684\u5b50\u7f51 \u5bf9\u4efb\u4e00\u8282\u70b9\uff0c\u5982\u679c $180s$ \u5185\u6ca1\u6709\u6536\u5230\u6765\u81ea\u67d0\u4e2a\u90bb\u5c45\u7684\u901a\u544a\uff0c\u5c31\u8ba4\u4e3a\u76f8\u5e94\u94fe\u8def\u5931\u6548 ($\\infty$) \u5e94\u7528\u4e86\u6bd2\u6027\u9006\u8f6c\u6280\u672f \u2003\u7531\u4e8e $16$ hops \u5c31\u7b49\u540c\u4e8e $\\infty$\uff0c RIP \u53ea\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u7f51\u7edc\u3002 \u2003 RIP \u7684\u8def\u7531\u8868\u7531\u540d\u4e3a route-d \u7684\u5e94\u7528\u5c42\u8fdb\u7a0b\u7ba1\u7406\uff0c\u901a\u544a\u62a5\u6587\u5468\u671f\u6027\u901a\u8fc7 UDP \u6570\u636e\u62a5\u53d1\u9001\u3002 3. OSPF \u534f\u8bae \u2003\u5f00\u653e\u6700\u77ed\u8def\u5f84\u4f18\u5148 ( Open Shortest Path First ) \u534f\u8bae\u662f\u4e00\u79cd AS \u5185\u90e8\u534f\u8bae\uff0c\u4f7f\u7528\u94fe\u8def\u72b6\u6001\u8def\u7531\u7b97\u6cd5\uff1a OSPF \u901a\u544a\u5728\u6574\u4e2a AS \u8303\u56f4\u5185\u6cdb\u6d2a\uff0c\u5176\u62a5\u6587\u76f4\u63a5\u5c01\u88c5\u81f3 IP \u6570\u636e\u62a5\u4e2d \u6bcf\u4e2a\u8def\u7531\u5668\u6784\u9020\u5b8c\u6574\u7684 AS \u62d3\u6251\u56fe\uff0c\u5229\u7528 Dijskra \u7b97\u6cd5\u8ba1\u7b97\u8def\u7531 \u2003\u76f8\u6bd4\u4e8e RIP \u534f\u8bae\uff0c OSPF \u6709\u5982\u4e0b\u4f18\u70b9\uff1a \u5b89\u5168\uff1a\u6240\u6709 OSPF \u62a5\u6587\u53ef\u4ee5\u88ab\u8ba4\u8bc1 \u5141\u8bb8\u7ef4\u62a4\u591a\u6761\u6700\u77ed\u8def\u5f84\uff0c\u6709\u5229\u4e8e\u8d1f\u8f7d\u5747\u8861 \u5bf9\u4e8e\u4e0d\u540c\u94fe\u8def\uff0c\u53ef\u4ee5\u6839\u636e IP \u6570\u636e\u62a5\u4e2d\u7684 ToS \u8bbe\u7f6e\u4e0d\u540c\u7684\u5ea6\u91cf\uff0c\u5b9e\u73b0\u4e0d\u540c\u670d\u52a1\u7c7b\u578b\u7684\u6570\u636e\u5728\u4e0d\u540c\u94fe\u8def\u4e2d\u5206\u6d41 \u7531\u4e8e\u6301\u6709\u5168\u5c40\u4fe1\u606f\uff0c\u53ef\u96c6\u6210\u5355\u64ad\u8def\u7531\u4e0e\u591a\u64ad\u8def\u7531 (\u6700\u5c0f\u751f\u6210\u6811) \u652f\u6301\u5728\u5355\u4e2a AS \u5185\u518d\u5206\u5c42\u4e3a\u4e3b\u5e72\u533a ( backbone ) \u548c\u5c40\u90e8\u533a ( area )\u3002 area \u4e4b\u95f4\u7684\u901a\u4fe1\u53ea\u77e5\u9053\u5230\u8fbe\u5bf9\u65b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u800c\u4e0d\u77e5\u5230\u5bf9\u65b9\u533a\u57df\u7684\u8be6\u7ec6\u62d3\u6251\u3002\u533a\u8fb9\u754c\u8def\u7531\u5668 ( Area Border Routers ) \u540c\u65f6\u4f4d\u4e8e\u4e24\u4e2a\u533a\u57df\u5185\uff0c\u6c47\u603b\u5230\u8fbe\u6240\u5728\u533a\u7f51\u7edc\u7684\u8ddd\u79bb\uff0c\u901a\u544a\u7ed9\u5176\u4ed6 ABR \u3002 4. BGP \u534f\u8bae \u2003\u8fb9\u754c\u7f51\u5173 ( Border Gateway ) \u534f\u8bae\u662f\u6700\u91cd\u8981\u7684 Internet \u534f\u8bae\u4e4b\u4e00\uff0c\u5b83\u5df2\u6210\u4e3a\u6807\u51c6\u7684\u57df\u95f4\u8def\u7531\u534f\u8bae\uff0c\u5c06 Internet \u4e2d\u6570\u4ee5\u5343\u8ba1\u7684 ISP \u8fde\u63a5\u8d77\u6765\u3002 \u2003 BGP \u534f\u8bae\u4e3b\u8981\u5b9e\u73b0\u4ee5\u4e0b\u4e24\u65b9\u9762\u7684\u529f\u80fd\uff1a \u67d0\u4e2a AS \u901a\u544a\u5176\u4ed6 AS \u67d0\u4e2a\u5b50\u7f51\u7684\u5b58\u5728\uff0c\u5e76\u9644\u5e26\u8def\u5f84\u4fe1\u606f\uff08\u800c\u4e0d\u662f\u8ddd\u79bb\uff09 \u4e00\u4e2a\u8def\u7531\u5668\u53ef\u80fd\u77e5\u9053\u5230\u67d0\u4e2a\u5b50\u7f51\u7684\u591a\u6761\u8def\u5f84\uff0c\u5b83\u901a\u8fc7 BGP \u9009\u62e9\u4e00\u6761\u8def\u7531 (1). BGP \u8def\u7531\u901a\u544a \u2003\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u60c5\u5883\uff1a\u8def\u7531\u5668 3d \u5411\u53f3\u56fe\u4e2d\u6240\u6709\u8def\u7531\u5668\u53d1\u5e03\u5b50\u7f51 x \u7684\u53ef\u8fbe\u6027\u4fe1\u606f\u3002\u5728 BGP \u4e2d\uff0c\u6bcf\u5bf9\u8def\u7531\u5668\u901a\u8fc7 $179$ \u7aef\u53e3\u7684\u534a\u6c38\u4e45 TCP \u8fde\u63a5\u4ea4\u6362\u62a5\u6587\u3002\u6bcf\u4e2a\u8fde\u63a5\u79f0\u4e3a BGP \u8fde\u63a5/\u4f1a\u8bdd\uff1b\u8de8\u8d8a\u4e0d\u540c AS \u7684\u8fde\u63a5\u79f0\u4e3a\u5916\u90e8 BGP ( eBGP ) \u8fde\u63a5\uff0c\u800c AS \u5185\u90e8\u7684\u8fde\u63a5\u79f0\u4e3a\u5185\u90e8 BGP ( iBGP ) \u8fde\u63a5\u3002 \u2003\u901a\u5e38\uff0c\u5728\u8fde\u63a5\u4e0d\u540c AS \u7684\u7f51\u5173\u8def\u7531\u5668\u7684\u94fe\u8def\u4e0a\uff0c\u6709\u4e00\u6761 eBGP \u8fde\u63a5\uff0c\u6bcf\u4e2a AS \u5185\u90e8\u6709\u591a\u6761 iBGP \u8fde\u63a5\uff0c\u4e14 iBGP \u8fde\u63a5\u4e0d\u603b\u662f\u4e0e\u7269\u7406\u94fe\u8def\u76f8\u5bf9\u5e94\u3002 \u2003\u5728\u901a\u544a\u62a5\u6587\u4e2d\uff0c\u6709\u4e24\u4e2a\u91cd\u8981\u5c5e\u6027\uff1a1. AS-PATH \uff0c\u5305\u542b\u901a\u544a\u7ecf\u8fc7\u7684 AS \u5e8f\u5217\uff0c\u8868\u793a\u53ef\u4ee5\u901a\u8fc7 [ASa, ASb, ...] \u5230\u8fbe\u67d0\u4e2a\u5b50\u7f51\uff1b2. NEXT-HOP \uff0c\u6307\u660e\u4e86 AS-PATH \u8d77\u59cb\u7684\u8def\u7531\u5668\u63a5\u53e3\u7684 IP \u3002 BCP \u8def\u7531\u5668\u8fd8\u5229\u7528 AS-PATH \u9632\u6b62\u901a\u544a\u73af\u8def\uff1a\u5982\u679c\u4e00\u53f0\u8def\u7531\u5668\u5728\u8def\u5f84\u5217\u8868\u4e2d\u53d1\u73b0\u81ea\u5df1\u7684 AS \uff0c\u5c31\u62d2\u7edd\u8be5\u901a\u544a\u3002 \u2003\u4ee5\u4e0a\u9762\u7684\u60c5\u5883\u4e3a\u4f8b\uff0c 3a \u9996\u5148\u5411 2c \u53d1\u9001\u4e00\u4e2a eBGP \u62a5\u6587\uff0c\u5176\u5185\u5bb9\u5927\u81f4\u4e3a [AS3, x, 11.11.1.1] \uff0c\u968f\u540e 2c \u5411 AS2 \u4e2d\u5305\u62ec 2a \u5728\u5185\u7684\u6240\u6709\u5176\u4ed6\u8def\u7531\u5668\u53d1\u9001 iBGP \u62a5\u6587\u3002\u5f53\u4e00\u4e2a\u8def\u7531\u5668\u83b7\u5f97\u65b0\u7684\u524d\u7f00\u53ef\u8fbe\u6027\u65f6\uff0c\u5c31\u4f1a\u66f4\u65b0\u5b83\u7684\u8f6c\u53d1\u8868\u3002 2a \u53ef\u4ee5\u901a\u8fc7 eBGP \u8fde\u63a5\u7ee7\u7eed\u4f20\u64ad\u53ef\u8fbe\u6027\u4fe1\u606f\uff0c\u4e5f\u53ef\u80fd\u4e0d\u8fd9\u6837\u505a\u3002 (2). BGP \u8def\u7531\u9009\u62e9 \u2003\u5f53\u6709\u591a\u6761\u8def\u5f84\u53ef\u4f9b\u9009\u62e9\uff0c BGP \u5e76\u672a\u76f4\u63a5\u91c7\u7528\u81ea\u79c1\u7684\u70ed\u571f\u8c46\u8def\u7531\uff0c\u800c\u662f\u91c7\u7528\u57fa\u4e8e\u7b56\u7565 ( policy-based ) \u7684\u8def\u7531\uff1a \u2003\u2460 \u4f20\u64ad\u8fc7\u6765\u7684\u8def\u5f84\u88ab\u5236\u5b9a\u4e00\u4e2a\u672c\u5730\u504f\u597d ( local preference ) \u503c\u4f5c\u4e3a\u5176\u5c5e\u6027\uff0c\u8fd9\u4e2a\u503c\u5b8c\u5168\u53d6\u51b3\u4e8e\u76f8\u5e94 AS \u7684\u7f51\u7edc\u7ba1\u7406\u5458\u3002 BGP \u5c06\u9996\u5148\u9009\u62e9\u504f\u597d\u503c\u6700\u9ad8\u7684\u8def\u5f84\u3002 \u2003\u2461 \u5982\u679c \u2460 \u76f8\u540c\uff0c\u9009\u62e9\u5177\u6709\u6700\u77ed AS-PATH \u7684\u8def\u7531 (\u4ec5\u4ec5\u662f AS \u7684\u8df3\u6570)\u3002 \u2003\u2462 \u5982\u679c \u2461 \u76f8\u540c\uff0c\u90a3\u4e48 BGP \u5c31\u6839\u636e NEXT-HOP \u548c\u70ed\u571f\u8c46\u8def\u7531\u7b56\u7565\u9009\u62e9\u8def\u5f84\u3002 \u2003\u2463 \u5982\u679c\u4ecd\u5269\u4f59\u591a\u6761\u8def\u7531\uff0c\u6839\u636e BGP \u6807\u8bc6\u7b26\u9009\u62e9\u3002 \u2003 BGP \u5728\u70ed\u571f\u8c46\u8def\u7531\u4e4b\u524d\uff0c\u5229\u7528 AS-PATH \u8fdb\u884c\u4e86\u8fc7\u6ee4\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f88\u53ef\u80fd\u4f1a\u51cf\u5c0f\u7aef\u5230\u7aef\u65f6\u5ef6\u3002 \u2003\u7528\u4e0a\u56fe\u6240\u793a\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e BGP \u7684\u57fa\u4e8e\u7b56\u7565\u7684\u8def\u7531\u3002 A\u3001B\u3001C\u3001W\u3001X\u3001Y \u662f $6$ \u4e2a AS \uff0c\u5176\u4e2d A\u3001B\u3001C \u662f\u63d0\u4f9b\u5546\u7f51\u7edc\uff0c W\u3001X\u3001Y \u662f\u5ba2\u6237\u7f51\u7edc\u3002 \u2003\u2460 \u5c3d\u7ba1 X \u662f\u4e00\u4e2a\u53cc\u5bbf\u63a5\u5165 ISP \uff0c\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7f51\u7edc\uff0c\u4e0d\u671f\u5f85\u4f5c\u4e3a\u4e2d\u95f4\u8005\u8f6c\u53d1\u7531 B \u5230 C \u4e4b\u95f4\u7684\u4efb\u4f55\u6d41\u91cf\uff0c\u56e0\u6b64\uff0c\u5b83\u4e0d\u4f1a\u5411 B \u901a\u544a\u4efb\u4f55\u5230\u8fbe\u8d27\u7ecf\u8fc7 C \u7684\u8def\u5f84\uff0c\u4f8b\u5982 X-C-Y \u3002 \u2003\u2461 \u5bf9\u4e8e\u4efb\u4e00\u8fd0\u8425\u5546\u7f51\u7edc\u6765\u8bf4\uff0c\u5b83\u5728\u901a\u544a\u8def\u5f84\u7684\u65f6\u5019\uff0c\u53ea\u4f1a\u6267\u884c\u90a3\u4e9b\u6e90\u6216\u76ee\u7684\u662f\u81ea\u5df1\u7684\u5ba2\u6237\u7684\u901a\u544a\uff0c\u8fd9\u662f\u4e00\u6761\u5546\u4e1a\u4e0a\u7684\u7ecf\u9a8c\u6cd5\u5219\u800c\u975e\u5b98\u65b9\u6807\u51c6\u3002\u4f8b\u5982\uff0c A \u53ef\u80fd\u5411 B \u901a\u544a\u8def\u5f84 A-W \uff0c B \u4e5f\u53ef\u80fd\u5411 X \u901a\u544a\u8def\u5f84 B-A-W \uff0c\u4f46 B \u7edd\u4e0d\u4f1a\u5411 C \u901a\u544a\u8def\u5f84 B-A-W \u3002","title":"4.Routing of Internet"},{"location":"4-NetworkLayer/4.4/#1-internet","text":"\u5c06\u6574\u4e2a\u7f51\u7edc\u770b\u6210\u4e00\u5f20\u56fe\u8fc7\u4e8e\u7406\u60f3\u5316\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a \u89c4\u6a21\uff1a\u968f\u7740\u8282\u70b9\u6570\u589e\u591a\uff0c\u6709\u5173\u8def\u7531\u9009\u62e9\u4fe1\u606f\u7684\u901a\u4fe1\u3001\u8ba1\u7b97\u3001\u5b58\u50a8\u7684\u5f00\u9500\u4e0d\u53ef\u5b9e\u73b0 \u7ba1\u7406\u81ea\u6cbb\uff1a\u6bcf\u4e2a ISP \u90fd\u9700\u8981\u80fd\u63a7\u5236\u5176\u7f51\u5185\u7684\u8def\u7531\uff0c\u5982\u9009\u62e9\u8def\u7531\u534f\u8bae\u3001\u63a7\u5236\u6d41\u91cf\u5982\u4f55\u88ab\u8def\u7531\u7b49 \u2003\u56e0\u6b64\uff0c\u5b9e\u9645\u4e2d\uff0c\u8def\u7531\u5668\u901a\u8fc7\u81ea\u6cbb\u7cfb\u7edf ( Autonomous System, AS ) \u7ec4\u7ec7\u8d77\u6765\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u7531\u552f\u4e00\u7684 AS \u53f7\u6807\u8bc6\u3002\u8def\u7531\u4e5f\u56e0\u6b64\u53d8\u5f97\u5c42\u6b21\u5316\uff0c\u5206\u4e3a inter-AS \u548c intra-AS \uff0c\u540c\u4e00 AS \u5185\u8fd0\u884c\u76f8\u540c\u7684\u8def\u7531\u534f\u8bae\uff0c\u4e5f\u79f0\u5185\u90e8\u7f51\u7edc\u534f\u8bae ( interior gateway protocols, IGP )\uff0c\u4e0d\u540c\u7cfb\u7edf\u5185\u7684\u534f\u8bae\u53ef\u4ee5\u4e0d\u540c\uff1b \u4e3a\u5b9e\u73b0 AS \u95f4\u7684\u901a\u4fe1\uff0c\u6bcf\u4e2a AS \u90fd\u9700\u8981\u6709\u4e00\u4e9b\u7f51\u5173\u8def\u7531\u5668 ( gateway router )\u3002 \u2003\u5728 Internet \u4e2d\uff0c intra-AS \u4fa7\u91cd\u6027\u80fd\uff0c\u800c inter-AS \u4fa7\u91cd\u7b56\u7565\u3002 \u2003 e.g. \u5047\u8bbe AS1 \u901a\u8fc7 AS \u95f4\u8def\u7531\u534f\u8bae\u5b66\u4e60\u5230\uff0c\u5b50\u7f51 x \u901a\u8fc7 AS2 \u548c AS3 \u5747\u53ef\u8fbe\uff0c\u90a3\u4e48\u8def\u7531\u5668 1d \u4f1a\u6839\u636e\u70ed\u571f\u8c46\u8def\u7531\u7b56\u7565\uff0c\u5c06\u5206\u7ec4\u53d1\u5f80\u6700\u8fd1\u7684\u7f51\u5173\u8def\u7531\u5668\u3002\u8fd9\u4e2a\u4efb\u52a1\u4e5f\u662f\u7531 AS \u95f4\u8def\u7531\u534f\u8bae\u5b8c\u6210\u7684\u3002","title":"1. Internet \u8def\u7531: \u5c42\u6b21\u5316\u8def\u7531"},{"location":"4-NetworkLayer/4.4/#2-rip","text":"\u8def\u7531\u4fe1\u606f\u534f\u8bae ( Routing Information Protocol, RIP ) \u662f\u4e00\u79cd AS \u5185\u90e8\u534f\u8bae\uff0c\u4f7f\u7528\u8ddd\u79bb\u5411\u91cf\u8def\u7531\u7b97\u6cd5\uff1a \u5176\u8ddd\u79bb\u5ea6\u91cf\u4e3a\u8df3\u6b65\u6570 ( hops )\uff0c\u6700\u5927\u5ea6\u91cf\u4e3a $15$ \u8df3\u6b65 \u6bcf\u9694 $30s$\uff0c\u90bb\u5c45\u4e4b\u95f4\u4ea4\u6362\u4e00\u6b21 DV \uff08\u901a\u544a\uff09\uff0c\u6bcf\u6b21\u6700\u591a\u901a\u544a $25$ \u4e2a\u76ee\u7684\u5b50\u7f51 \u5bf9\u4efb\u4e00\u8282\u70b9\uff0c\u5982\u679c $180s$ \u5185\u6ca1\u6709\u6536\u5230\u6765\u81ea\u67d0\u4e2a\u90bb\u5c45\u7684\u901a\u544a\uff0c\u5c31\u8ba4\u4e3a\u76f8\u5e94\u94fe\u8def\u5931\u6548 ($\\infty$) \u5e94\u7528\u4e86\u6bd2\u6027\u9006\u8f6c\u6280\u672f \u2003\u7531\u4e8e $16$ hops \u5c31\u7b49\u540c\u4e8e $\\infty$\uff0c RIP \u53ea\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u7f51\u7edc\u3002 \u2003 RIP \u7684\u8def\u7531\u8868\u7531\u540d\u4e3a route-d \u7684\u5e94\u7528\u5c42\u8fdb\u7a0b\u7ba1\u7406\uff0c\u901a\u544a\u62a5\u6587\u5468\u671f\u6027\u901a\u8fc7 UDP \u6570\u636e\u62a5\u53d1\u9001\u3002","title":"2. RIP \u534f\u8bae"},{"location":"4-NetworkLayer/4.4/#3-ospf","text":"\u5f00\u653e\u6700\u77ed\u8def\u5f84\u4f18\u5148 ( Open Shortest Path First ) \u534f\u8bae\u662f\u4e00\u79cd AS \u5185\u90e8\u534f\u8bae\uff0c\u4f7f\u7528\u94fe\u8def\u72b6\u6001\u8def\u7531\u7b97\u6cd5\uff1a OSPF \u901a\u544a\u5728\u6574\u4e2a AS \u8303\u56f4\u5185\u6cdb\u6d2a\uff0c\u5176\u62a5\u6587\u76f4\u63a5\u5c01\u88c5\u81f3 IP \u6570\u636e\u62a5\u4e2d \u6bcf\u4e2a\u8def\u7531\u5668\u6784\u9020\u5b8c\u6574\u7684 AS \u62d3\u6251\u56fe\uff0c\u5229\u7528 Dijskra \u7b97\u6cd5\u8ba1\u7b97\u8def\u7531 \u2003\u76f8\u6bd4\u4e8e RIP \u534f\u8bae\uff0c OSPF \u6709\u5982\u4e0b\u4f18\u70b9\uff1a \u5b89\u5168\uff1a\u6240\u6709 OSPF \u62a5\u6587\u53ef\u4ee5\u88ab\u8ba4\u8bc1 \u5141\u8bb8\u7ef4\u62a4\u591a\u6761\u6700\u77ed\u8def\u5f84\uff0c\u6709\u5229\u4e8e\u8d1f\u8f7d\u5747\u8861 \u5bf9\u4e8e\u4e0d\u540c\u94fe\u8def\uff0c\u53ef\u4ee5\u6839\u636e IP \u6570\u636e\u62a5\u4e2d\u7684 ToS \u8bbe\u7f6e\u4e0d\u540c\u7684\u5ea6\u91cf\uff0c\u5b9e\u73b0\u4e0d\u540c\u670d\u52a1\u7c7b\u578b\u7684\u6570\u636e\u5728\u4e0d\u540c\u94fe\u8def\u4e2d\u5206\u6d41 \u7531\u4e8e\u6301\u6709\u5168\u5c40\u4fe1\u606f\uff0c\u53ef\u96c6\u6210\u5355\u64ad\u8def\u7531\u4e0e\u591a\u64ad\u8def\u7531 (\u6700\u5c0f\u751f\u6210\u6811) \u652f\u6301\u5728\u5355\u4e2a AS \u5185\u518d\u5206\u5c42\u4e3a\u4e3b\u5e72\u533a ( backbone ) \u548c\u5c40\u90e8\u533a ( area )\u3002 area \u4e4b\u95f4\u7684\u901a\u4fe1\u53ea\u77e5\u9053\u5230\u8fbe\u5bf9\u65b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u800c\u4e0d\u77e5\u5230\u5bf9\u65b9\u533a\u57df\u7684\u8be6\u7ec6\u62d3\u6251\u3002\u533a\u8fb9\u754c\u8def\u7531\u5668 ( Area Border Routers ) \u540c\u65f6\u4f4d\u4e8e\u4e24\u4e2a\u533a\u57df\u5185\uff0c\u6c47\u603b\u5230\u8fbe\u6240\u5728\u533a\u7f51\u7edc\u7684\u8ddd\u79bb\uff0c\u901a\u544a\u7ed9\u5176\u4ed6 ABR \u3002","title":"3. OSPF \u534f\u8bae"},{"location":"4-NetworkLayer/4.4/#4-bgp","text":"\u8fb9\u754c\u7f51\u5173 ( Border Gateway ) \u534f\u8bae\u662f\u6700\u91cd\u8981\u7684 Internet \u534f\u8bae\u4e4b\u4e00\uff0c\u5b83\u5df2\u6210\u4e3a\u6807\u51c6\u7684\u57df\u95f4\u8def\u7531\u534f\u8bae\uff0c\u5c06 Internet \u4e2d\u6570\u4ee5\u5343\u8ba1\u7684 ISP \u8fde\u63a5\u8d77\u6765\u3002 \u2003 BGP \u534f\u8bae\u4e3b\u8981\u5b9e\u73b0\u4ee5\u4e0b\u4e24\u65b9\u9762\u7684\u529f\u80fd\uff1a \u67d0\u4e2a AS \u901a\u544a\u5176\u4ed6 AS \u67d0\u4e2a\u5b50\u7f51\u7684\u5b58\u5728\uff0c\u5e76\u9644\u5e26\u8def\u5f84\u4fe1\u606f\uff08\u800c\u4e0d\u662f\u8ddd\u79bb\uff09 \u4e00\u4e2a\u8def\u7531\u5668\u53ef\u80fd\u77e5\u9053\u5230\u67d0\u4e2a\u5b50\u7f51\u7684\u591a\u6761\u8def\u5f84\uff0c\u5b83\u901a\u8fc7 BGP \u9009\u62e9\u4e00\u6761\u8def\u7531","title":"4. BGP \u534f\u8bae"},{"location":"4-NetworkLayer/4.4/#1-bgp","text":"\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u60c5\u5883\uff1a\u8def\u7531\u5668 3d \u5411\u53f3\u56fe\u4e2d\u6240\u6709\u8def\u7531\u5668\u53d1\u5e03\u5b50\u7f51 x \u7684\u53ef\u8fbe\u6027\u4fe1\u606f\u3002\u5728 BGP \u4e2d\uff0c\u6bcf\u5bf9\u8def\u7531\u5668\u901a\u8fc7 $179$ \u7aef\u53e3\u7684\u534a\u6c38\u4e45 TCP \u8fde\u63a5\u4ea4\u6362\u62a5\u6587\u3002\u6bcf\u4e2a\u8fde\u63a5\u79f0\u4e3a BGP \u8fde\u63a5/\u4f1a\u8bdd\uff1b\u8de8\u8d8a\u4e0d\u540c AS \u7684\u8fde\u63a5\u79f0\u4e3a\u5916\u90e8 BGP ( eBGP ) \u8fde\u63a5\uff0c\u800c AS \u5185\u90e8\u7684\u8fde\u63a5\u79f0\u4e3a\u5185\u90e8 BGP ( iBGP ) \u8fde\u63a5\u3002 \u2003\u901a\u5e38\uff0c\u5728\u8fde\u63a5\u4e0d\u540c AS \u7684\u7f51\u5173\u8def\u7531\u5668\u7684\u94fe\u8def\u4e0a\uff0c\u6709\u4e00\u6761 eBGP \u8fde\u63a5\uff0c\u6bcf\u4e2a AS \u5185\u90e8\u6709\u591a\u6761 iBGP \u8fde\u63a5\uff0c\u4e14 iBGP \u8fde\u63a5\u4e0d\u603b\u662f\u4e0e\u7269\u7406\u94fe\u8def\u76f8\u5bf9\u5e94\u3002 \u2003\u5728\u901a\u544a\u62a5\u6587\u4e2d\uff0c\u6709\u4e24\u4e2a\u91cd\u8981\u5c5e\u6027\uff1a1. AS-PATH \uff0c\u5305\u542b\u901a\u544a\u7ecf\u8fc7\u7684 AS \u5e8f\u5217\uff0c\u8868\u793a\u53ef\u4ee5\u901a\u8fc7 [ASa, ASb, ...] \u5230\u8fbe\u67d0\u4e2a\u5b50\u7f51\uff1b2. NEXT-HOP \uff0c\u6307\u660e\u4e86 AS-PATH \u8d77\u59cb\u7684\u8def\u7531\u5668\u63a5\u53e3\u7684 IP \u3002 BCP \u8def\u7531\u5668\u8fd8\u5229\u7528 AS-PATH \u9632\u6b62\u901a\u544a\u73af\u8def\uff1a\u5982\u679c\u4e00\u53f0\u8def\u7531\u5668\u5728\u8def\u5f84\u5217\u8868\u4e2d\u53d1\u73b0\u81ea\u5df1\u7684 AS \uff0c\u5c31\u62d2\u7edd\u8be5\u901a\u544a\u3002 \u2003\u4ee5\u4e0a\u9762\u7684\u60c5\u5883\u4e3a\u4f8b\uff0c 3a \u9996\u5148\u5411 2c \u53d1\u9001\u4e00\u4e2a eBGP \u62a5\u6587\uff0c\u5176\u5185\u5bb9\u5927\u81f4\u4e3a [AS3, x, 11.11.1.1] \uff0c\u968f\u540e 2c \u5411 AS2 \u4e2d\u5305\u62ec 2a \u5728\u5185\u7684\u6240\u6709\u5176\u4ed6\u8def\u7531\u5668\u53d1\u9001 iBGP \u62a5\u6587\u3002\u5f53\u4e00\u4e2a\u8def\u7531\u5668\u83b7\u5f97\u65b0\u7684\u524d\u7f00\u53ef\u8fbe\u6027\u65f6\uff0c\u5c31\u4f1a\u66f4\u65b0\u5b83\u7684\u8f6c\u53d1\u8868\u3002 2a \u53ef\u4ee5\u901a\u8fc7 eBGP \u8fde\u63a5\u7ee7\u7eed\u4f20\u64ad\u53ef\u8fbe\u6027\u4fe1\u606f\uff0c\u4e5f\u53ef\u80fd\u4e0d\u8fd9\u6837\u505a\u3002","title":"(1). BGP \u8def\u7531\u901a\u544a"},{"location":"4-NetworkLayer/4.4/#2-bgp","text":"\u5f53\u6709\u591a\u6761\u8def\u5f84\u53ef\u4f9b\u9009\u62e9\uff0c BGP \u5e76\u672a\u76f4\u63a5\u91c7\u7528\u81ea\u79c1\u7684\u70ed\u571f\u8c46\u8def\u7531\uff0c\u800c\u662f\u91c7\u7528\u57fa\u4e8e\u7b56\u7565 ( policy-based ) \u7684\u8def\u7531\uff1a \u2003\u2460 \u4f20\u64ad\u8fc7\u6765\u7684\u8def\u5f84\u88ab\u5236\u5b9a\u4e00\u4e2a\u672c\u5730\u504f\u597d ( local preference ) \u503c\u4f5c\u4e3a\u5176\u5c5e\u6027\uff0c\u8fd9\u4e2a\u503c\u5b8c\u5168\u53d6\u51b3\u4e8e\u76f8\u5e94 AS \u7684\u7f51\u7edc\u7ba1\u7406\u5458\u3002 BGP \u5c06\u9996\u5148\u9009\u62e9\u504f\u597d\u503c\u6700\u9ad8\u7684\u8def\u5f84\u3002 \u2003\u2461 \u5982\u679c \u2460 \u76f8\u540c\uff0c\u9009\u62e9\u5177\u6709\u6700\u77ed AS-PATH \u7684\u8def\u7531 (\u4ec5\u4ec5\u662f AS \u7684\u8df3\u6570)\u3002 \u2003\u2462 \u5982\u679c \u2461 \u76f8\u540c\uff0c\u90a3\u4e48 BGP \u5c31\u6839\u636e NEXT-HOP \u548c\u70ed\u571f\u8c46\u8def\u7531\u7b56\u7565\u9009\u62e9\u8def\u5f84\u3002 \u2003\u2463 \u5982\u679c\u4ecd\u5269\u4f59\u591a\u6761\u8def\u7531\uff0c\u6839\u636e BGP \u6807\u8bc6\u7b26\u9009\u62e9\u3002 \u2003 BGP \u5728\u70ed\u571f\u8c46\u8def\u7531\u4e4b\u524d\uff0c\u5229\u7528 AS-PATH \u8fdb\u884c\u4e86\u8fc7\u6ee4\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f88\u53ef\u80fd\u4f1a\u51cf\u5c0f\u7aef\u5230\u7aef\u65f6\u5ef6\u3002 \u2003\u7528\u4e0a\u56fe\u6240\u793a\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e BGP \u7684\u57fa\u4e8e\u7b56\u7565\u7684\u8def\u7531\u3002 A\u3001B\u3001C\u3001W\u3001X\u3001Y \u662f $6$ \u4e2a AS \uff0c\u5176\u4e2d A\u3001B\u3001C \u662f\u63d0\u4f9b\u5546\u7f51\u7edc\uff0c W\u3001X\u3001Y \u662f\u5ba2\u6237\u7f51\u7edc\u3002 \u2003\u2460 \u5c3d\u7ba1 X \u662f\u4e00\u4e2a\u53cc\u5bbf\u63a5\u5165 ISP \uff0c\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u5ba2\u6237\u7f51\u7edc\uff0c\u4e0d\u671f\u5f85\u4f5c\u4e3a\u4e2d\u95f4\u8005\u8f6c\u53d1\u7531 B \u5230 C \u4e4b\u95f4\u7684\u4efb\u4f55\u6d41\u91cf\uff0c\u56e0\u6b64\uff0c\u5b83\u4e0d\u4f1a\u5411 B \u901a\u544a\u4efb\u4f55\u5230\u8fbe\u8d27\u7ecf\u8fc7 C \u7684\u8def\u5f84\uff0c\u4f8b\u5982 X-C-Y \u3002 \u2003\u2461 \u5bf9\u4e8e\u4efb\u4e00\u8fd0\u8425\u5546\u7f51\u7edc\u6765\u8bf4\uff0c\u5b83\u5728\u901a\u544a\u8def\u5f84\u7684\u65f6\u5019\uff0c\u53ea\u4f1a\u6267\u884c\u90a3\u4e9b\u6e90\u6216\u76ee\u7684\u662f\u81ea\u5df1\u7684\u5ba2\u6237\u7684\u901a\u544a\uff0c\u8fd9\u662f\u4e00\u6761\u5546\u4e1a\u4e0a\u7684\u7ecf\u9a8c\u6cd5\u5219\u800c\u975e\u5b98\u65b9\u6807\u51c6\u3002\u4f8b\u5982\uff0c A \u53ef\u80fd\u5411 B \u901a\u544a\u8def\u5f84 A-W \uff0c B \u4e5f\u53ef\u80fd\u5411 X \u901a\u544a\u8def\u5f84 B-A-W \uff0c\u4f46 B \u7edd\u4e0d\u4f1a\u5411 C \u901a\u544a\u8def\u5f84 B-A-W \u3002","title":"(2). BGP \u8def\u7531\u9009\u62e9"},{"location":"5-LinkLayer/5.1/","text":"1. \u57fa\u672c\u672f\u8bed \u2003\u5728\u8fd9\u4e00\u7ae0\uff0c\u5bf9\u4e8e\u8fd0\u884c\u94fe\u8def\u5c42\u534f\u8bae\u7684\u7f51\u7edc\u8bbe\u5907\uff0c\u6211\u4eec\u5747\u79f0\u4e4b\u4e3a\u8282\u70b9 ( node )\uff0c\u5305\u62ec\u4e3b\u673a\u3001\u8def\u7531\u5668\u3001\u4ea4\u6362\u673a\u548c WiFi \u63a5\u5165\u70b9\u3002\u8fde\u63a5\u76f8\u90bb\u8282\u70b9\u7684\u901a\u4fe1\u4fe1\u9053\u79f0\u4e3a\u94fe\u8def ( link )\u3002 2. \u94fe\u8def\u5c42\u670d\u52a1 \u7ec4\u5e27 ( framing )\uff1a\u5728\u7f51\u7edc\u5c42\u6570\u636e\u901a\u8fc7\u94fe\u8def\u4f20\u9001\u4e4b\u524d\uff0c\u5927\u591a\u6570\u94fe\u8def\u5c42\u534f\u8bae\u90fd\u4f1a\u5c06\u5176\u5c01\u88c5\u81f3\u5e27\u4e2d\u3002\u5e27\u7684\u683c\u5f0f\u7531\u94fe\u8def\u5c42\u534f\u8bae\u89c4\u5b9a\u3002 \u94fe\u8def\u63a5\u5165 ( link access )\uff1a\u5f53\u591a\u4e2a\u8282\u70b9\u5171\u4eab\u5355\u4e2a\u5e7f\u64ad\u94fe\u8def\uff0c MAC \u534f\u8bae\u7528\u4e8e\u534f\u8c03\u591a\u4e2a\u8282\u70b9\u4f20\u8f93\u6570\u636e\u5e27\u3002 \u53ef\u9760\u4ea4\u4ed8\uff1a\u94fe\u8def\u5c42\u7684\u53ef\u9760\u4ea4\u4ed8\u901a\u5e38\u4e5f\u7531\u786e\u8ba4\u548c\u91cd\u4f20\u5b9e\u73b0\u3002\u94fe\u8def\u5c42\u7684\u53ef\u9760\u4ea4\u4ed8\u901a\u5e38\u7528\u4e8e\u9ad8\u5dee\u9519\u7387\u7684\u94fe\u8def\uff0c\u4f8b\u5982\u65e0\u7ebf\u94fe\u8def\uff0c\u800c\u4f4e\u5dee\u9519\u7387\u7684\u94fe\u8def\u5219\u89c6\u5176\u4e3a\u989d\u5916\u7684\u5f00\u9500\uff0c\u56e0\u6b64\uff0c\u591a\u6570\u6709\u7ebf\u94fe\u8def\u5c42\u534f\u8bae\u4e0d\u63d0\u4f9b\u53ef\u9760\u4ea4\u4ed8\u3002 \u5dee\u9519\u68c0\u6d4b\u548c\u7ea0\u6b63\uff1a\u7531\u4e8e\u4fe1\u53f7\u8870\u51cf\u548c\u7535\u78c1\u566a\u58f0\u7684\u5b58\u5728\uff0c\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6bd4\u7279\u4f4d\u53ef\u80fd\u7ffb\u8f6c\u3002 3. \u94fe\u8def\u5c42\u5728\u4f55\u5904\u5b9e\u73b0 \u2003\u5728\u8def\u7531\u5668\u4e2d\uff0c\u94fe\u8def\u5c42\u5728\u7ebf\u8def\u5361\u4e2d\u5b9e\u73b0\u3002\u5728\u4e3b\u673a\u4e2d\uff0c\u94fe\u8def\u5c42\u7684\u4e3b\u4f53\u90e8\u5206\u5728\u7f51\u7edc\u9002\u914d\u5668 ( network adapter ) \u4e2d\u5b9e\u73b0\uff0c\u5b83\u4e5f\u88ab\u79f0\u4e3a\u7f51\u7edc\u63a5\u53e3\u5361 ( Network Interface Card, NIC )\uff0c\u4e5f\u5373\u7f51\u5361\u3002\u7f51\u7edc\u9002\u914d\u5668\u7684\u6838\u5fc3\u7ec4\u4ef6\u662f\u94fe\u8def\u5c42\u63a7\u5236\u5668\uff0c\u5b83\u901a\u5e38\u662f\u4e00\u4e2a\u4e13\u7528\u82af\u7247\uff0c\u5b9e\u73b0 (1) \u4e2d\u63d0\u5230\u7684\u529f\u80fd\uff1b\u94fe\u8def\u5c42\u4e2d\u7684\u90e8\u5206\u9ad8\u5c42\u529f\u80fd\u7531\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u5982\u7ec4\u88c5\u94fe\u8def\u5c42\u5bfb\u5740\u4fe1\u606f\u3001\u6fc0\u6d3b\u63a7\u5236\u5668\u786c\u4ef6\u7b49\u3002","title":"1.Introduction to Link Layer"},{"location":"5-LinkLayer/5.1/#1","text":"\u5728\u8fd9\u4e00\u7ae0\uff0c\u5bf9\u4e8e\u8fd0\u884c\u94fe\u8def\u5c42\u534f\u8bae\u7684\u7f51\u7edc\u8bbe\u5907\uff0c\u6211\u4eec\u5747\u79f0\u4e4b\u4e3a\u8282\u70b9 ( node )\uff0c\u5305\u62ec\u4e3b\u673a\u3001\u8def\u7531\u5668\u3001\u4ea4\u6362\u673a\u548c WiFi \u63a5\u5165\u70b9\u3002\u8fde\u63a5\u76f8\u90bb\u8282\u70b9\u7684\u901a\u4fe1\u4fe1\u9053\u79f0\u4e3a\u94fe\u8def ( link )\u3002","title":"1. \u57fa\u672c\u672f\u8bed"},{"location":"5-LinkLayer/5.1/#2","text":"\u7ec4\u5e27 ( framing )\uff1a\u5728\u7f51\u7edc\u5c42\u6570\u636e\u901a\u8fc7\u94fe\u8def\u4f20\u9001\u4e4b\u524d\uff0c\u5927\u591a\u6570\u94fe\u8def\u5c42\u534f\u8bae\u90fd\u4f1a\u5c06\u5176\u5c01\u88c5\u81f3\u5e27\u4e2d\u3002\u5e27\u7684\u683c\u5f0f\u7531\u94fe\u8def\u5c42\u534f\u8bae\u89c4\u5b9a\u3002 \u94fe\u8def\u63a5\u5165 ( link access )\uff1a\u5f53\u591a\u4e2a\u8282\u70b9\u5171\u4eab\u5355\u4e2a\u5e7f\u64ad\u94fe\u8def\uff0c MAC \u534f\u8bae\u7528\u4e8e\u534f\u8c03\u591a\u4e2a\u8282\u70b9\u4f20\u8f93\u6570\u636e\u5e27\u3002 \u53ef\u9760\u4ea4\u4ed8\uff1a\u94fe\u8def\u5c42\u7684\u53ef\u9760\u4ea4\u4ed8\u901a\u5e38\u4e5f\u7531\u786e\u8ba4\u548c\u91cd\u4f20\u5b9e\u73b0\u3002\u94fe\u8def\u5c42\u7684\u53ef\u9760\u4ea4\u4ed8\u901a\u5e38\u7528\u4e8e\u9ad8\u5dee\u9519\u7387\u7684\u94fe\u8def\uff0c\u4f8b\u5982\u65e0\u7ebf\u94fe\u8def\uff0c\u800c\u4f4e\u5dee\u9519\u7387\u7684\u94fe\u8def\u5219\u89c6\u5176\u4e3a\u989d\u5916\u7684\u5f00\u9500\uff0c\u56e0\u6b64\uff0c\u591a\u6570\u6709\u7ebf\u94fe\u8def\u5c42\u534f\u8bae\u4e0d\u63d0\u4f9b\u53ef\u9760\u4ea4\u4ed8\u3002 \u5dee\u9519\u68c0\u6d4b\u548c\u7ea0\u6b63\uff1a\u7531\u4e8e\u4fe1\u53f7\u8870\u51cf\u548c\u7535\u78c1\u566a\u58f0\u7684\u5b58\u5728\uff0c\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6bd4\u7279\u4f4d\u53ef\u80fd\u7ffb\u8f6c\u3002","title":"2. \u94fe\u8def\u5c42\u670d\u52a1"},{"location":"5-LinkLayer/5.1/#3","text":"\u5728\u8def\u7531\u5668\u4e2d\uff0c\u94fe\u8def\u5c42\u5728\u7ebf\u8def\u5361\u4e2d\u5b9e\u73b0\u3002\u5728\u4e3b\u673a\u4e2d\uff0c\u94fe\u8def\u5c42\u7684\u4e3b\u4f53\u90e8\u5206\u5728\u7f51\u7edc\u9002\u914d\u5668 ( network adapter ) \u4e2d\u5b9e\u73b0\uff0c\u5b83\u4e5f\u88ab\u79f0\u4e3a\u7f51\u7edc\u63a5\u53e3\u5361 ( Network Interface Card, NIC )\uff0c\u4e5f\u5373\u7f51\u5361\u3002\u7f51\u7edc\u9002\u914d\u5668\u7684\u6838\u5fc3\u7ec4\u4ef6\u662f\u94fe\u8def\u5c42\u63a7\u5236\u5668\uff0c\u5b83\u901a\u5e38\u662f\u4e00\u4e2a\u4e13\u7528\u82af\u7247\uff0c\u5b9e\u73b0 (1) \u4e2d\u63d0\u5230\u7684\u529f\u80fd\uff1b\u94fe\u8def\u5c42\u4e2d\u7684\u90e8\u5206\u9ad8\u5c42\u529f\u80fd\u7531\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u5982\u7ec4\u88c5\u94fe\u8def\u5c42\u5bfb\u5740\u4fe1\u606f\u3001\u6fc0\u6d3b\u63a7\u5236\u5668\u786c\u4ef6\u7b49\u3002","title":"3. \u94fe\u8def\u5c42\u5728\u4f55\u5904\u5b9e\u73b0"},{"location":"5-LinkLayer/5.2/","text":"1. \u5dee\u9519\u68c0\u6d4b\u4e0e\u7ea0\u6b63 \u2003\u94fe\u8def\u5c42\u63d0\u4f9b\u5dee\u9519\u68c0\u6d4b\u4e0e\u7ea0\u6b63\u670d\u52a1\uff0c\u5176\u57fa\u672c\u539f\u7406\u4e3a\uff1a\u53d1\u9001\u65b9\u901a\u8fc7\u5dee\u9519\u68c0\u6d4b\u7ea0\u6b63\u6bd4\u7279 EDC \u52a0\u5f3a\u6570\u636e D \uff0c\u63a5\u6536\u65b9\u901a\u8fc7\u6536\u5230\u7684\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u7684 EDC' \u548c D' \uff0c\u5224\u65ad D' \u662f\u5426\u4e0e D \u76f8\u540c\u3002 \u2003\u5373\u4fbf\u4f7f\u7528\u4e86 EDC \uff0c\u63a5\u6536\u65b9\u4e5f\u53ef\u80fd\u65e0\u6cd5\u53d1\u73b0\u6bd4\u7279\u7ffb\u8f6c\uff0c\u56e0\u6b64\uff0c\u91c7\u7528\u7684\u68c0\u6d4b\u673a\u5236\u8981\u4f7f\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u6982\u7387\u5c3d\u53ef\u80fd\u5c0f\u3002\u4e00\u822c\u800c\u8a00\uff0c\u5dee\u9519\u68c0\u6d4b\u4e0e\u7ea0\u6b63\u673a\u5236\u8d8a\u590d\u6742\uff0c\u9700\u8981\u7684\u8ba1\u7b97\u5f00\u9500\u4e5f\u5c31\u8d8a\u5927\u3002 \u2003\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u5dee\u9519\u68c0\u6d4b\u6280\u672f\u3002 2. \u5947\u5076\u6821\u9a8c \u2003\u6700\u57fa\u672c\u7684\u5947\u5076\u6821\u9a8c ( Parity Check ) \u53ea\u4f7f\u7528\u4e00\u4e2a\u5947\u5076\u6821\u9a8c\u4f4d\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u8981\u53d1\u9001\u7684\u6570\u636e\u4e3a $d$ \u6bd4\u7279\uff0c\u90a3\u4e48\u5076\u6821\u9a8c\u65b9\u6848\u5c31\u8981\u6c42\u6821\u9a8c\u4f4d\u7684\u53d6\u503c\u53ef\u4ee5\u4f7f\u8fd9 $d+1$ \u4e2a\u6bd4\u7279\u4e2d $1$ \u7684\u4e2a\u6570\u4e3a\u5076\u6570\u3002\u5982\u679c\u51fa\u73b0\u5076\u6570\u4e2a\u4f4d\u7ffb\u8f6c\uff0c\u63a5\u6536\u65b9\u5c31\u65e0\u6cd5\u5b9e\u73b0\u68c0\u9519\u3002\u8fd9\u79cd\u673a\u5236\u53ea\u9002\u7528\u4e8e\u6bd4\u7279\u5dee\u9519\u7387\u5c0f\u3001\u9519\u8bef\u4e4b\u95f4\u72ec\u7acb\u53d1\u751f\u7684\u60c5\u51b5\u3002 \u2003\u5b9e\u9645\u7684\u6d4b\u91cf\u8868\u660e\uff0c\u94fe\u8def\u5c42\u7684\u6bd4\u7279\u5dee\u9519\u5e38\u4ee5\u7a81\u53d1\u5dee\u9519 ( burst error ) \u7684\u5f62\u5f0f\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u7406\u8bba\u4e0a\u7684\u5355\u6bd4\u7279\u6821\u9a8c\u4f4d\u7684\u68c0\u9519\u7387\u53ea\u6709 $50\\%$\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5e76\u672a\u88ab\u5b9e\u9645\u4f7f\u7528\u3002 \u2003\u4e8c\u7ef4\u5947\u5076\u6821\u9a8c\u53ef\u4ee5\u5b9e\u73b0\u5355\u6bd4\u7279\u7ffb\u8f6c\u65f6\u7684\u7ea0\u9519\uff1a\u628a\u6570\u636e\u7684 $d$ \u4e2a\u6bd4\u7279\u5212\u5206\u4e3a $i$ \u884c $j$ \u5217\uff0c\u76f8\u5e94\u5730\u4ea7\u751f\u4e86 $i+j+1$ \u4e2a\u6821\u9a8c\u6bd4\u7279\uff1b\u5982\u679c\u5355\u4e2a\u6bd4\u7279\u53d1\u751f\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7\u884c\u5217\u7d22\u5f15\u5b9a\u4f4d\u5b83\u3002 3. \u6821\u9a8c\u548c\u65b9\u6cd5 \u2003\u5176\u57fa\u672c\u601d\u60f3\u4e3a\u628a\u6570\u636e\u7684 $d$ \u4e2a\u6bd4\u7279\u770b\u6210 $k$ \u6bd4\u7279\u6574\u6570\u7684\u5e8f\u5217\uff0c\u628a\u8fd9\u4e9b\u6570\u6c42\u548c\u4f5c\u4e3a\u5dee\u9519\u68c0\u6d4b\u6bd4\u7279\u3002\u4f8b\u5982 TCP \u548c UDP \u7684\u6821\u9a8c\u548c\u5c31\u901a\u8fc7 $16$ \u6bd4\u7279\u6574\u6570\u6c42\u548c\u53d6\u53cd\u7801\u751f\u6210\u68c0\u6d4b\u6bd4\u7279\u3002 \u2003\u4f20\u8f93\u5c42\u4f7f\u7528\u5f00\u9500\u66f4\u5c0f\u3001\u4fdd\u62a4\u6027\u66f4\u5f31\u7684 $16$ \u6bd4\u7279\u6821\u9a8c\u548c\u4f5c\u4e3a\u68c0\u9519\u673a\u5236\uff0c\u800c\u94fe\u8def\u5c42\u4f7f\u7528\u4e86 CRC \u3002\u5176\u539f\u56e0\u5728\u4e8e\uff0c\u4f20\u8f93\u5c42\u7684\u5dee\u9519\u68c0\u6d4b\u901a\u8fc7\u7528\u6237 OS \u4e2d\u7684\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u9700\u8981\u4e00\u79cd\u7b80\u5355\u800c\u5feb\u901f\u7684\u673a\u5236\uff1b\u800c\u94fe\u8def\u5c42\u901a\u8fc7\u4e13\u7528\u786c\u4ef6\u5b9e\u73b0\uff0c\u80fd\u591f\u6267\u884c\u66f4\u5feb\u66f4\u590d\u6742\u7684 CRC \u3002 4. \u5faa\u73af\u5197\u4f59\u6821\u9a8c \u2003\u5faa\u73af\u5197\u4f59\u6821\u9a8c ( Cyclic Redundancy Check, CRC ) \u7f16\u7801\u5728\u73b0\u4eca\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u5b83\u53c8\u79f0\u591a\u9879\u5f0f\u7f16\u7801\u3002\u5176\u57fa\u672c\u601d\u60f3\u5982\u4e0b\u3002 \u2003\u8bbe\u8981\u53d1\u9001\u7684\u6570\u636e $D$ \u6709 $d$ \u4e2a\u6bd4\u7279\uff0c\u7528\u4e8e\u68c0\u9519\u7684 CRC \u6bd4\u7279 $R$ \u6709 $r$ \u4e2a\u6bd4\u7279\u3002\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u8981\u534f\u5546\u4e00\u4e2a\u751f\u6210\u591a\u9879\u5f0f ( generator )\uff0c\u8bb0\u4e3a $G$\uff1a \u2002\u2460 $G$ \u6709 $r+1$ \u4e2a\u6bd4\u7279\uff0c\u4e14\u5de6\u6570\u7b2c\u4e00\u4f4d\u4e3a $1$\uff1b \u2002\u2461 $d+r$ \u4e2a\u6bd4\u7279\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u5728\u6a21 $2$ \u8fd0\u7b97\u4e0b\u53ef\u4ee5\u6574\u9664 $G$\u3002 \u76f8\u5e94\u5730\uff0c\u63a5\u6536\u65b9\u901a\u8fc7\u5224\u65ad $D\\cdot 2^r+R$ \u9664\u4ee5 $G$ \u7684\u4f59\u6570\u662f\u5426\u5168 $0$ \u8fdb\u884c\u68c0\u9519\u3002 \u2003\u6240\u6709\u7684 CRC \u8ba1\u7b97\u90fd\u4f7f\u7528\u6a21 $2$ \u8fd0\u7b97\uff0c\u5728\u52a0\u6cd5\u4e2d\u4e0d\u8fdb\u4f4d\u3001\u5728\u51cf\u6cd5\u4e2d\u4e0d\u501f\u4f4d\uff0c\u5373\u52a0\u6cd5\u548c\u51cf\u6cd5\u90fd\u4e0e $xor$ \u8fd0\u7b97\u7b49\u4ef7\u3002\u56e0\u6b64\u6709\uff1a$D\\cdot 2^r\\ xor\\ R=nG$\u3002\u7531\u4e8e $G$ \u53ea\u6bd4 $R$ \u591a $1$ \u4e2a\u6bd4\u7279\uff0c$n$ \u7684\u503c\u4e5f\u662f\u786e\u5b9a\u7684\uff0c$nG$ \u53ea\u6709\u540e $r$ \u4f4d\u4e0e $D$ \u4e0d\u540c\uff0c\u56e0\u6b64\uff0c$R$ \u53ef\u4ee5\u901a\u8fc7 $R=remainder (D\\cdot 2^r/G)$ \u6c42\u5f97\u3002 \u2003\u56fd\u9645\u6807\u51c6\u5b9a\u4e49\u4e86 $8$\u3001$12$\u3001$16$ \u548c $32$ \u6bd4\u7279\u751f\u6210\u591a\u9879\u5f0f $G$\uff0c\u6bcf\u4e2a\u6807\u51c6\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5c0f\u4e8e $r+1$ \u6bd4\u7279\u7684\u7a81\u53d1\u5dee\u9519 (\u8fde\u7eed\u7684 $r$ \u6bd4\u7279\u6216\u66f4\u5c11\u7684\u5dee\u9519)\u3002\u5728\u9002\u5f53\u7684\u5047\u8bbe\u4e0b\uff0c\u957f\u5ea6\u5927\u4e8e $r+1$ \u6bd4\u7279\u7684\u7a81\u53d1\u5dee\u9519\u88ab\u68c0\u6d4b\u7684\u6982\u7387\u4e3a $1-0.5^r$\u3002","title":"2.Error Detection and Correction"},{"location":"5-LinkLayer/5.2/#1","text":"\u94fe\u8def\u5c42\u63d0\u4f9b\u5dee\u9519\u68c0\u6d4b\u4e0e\u7ea0\u6b63\u670d\u52a1\uff0c\u5176\u57fa\u672c\u539f\u7406\u4e3a\uff1a\u53d1\u9001\u65b9\u901a\u8fc7\u5dee\u9519\u68c0\u6d4b\u7ea0\u6b63\u6bd4\u7279 EDC \u52a0\u5f3a\u6570\u636e D \uff0c\u63a5\u6536\u65b9\u901a\u8fc7\u6536\u5230\u7684\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u7684 EDC' \u548c D' \uff0c\u5224\u65ad D' \u662f\u5426\u4e0e D \u76f8\u540c\u3002 \u2003\u5373\u4fbf\u4f7f\u7528\u4e86 EDC \uff0c\u63a5\u6536\u65b9\u4e5f\u53ef\u80fd\u65e0\u6cd5\u53d1\u73b0\u6bd4\u7279\u7ffb\u8f6c\uff0c\u56e0\u6b64\uff0c\u91c7\u7528\u7684\u68c0\u6d4b\u673a\u5236\u8981\u4f7f\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u6982\u7387\u5c3d\u53ef\u80fd\u5c0f\u3002\u4e00\u822c\u800c\u8a00\uff0c\u5dee\u9519\u68c0\u6d4b\u4e0e\u7ea0\u6b63\u673a\u5236\u8d8a\u590d\u6742\uff0c\u9700\u8981\u7684\u8ba1\u7b97\u5f00\u9500\u4e5f\u5c31\u8d8a\u5927\u3002 \u2003\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u5dee\u9519\u68c0\u6d4b\u6280\u672f\u3002","title":"1. \u5dee\u9519\u68c0\u6d4b\u4e0e\u7ea0\u6b63"},{"location":"5-LinkLayer/5.2/#2","text":"\u6700\u57fa\u672c\u7684\u5947\u5076\u6821\u9a8c ( Parity Check ) \u53ea\u4f7f\u7528\u4e00\u4e2a\u5947\u5076\u6821\u9a8c\u4f4d\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u8981\u53d1\u9001\u7684\u6570\u636e\u4e3a $d$ \u6bd4\u7279\uff0c\u90a3\u4e48\u5076\u6821\u9a8c\u65b9\u6848\u5c31\u8981\u6c42\u6821\u9a8c\u4f4d\u7684\u53d6\u503c\u53ef\u4ee5\u4f7f\u8fd9 $d+1$ \u4e2a\u6bd4\u7279\u4e2d $1$ \u7684\u4e2a\u6570\u4e3a\u5076\u6570\u3002\u5982\u679c\u51fa\u73b0\u5076\u6570\u4e2a\u4f4d\u7ffb\u8f6c\uff0c\u63a5\u6536\u65b9\u5c31\u65e0\u6cd5\u5b9e\u73b0\u68c0\u9519\u3002\u8fd9\u79cd\u673a\u5236\u53ea\u9002\u7528\u4e8e\u6bd4\u7279\u5dee\u9519\u7387\u5c0f\u3001\u9519\u8bef\u4e4b\u95f4\u72ec\u7acb\u53d1\u751f\u7684\u60c5\u51b5\u3002 \u2003\u5b9e\u9645\u7684\u6d4b\u91cf\u8868\u660e\uff0c\u94fe\u8def\u5c42\u7684\u6bd4\u7279\u5dee\u9519\u5e38\u4ee5\u7a81\u53d1\u5dee\u9519 ( burst error ) \u7684\u5f62\u5f0f\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u7406\u8bba\u4e0a\u7684\u5355\u6bd4\u7279\u6821\u9a8c\u4f4d\u7684\u68c0\u9519\u7387\u53ea\u6709 $50\\%$\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5e76\u672a\u88ab\u5b9e\u9645\u4f7f\u7528\u3002 \u2003\u4e8c\u7ef4\u5947\u5076\u6821\u9a8c\u53ef\u4ee5\u5b9e\u73b0\u5355\u6bd4\u7279\u7ffb\u8f6c\u65f6\u7684\u7ea0\u9519\uff1a\u628a\u6570\u636e\u7684 $d$ \u4e2a\u6bd4\u7279\u5212\u5206\u4e3a $i$ \u884c $j$ \u5217\uff0c\u76f8\u5e94\u5730\u4ea7\u751f\u4e86 $i+j+1$ \u4e2a\u6821\u9a8c\u6bd4\u7279\uff1b\u5982\u679c\u5355\u4e2a\u6bd4\u7279\u53d1\u751f\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7\u884c\u5217\u7d22\u5f15\u5b9a\u4f4d\u5b83\u3002","title":"2. \u5947\u5076\u6821\u9a8c"},{"location":"5-LinkLayer/5.2/#3","text":"\u5176\u57fa\u672c\u601d\u60f3\u4e3a\u628a\u6570\u636e\u7684 $d$ \u4e2a\u6bd4\u7279\u770b\u6210 $k$ \u6bd4\u7279\u6574\u6570\u7684\u5e8f\u5217\uff0c\u628a\u8fd9\u4e9b\u6570\u6c42\u548c\u4f5c\u4e3a\u5dee\u9519\u68c0\u6d4b\u6bd4\u7279\u3002\u4f8b\u5982 TCP \u548c UDP \u7684\u6821\u9a8c\u548c\u5c31\u901a\u8fc7 $16$ \u6bd4\u7279\u6574\u6570\u6c42\u548c\u53d6\u53cd\u7801\u751f\u6210\u68c0\u6d4b\u6bd4\u7279\u3002 \u2003\u4f20\u8f93\u5c42\u4f7f\u7528\u5f00\u9500\u66f4\u5c0f\u3001\u4fdd\u62a4\u6027\u66f4\u5f31\u7684 $16$ \u6bd4\u7279\u6821\u9a8c\u548c\u4f5c\u4e3a\u68c0\u9519\u673a\u5236\uff0c\u800c\u94fe\u8def\u5c42\u4f7f\u7528\u4e86 CRC \u3002\u5176\u539f\u56e0\u5728\u4e8e\uff0c\u4f20\u8f93\u5c42\u7684\u5dee\u9519\u68c0\u6d4b\u901a\u8fc7\u7528\u6237 OS \u4e2d\u7684\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u9700\u8981\u4e00\u79cd\u7b80\u5355\u800c\u5feb\u901f\u7684\u673a\u5236\uff1b\u800c\u94fe\u8def\u5c42\u901a\u8fc7\u4e13\u7528\u786c\u4ef6\u5b9e\u73b0\uff0c\u80fd\u591f\u6267\u884c\u66f4\u5feb\u66f4\u590d\u6742\u7684 CRC \u3002","title":"3. \u6821\u9a8c\u548c\u65b9\u6cd5"},{"location":"5-LinkLayer/5.2/#4","text":"\u5faa\u73af\u5197\u4f59\u6821\u9a8c ( Cyclic Redundancy Check, CRC ) \u7f16\u7801\u5728\u73b0\u4eca\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u5b83\u53c8\u79f0\u591a\u9879\u5f0f\u7f16\u7801\u3002\u5176\u57fa\u672c\u601d\u60f3\u5982\u4e0b\u3002 \u2003\u8bbe\u8981\u53d1\u9001\u7684\u6570\u636e $D$ \u6709 $d$ \u4e2a\u6bd4\u7279\uff0c\u7528\u4e8e\u68c0\u9519\u7684 CRC \u6bd4\u7279 $R$ \u6709 $r$ \u4e2a\u6bd4\u7279\u3002\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u8981\u534f\u5546\u4e00\u4e2a\u751f\u6210\u591a\u9879\u5f0f ( generator )\uff0c\u8bb0\u4e3a $G$\uff1a \u2002\u2460 $G$ \u6709 $r+1$ \u4e2a\u6bd4\u7279\uff0c\u4e14\u5de6\u6570\u7b2c\u4e00\u4f4d\u4e3a $1$\uff1b \u2002\u2461 $d+r$ \u4e2a\u6bd4\u7279\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u5728\u6a21 $2$ \u8fd0\u7b97\u4e0b\u53ef\u4ee5\u6574\u9664 $G$\u3002 \u76f8\u5e94\u5730\uff0c\u63a5\u6536\u65b9\u901a\u8fc7\u5224\u65ad $D\\cdot 2^r+R$ \u9664\u4ee5 $G$ \u7684\u4f59\u6570\u662f\u5426\u5168 $0$ \u8fdb\u884c\u68c0\u9519\u3002 \u2003\u6240\u6709\u7684 CRC \u8ba1\u7b97\u90fd\u4f7f\u7528\u6a21 $2$ \u8fd0\u7b97\uff0c\u5728\u52a0\u6cd5\u4e2d\u4e0d\u8fdb\u4f4d\u3001\u5728\u51cf\u6cd5\u4e2d\u4e0d\u501f\u4f4d\uff0c\u5373\u52a0\u6cd5\u548c\u51cf\u6cd5\u90fd\u4e0e $xor$ \u8fd0\u7b97\u7b49\u4ef7\u3002\u56e0\u6b64\u6709\uff1a$D\\cdot 2^r\\ xor\\ R=nG$\u3002\u7531\u4e8e $G$ \u53ea\u6bd4 $R$ \u591a $1$ \u4e2a\u6bd4\u7279\uff0c$n$ \u7684\u503c\u4e5f\u662f\u786e\u5b9a\u7684\uff0c$nG$ \u53ea\u6709\u540e $r$ \u4f4d\u4e0e $D$ \u4e0d\u540c\uff0c\u56e0\u6b64\uff0c$R$ \u53ef\u4ee5\u901a\u8fc7 $R=remainder (D\\cdot 2^r/G)$ \u6c42\u5f97\u3002 \u2003\u56fd\u9645\u6807\u51c6\u5b9a\u4e49\u4e86 $8$\u3001$12$\u3001$16$ \u548c $32$ \u6bd4\u7279\u751f\u6210\u591a\u9879\u5f0f $G$\uff0c\u6bcf\u4e2a\u6807\u51c6\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5c0f\u4e8e $r+1$ \u6bd4\u7279\u7684\u7a81\u53d1\u5dee\u9519 (\u8fde\u7eed\u7684 $r$ \u6bd4\u7279\u6216\u66f4\u5c11\u7684\u5dee\u9519)\u3002\u5728\u9002\u5f53\u7684\u5047\u8bbe\u4e0b\uff0c\u957f\u5ea6\u5927\u4e8e $r+1$ \u6bd4\u7279\u7684\u7a81\u53d1\u5dee\u9519\u88ab\u68c0\u6d4b\u7684\u6982\u7387\u4e3a $1-0.5^r$\u3002","title":"4. \u5faa\u73af\u5197\u4f59\u6821\u9a8c"},{"location":"5-LinkLayer/5.3/","text":"1. \u591a\u8def\u8bbf\u95ee\u534f\u8bae\u6982\u8ff0 (1). \u7f51\u7edc\u94fe\u8def \u2003\u672c\u7ae0\u4e3b\u8981\u6d89\u53ca\u4e24\u79cd\u7f51\u7edc\u94fe\u8def\u3002 \u2003\u70b9\u5bf9\u70b9\u94fe\u8def ( point-to-point link ) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP \u3001 HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u2003\u5e7f\u64ad\u94fe\u8def ( broadcast link ) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 (2). \u591a\u8def\u8bbf\u95ee\u95ee\u9898 \u2003\u591a\u8def\u8bbf\u95ee\u95ee\u9898\u5373\u4e3a\u5982\u4f55\u534f\u8c03\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u5bf9\u4e00\u4e2a\u5171\u4eab\u5e7f\u64ad\u94fe\u8def\u7684\u8bbf\u95ee\uff0c\u5b83\u5bf9\u94fe\u8def\u5c42\u6765\u8bf4\u5341\u5206\u91cd\u8981\u3002\u5176\u5173\u952e\u5728\u4e8e\uff0c\u5f53\u591a\u4e2a\u8282\u70b9\u540c\u65f6\u4f20\u8f93\u5e27\u7684\u65f6\u5019\uff0c\u6240\u6709\u8282\u70b9\u540c\u65f6\u63a5\u6536\u5230\u591a\u4e2a\u5e27\uff0c\u5e27\u4e0e\u5e27\u4e4b\u95f4\u53d1\u751f\u4e86\u51b2\u7a81 ( collide )\uff0c\u6240\u6709\u6d89\u53ca\u51b2\u7a81\u7684\u5e27\u90fd\u4f1a\u56e0\u4e3a\u4fe1\u53f7\u7ea0\u7f20\u800c\u4e22\u5931\uff0c\u56e0\u6b64\u800c\u5bfc\u81f4\u4e86\u4fe1\u9053\u88ab\u6d6a\u8d39\u3002 \u2003\u5f53\u591a\u4e2a\u8282\u70b9\u4fdd\u6301\u6d3b\u8dc3\u72b6\u6001\uff0c\u591a\u8def\u8bbf\u95ee\u63a7\u5236 ( mutiple access control ) \u534f\u8bae\u8d1f\u8d23\u534f\u8c03\u6d3b\u8dc3\u8282\u70b9\u4e4b\u95f4\u7684\u4f20\u8f93\u3002\u8fd1\u5e74\u6765\uff0c\u5df2\u6709\u51e0\u5341\u79cd MAC \u88ab\u5b9e\u73b0\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u4e09\u7c7b\uff1a\u4fe1\u9053\u5212\u5206\u534f\u8bae ( channel partioning )\u3001\u968f\u673a\u8bbf\u95ee\u534f\u8bae ( random access )\u3001\u8f6e\u6d41\u534f\u8bae ( taking-turns )\u3002 \u2003\u5bf9\u4e8e\u5e26\u5bbd\u4e3a $R$ bps \u7684\u5e7f\u64ad\u94fe\u8def\uff0c\u7406\u60f3\u7684 MAC \u534f\u8bae\u5e94\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a \u2003\u2460 \u5f53\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u53d1\u9001\u6570\u636e\uff0c\u5176\u541e\u5410\u91cf\u4e3a $R$ bps \uff1b \u2003\u2461 \u5f53\u6709 $M$ \u4e2a\u8282\u70b9\u53d1\u9001\u6570\u636e\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u541e\u5410\u91cf\u4e3a $R/M$ bps (\u5e73\u5747\u4f20\u8f93\u901f\u7387)\uff1b \u2003\u2462 \u534f\u8bae\u662f\u5206\u6563\u7684\uff1a\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u4e2a\u8282\u70b9\u7684\u5d29\u6e83\u800c\u5d29\u6e83\uff1b \u2003\u2463 \u534f\u8bae\u7684\u5b9e\u73b0\u7b80\u5355\u3002 2. \u4fe1\u9053\u5212\u5206\u534f\u8bae \u2003\u5212\u5206\u5e7f\u64ad\u4fe1\u9053\u5e26\u5bbd\u901a\u8fc7\u591a\u8def\u590d\u7528\u6280\u672f\u5b9e\u73b0\u3002\u5f53\u7f51\u8def\u8d1f\u8f7d\u8f83\u91cd\u65f6\uff0c\u4fe1\u9053\u5212\u5206\u534f\u8bae\u6548\u7387\u8f83\u9ad8\uff1b\u800c\u5f53\u8d1f\u8f7d\u8f83\u8f7b\u65f6\uff0c\u6548\u7387\u8f83\u4f4e\u3002 (1). TDM \u2003 TDM \u5c06\u65f6\u95f4\u5212\u5206\u4e3a\u65f6\u95f4\u5e27 ( time frame )\uff0c\u5e76\u628a\u6bcf\u4e2a\u65f6\u95f4\u5e27\u5212\u5206\u4e3a $N$ \u4e2a\u65f6\u9699 ( slot )\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u65f6\u9699\u5206\u7ed9 $N$ \u4e2a\u8282\u70b9\u4e2d\u7684\u4e00\u4e2a\u3002\u65f6\u9699\u957f\u5ea6\u901a\u5e38\u53ef\u4ee5\u4f7f\u4e00\u4e2a\u8282\u70b9\u53d1\u5b8c\u4e00\u4e2a\u94fe\u8def\u5c42\u5e27\u3002 \u2003 TDM \u907f\u514d\u4e86\u51b2\u7a81\uff0c\u4e14\u5341\u5206\u516c\u5e73\uff0c\u6bcf\u4e2a\u8282\u70b9\u5728\u6bcf\u4e2a\u5e27\u5185\u7684\u5e73\u5747\u4f20\u8f93\u901f\u7387\u4e3a $R/N$ bps \uff1b\u4f46\u6bcf\u4e2a\u8282\u70b9\u6700\u5927\u5e73\u5747\u901f\u7387\u4e3a $R/N$ bps \uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5360\u7528\u7279\u5b9a\u65f6\u9699\uff0c\u5f53\u53d1\u9001\u8282\u70b9\u5f88\u5c11\u65f6\u4fe1\u9053\u8d44\u6e90\u4e0d\u80fd\u5f97\u5230\u5145\u5206\u5229\u7528\u3002 (2). FDM \u2003 FDM \u5c06 $R$ bps \u4fe1\u9053\u5212\u5206\u4e3a\u4e0d\u540c\u9891\u6bb5\uff0c\u5e76\u672a\u6bcf\u4e2a\u8282\u70b9\u5206\u914d\u4e00\u4e2a\u9891\u7387\uff0c\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e86 $N$ \u4e2a\u5e76\u884c\u7684 $R/N$ bps \u7684\u4fe1\u9053\u3002 FDM \u7684\u4f18\u7f3a\u70b9\u4e0e TDM \u7c7b\u4f3c\u3002 3. \u968f\u673a\u8bbf\u95ee\u534f\u8bae \u2003\u5728\u968f\u673a\u8bbf\u95ee\u534f\u8bae\u4e2d\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u8981\u53d1\u9001\u5206\u7ec4\u65f6\uff0c\u5229\u7528\u4fe1\u9053\u5168\u90e8\u5e26\u5bbd $R$\u3002\u5f53\u591a\u4e2a\u8282\u70b9\u540c\u65f6\u4f20\u8f93\u5f15\u8d77\u51b2\u7a81\uff0c\u968f\u673a\u8bbf\u95ee MAC \u534f\u8bae\u9700\u8981\u5b9a\u4e49\uff1a\u2460 \u5982\u4f55\u68c0\u6d4b\u51b2\u7a81\uff0c\u5982\u8d85\u65f6\uff1b\u2461 \u5982\u4f55\u4ece\u51b2\u7a81\u4e2d\u6062\u590d\uff0c\u5982\u91cd\u4f20\u3002 \u2003\u7531\u4e8e\u51b2\u7a81\u7684\u5b58\u5728\uff0c\u968f\u673a\u8bbf\u95ee\u534f\u8bae\u4e0e\u4fe1\u9053\u5212\u5206\u534f\u8bae\u6b63\u76f8\u53cd\uff0c\u9002\u7528\u4e8e\u7f51\u7edc\u8d1f\u8f7d\u8f83\u8f7b\u7684\u60c5\u51b5\u3002 (1). \u65f6\u9699 ALOHA \u534f\u8bae \u2003\u65f6\u9699 ALOHA \u534f\u8bae\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a \u6240\u6709\u5e27\u5927\u5c0f\u76f8\u7b49\uff0c\u4e3a $L$ bit \uff0c\u5e76\u4e14\u65f6\u95f4\u88ab\u5212\u5206\u4e3a\u7b49\u957f\u7684 $L/R$ \u79d2\u7684\u65f6\u9699 \u8282\u70b9\u53ea\u5728\u65f6\u9699\u8d77\u70b9\u4f20\u8f93\u5e27\uff0c\u4e14\u8282\u70b9\u4e4b\u95f4\u662f\u540c\u6b65\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u77e5\u9053\u65f6\u9699\u4f55\u65f6\u5f00\u59cb \u5982\u679c\u4e00\u4e2a\u65f6\u9699\u5185\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u6240\u6709\u8282\u70b9\u5728\u65f6\u9699\u7ed3\u675f\u524d\u53ef\u4ee5\u68c0\u6d4b\u5230\u8be5\u51b2\u7a81 \u2003\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u65f6\u9699 ALOHA \u7684\u64cd\u4f5c\uff1a \u5f53\u8282\u70b9\u6709\u4e00\u4e2a\u65b0\u5e27\u8981\u53d1\u9001\uff0c\u5b83\u7b49\u5f85\u4e0b\u4e00\u4e2a\u65f6\u9699\u5f00\u59cb\u4f20\u8f93\u8be5\u5e27 \u5982\u679c\u672a\u53d1\u751f\u51b2\u7a81\uff0c\u8282\u70b9\u65e0\u9700\u8003\u8651\u91cd\u4f20\uff1b\u5982\u679c\u51b2\u7a81\u53d1\u751f\uff0c\u8282\u70b9\u5728\u65f6\u9699\u7ed3\u675f\u524d\u68c0\u6d4b\u5230\u51b2\u7a81\uff0c\u5e76\u4ee5\u6982\u7387 $p$ \u5728\u540e\u7eed\u7684\u65f6\u9699\u4e2d\u91cd\u65b0\u53d1\u9001\u8be5\u5e27\uff0c\u76f4\u5230\u65e0\u51b2\u7a81\u53d1\u9001\u4e3a\u6b62\u3002 \u2003\u65f6\u9699 ALOHA \u7684\u4f18\u70b9\u662f\u9ad8\u5ea6\u5206\u6563\uff0c\u8282\u70b9\u4e4b\u95f4\u53ea\u9700\u540c\u6b65\u65f6\u9699\uff1b\u5728\u5355\u53d1\u9001\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\u5168\u90e8\u5e26\u5bbd\u90fd\u53ef\u4ee5\u88ab\u5360\u7528\uff1b\u5b9e\u73b0\u8db3\u591f\u7b80\u5355\u3002 \u2003\u4f46\u5728\u591a\u8282\u70b9\u4f20\u9001\u7684\u60c5\u51b5\u4e0b\uff0c\u65f6\u9699 ALOHA \u6548\u7387\u8f83\u4f4e\u3002\u5b9a\u4e49\u7a7a\u95f2\u65f6\u9699\u548c\u51b2\u7a81\u65f6\u9699\u4e3a\u88ab\u6d6a\u8d39\u6389\u7684\u65f6\u9699\uff0c\u5355\u8282\u70b9\u4f20\u8f93\u7684\u65f6\u9699\u4e3a\u6210\u529f\u65f6\u9699\uff0c\u65f6\u9699 ALOHA \u7684\u6548\u7387\u4e3a\uff1a\u5f53\u8282\u70b9\u6570\u5f88\u591a\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5927\u91cf\u7684\u5e27\u8981\u4f20\u8f93\u65f6\uff0c\u6210\u529f\u65f6\u9699\u6240\u5360\u7684\u6bd4\u4f8b\u3002\u7ed9\u5b9a\u8282\u70b9\u6570 $N$\u3001\u6982\u7387 $p$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65f6\u9699\u6765\u8bf4\uff0c\u5b83\u662f\u6210\u529f\u65f6\u9699\u7684\u6982\u7387\u4e3a $Np\\cdot (1-p)^{N-1}$\uff0c\u4e5f\u5373\u6548\u7387\u3002\u5f53 $N\\rightarrow \\infty$\u3001$p=p^*$\uff0c\u65f6\u9699 ALOHA \u53d6\u5f97\u7684\u6700\u5927\u6548\u7387\u4e3a $1/e\\approx0.37$ (\u7a7a\u95f2\u65f6\u9699: $0.37$\u3001\u51b2\u7a81\u65f6\u9699: $0.26$) \uff0c\u6240\u4ee5\u5171\u4eab\u4fe1\u9053\u7684\u6709\u6548\u4f20\u8f93\u901f\u7387\u4e3a $0.37R$ bps \u3002 (2). ALOHA \u534f\u8bae \u2003\u53c8\u79f0\u7eaf ALOHA \u534f\u8bae\u3001\u975e\u65f6\u9699 ALOHA \u534f\u8bae\u3002\u5b83\u4e0e\u65f6\u9699 ALOHA \u534f\u8bae\u7684\u533a\u522b\u662f\u4e0d\u5212\u5206\u65f6\u9699\uff0c\u8282\u70b9\u4e4b\u95f4\u65e0\u9700\u540c\u6b65\uff0c\u5f53\u6709\u65b0\u7684\u5e27\u751f\u6210\uff0c\u8282\u70b9\u7acb\u5373\u5c06\u5176\u53d1\u9001\u3002 \u2003\u7eaf ALOHA \u534f\u8bae\u53d1\u751f\u51b2\u7a81\u7684\u53ef\u80fd\u6027\u66f4\u5927\u3002\u4ee4 $u=L/R$\uff0c\u5047\u8bbe\u67d0\u8282\u70b9\u5728 $t_0$ \u65f6\u523b\u53d1\u9001\u6570\u636e\uff0c\u5bf9\u4e8e\u65f6\u9699 ALOHA \u534f\u8bae\uff0c\u5176\u6613\u635f\u65f6\u95f4\u533a\u4ec5\u4e3a\u65f6\u9699 $[t_0, t_0+u]$\uff1b\u800c\u7eaf ALOHA \u534f\u8bae\u4e3a $[t_0-u,t_0+u]$\uff0c\u56e0\u6b64\u4e00\u4e2a\u8282\u70b9\u6210\u529f\u53d1\u9001\u7684\u6982\u7387\u4e3a $p(1-p)^{2(N-1)}$\uff0c\u5f53 $N\\rightarrow \\infty$\u3001$p=p^*$\uff0c\u7eaf ALOHA \u7684\u6700\u5927\u6548\u7387\u4e3a $1/2e\\approx 0.18$\u3002 (3). CSMA \u534f\u8bae \u2003\u8f7d\u6ce2\u76d1\u542c\u591a\u8def\u8bbf\u95ee ( Carrier Sense Multiple Access, CSMA ) \u534f\u8bae\u65cf\u6539\u8fdb\u4e86 ALOHA \u534f\u8bae\u65cf\u7684\u7f3a\u70b9\uff0c\u5728\u53d1\u9001\u5e27\u4e4b\u524d\uff0c CSMA \u76d1\u542c\u4fe1\u9053 (\u8f7d\u6ce2)\uff1a\u5982\u679c\u4fe1\u9053\u7a7a\u95f2\uff0c\u5c31\u53d1\u9001\u5b8c\u6574\u5e27\uff0c\u5426\u5219\u63a8\u8fdf\u53d1\u9001\u3002 CSMA \u6709\u4ee5\u4e0b\u63a8\u8fdf\u7b56\u7565\uff1a $1$-\u575a\u6301 CSMA \u975e\u575a\u6301 CSMA $p$-\u575a\u6301 CSMA \u2003\u5373\u4f7f\u4f7f\u7528\u76d1\u542c\u673a\u5236\uff0c\u51b2\u7a81\u4ecd\u6709\u53ef\u80fd\u53d1\u751f\u3002\u4ee5\u4e0b\u9762\u7684\u65f6\u7a7a\u56fe\u4e3a\u4f8b\uff0c$t_0$ \u65f6\u8282\u70b9 B \u76d1\u542c\u5230\u4fe1\u9053\u662f\u7a7a\u95f2\u7684\uff0c\u53d1\u9001\u4e00\u4e2a\u5e27\uff1b$t_1$ \u65f6\uff0c\u5c3d\u7ba1\u4fe1\u9053\u5df2\u88ab\u5360\u7528\uff0c\u7531\u4e8e\u7aef\u5230\u7aef\u4fe1\u9053\u4f20\u64ad\u65f6\u5ef6\u7684\u5b58\u5728\uff0c D \u5e76\u4e0d\u80fd\u68c0\u6d4b\u5230\u4fe1\u9053\u5df2\u88ab\u5360\u7528\uff0c\u56e0\u6b64\u4e5f\u4f1a\u53d1\u9001\u4e00\u4e2a\u5e27\u3002 \u2003\u5bf9\u4e8e CSMA \uff0c\u5373\u4f7f\u968f\u540e B \u548c D \u5df2\u7ecf\u53d1\u73b0\u4e86\u51b2\u7a81\uff0c\u5b83\u4eec\u4e5f\u4f1a\u628a\u76f8\u5e94\u7684\u5e27\u5b8c\u6574\u53d1\u9001\uff1b\u5bf9\u4e8e\u5177\u6709\u51b2\u7a81\u68c0\u6d4b\u7684 CSMA ( CSMA/CD ) 1 \uff0c\u5728\u53d1\u73b0\u51b2\u7a81\u540e\u4f1a\u7acb\u523b\u505c\u6b62\u53d1\u9001\uff0c\u51cf\u5c11\u5bf9\u4fe1\u9053\u8d44\u6e90\u7684\u6d6a\u8d39\u3002\u5728\u786e\u8ba4\u4f20\u8f93\u5931\u8d25\u540e\uff0c\u53d1\u9001\u8282\u70b9\u4f1a\u7b49\u5f85\u4e00\u4e2a\u968f\u673a\u65f6\u95f4\u91cf\uff0c\u7136\u540e\u91cd\u65b0\u53d1\u9001\u3002 \u2003 CSMA/CD \u5728\u6b64\u60c5\u51b5\u4e0b\u7684\u7684\u51b2\u7a81\u68c0\u6d4b\u5728\u6709\u9650\u5c40\u57df\u7f51\u4e0b\u76f8\u5bf9\u5bb9\u6613\u5b9e\u73b0\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u68c0\u6d4b\u5230\u7684\u4fe1\u53f7\u5f3a\u5ea6\u662f\u5426\u5927\u4e8e\u53d1\u9001\u4fe1\u53f7\u7684\u6700\u5927\u5f3a\u5ea6\u5b9e\u73b0\uff1b\u5bf9\u4e8e\u65e0\u7ebf\u5c40\u57df\u7f51\uff0c\u5b9e\u73b0\u5341\u5206\u56f0\u96be\uff0c\u56e0\u4e3a\u4fe1\u53f7\u5f3a\u5ea6\u968f\u8ddd\u79bb\u8870\u51cf\u8f83\u5feb\uff0c\u56e0\u6b64\u5728\u65e0\u7ebf\u7f51\u4e2d\u8f83\u5c11\u4f7f\u7528\u3002 \u2003\u4e3a\u4fdd\u8bc1\u53ef\u9760\u6027\uff0c CSMA/CD \u5fc5\u987b\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u5728\u4f20\u8f93\u5ef6\u8fdf\u5185\u53ef\u4ee5\u68c0\u6d4b\u5230\u5df2\u5b58\u5728\u7684\u51b2\u7a81\u3002\u5982\u679c\u4f20\u8f93\u7684\u8fc7\u5feb\u6216\u4f20\u64ad\u5ef6\u8fdf\u8fc7\u957f\uff0c\u5747\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u68c0\u6d4b\u5230\u3002\u5047\u8bbe\u7f51\u7edc\u5e26\u5bbd $R$ bps \uff0c\u6570\u636e\u5e27\u6700\u5c0f\u957f\u5ea6\u4e3a $L_{min}$ bits \uff0c\u4fe1\u53f7\u4f20\u64ad\u901f\u5ea6\u4e3a $V$ m/s \uff0c\u8003\u8651\u5982\u4e0a\u56fe\u6240\u793a\u7684\u4e34\u754c\u60c5\u51b5\uff1a$AD=d_{max}$ \u4e3a\u6700\u957f\u94fe\u8def\uff0c A \u53d1\u9001\u7684\u4fe1\u53f7\u6070\u597d\u5728 $t_1$ \u4e4b\u540e\u5230\u8fbe D \uff0c\u6700\u540e A \u53c8\u6070\u597d\u5728\u4f20\u8f93\u5ef6\u8fdf\u5185\u68c0\u6d4b\u5230\u4e86\u51b2\u7a81\u3002\u56e0\u6b64\uff0c CSMA/CD \u9700\u8981\u6ee1\u8db3 $\\min{d_{trans}}=L_{min}/R\\leq 2\\cdot d_{max}/V=RTT_{max}$\u3002 \u2003 CSMA/CD \u7684\u6548\u7387\u8fd1\u4f3c\u4e3a\uff1a $$Efficiency=\\frac{1}{1+5\\cdot d_{prop}/d_{trans}}$$ \u5982\u679c $d_{prop}=0$\uff0c\u51b2\u7a81\u7684\u8282\u70b9\u4f1a\u7acb\u5373\u7ec8\u6b62\u4f20\u8f93\uff0c\u56e0\u6b64\u6548\u7387\u503c\u63a5\u8fd1 $1$\u3002 4. \u8f6e\u8f6c\u8bbf\u95ee\u534f\u8bae \u2003\u8f6e\u8f6c\u8bbf\u95ee\u534f\u8bae\u7efc\u5408\u4e86\u524d\u4e24\u79cd\u534f\u8bae\u7684\u4f18\u70b9\uff1a\u2460 \u5f53\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u6d3b\u8dc3\uff0c\u5176\u541e\u5410\u91cf\u4e3a $R$ bps \uff1b\u2461 \u5f53\u6709 $N$ \u4e2a\u8282\u70b9\u6d3b\u8dc3\uff0c\u53ef\u4ee5\u89c4\u907f\u51b2\u7a81\uff0c\u6bcf\u4e2a\u8282\u70b9\u541e\u5410\u91cf\u63a5\u8fd1\u4e8e $R/N$ bps \u3002\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u8f6e\u8f6c\u8bbf\u95ee\u534f\u8bae\u3002 \u2003\u8f6e\u8be2\u534f\u8bae\u6307\u5b9a\u4e00\u4e2a\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\uff0c\u4e3b\u8282\u70b9\u4ee5\u53d1\u9001\u62a5\u6587\u7684\u65b9\u5f0f\u8f6e\u8be2 ( poll ) \u6bcf\u4e2a\u8282\u70b9\uff0c\u544a\u8bc9\u76f8\u5e94\u8282\u70b9\u53ef\u4ee5\u53d1\u9001\u591a\u5c11\u5e27\u3002\u5176\u4e3b\u8981\u7f3a\u70b9\u5728\u4e8e\u8f6e\u8be2\u7684\u5f00\u9500\u3001\u53d1\u9001\u8282\u70b9\u7684\u7b49\u5f85\u5ef6\u8fdf\u4ee5\u53ca\u5355\u70b9\u6545\u969c\u3002 \u2003\u5e94\u7528\uff1a\u84dd\u7259\u534f\u8bae\u3002 \u2003\u4ee4\u724c\u4f20\u9012\u534f\u8bae\u6307\u5b9a\u4e00\u4e2a\u79f0\u4e3a\u4ee4\u724c ( token ) \u7684\u7279\u6b8a\u5e27\u5728\u8282\u70b9\u4e4b\u95f4\u4ee5\u67d0\u79cd\u6b21\u5e8f\u4ea4\u6362\u3002\u67d0\u4e2a\u8282\u70b9\u83b7\u5f97\u4ee4\u724c\u540e\uff0c\u5982\u679c\u6709\u5e27\u8981\u53d1\u9001\uff0c\u5219\u53d1\u9001\u6700\u5927\u5e27\uff0c\u4e4b\u540e\u7ee7\u7eed\u4f20\u9012\u4ee4\u724c\u3002\u5176\u4e3b\u8981\u7f3a\u70b9\u4e5f\u5728\u4e8e\u4ee4\u724c\u7684\u5f00\u9500\u3001\u7b49\u5f85\u5ef6\u8fdf\u4ee5\u53ca\u5355\u70b9\u6545\u969c\u3002 \u2003\u5e94\u7528\uff1a FODI \u534f\u8bae\u3001\u4ee4\u724c\u73af\u534f\u8bae\u3002 \u6240\u6709\u7684 CSMA \u90fd\u6709\u51b2\u7a81\u68c0\u6d4b\u673a\u5236\uff0c\u8fd9\u6837\u547d\u540d\u53ea\u8868\u793a\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u4e0d\u540c\u3002 \u21a9","title":"3.Multiple Access Control Protocols"},{"location":"5-LinkLayer/5.3/#1","text":"","title":"1. \u591a\u8def\u8bbf\u95ee\u534f\u8bae\u6982\u8ff0"},{"location":"5-LinkLayer/5.3/#1_1","text":"\u672c\u7ae0\u4e3b\u8981\u6d89\u53ca\u4e24\u79cd\u7f51\u7edc\u94fe\u8def\u3002 \u2003\u70b9\u5bf9\u70b9\u94fe\u8def ( point-to-point link ) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP \u3001 HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u2003\u5e7f\u64ad\u94fe\u8def ( broadcast link ) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002","title":"(1). \u7f51\u7edc\u94fe\u8def"},{"location":"5-LinkLayer/5.3/#2","text":"\u591a\u8def\u8bbf\u95ee\u95ee\u9898\u5373\u4e3a\u5982\u4f55\u534f\u8c03\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u5bf9\u4e00\u4e2a\u5171\u4eab\u5e7f\u64ad\u94fe\u8def\u7684\u8bbf\u95ee\uff0c\u5b83\u5bf9\u94fe\u8def\u5c42\u6765\u8bf4\u5341\u5206\u91cd\u8981\u3002\u5176\u5173\u952e\u5728\u4e8e\uff0c\u5f53\u591a\u4e2a\u8282\u70b9\u540c\u65f6\u4f20\u8f93\u5e27\u7684\u65f6\u5019\uff0c\u6240\u6709\u8282\u70b9\u540c\u65f6\u63a5\u6536\u5230\u591a\u4e2a\u5e27\uff0c\u5e27\u4e0e\u5e27\u4e4b\u95f4\u53d1\u751f\u4e86\u51b2\u7a81 ( collide )\uff0c\u6240\u6709\u6d89\u53ca\u51b2\u7a81\u7684\u5e27\u90fd\u4f1a\u56e0\u4e3a\u4fe1\u53f7\u7ea0\u7f20\u800c\u4e22\u5931\uff0c\u56e0\u6b64\u800c\u5bfc\u81f4\u4e86\u4fe1\u9053\u88ab\u6d6a\u8d39\u3002 \u2003\u5f53\u591a\u4e2a\u8282\u70b9\u4fdd\u6301\u6d3b\u8dc3\u72b6\u6001\uff0c\u591a\u8def\u8bbf\u95ee\u63a7\u5236 ( mutiple access control ) \u534f\u8bae\u8d1f\u8d23\u534f\u8c03\u6d3b\u8dc3\u8282\u70b9\u4e4b\u95f4\u7684\u4f20\u8f93\u3002\u8fd1\u5e74\u6765\uff0c\u5df2\u6709\u51e0\u5341\u79cd MAC \u88ab\u5b9e\u73b0\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u4e09\u7c7b\uff1a\u4fe1\u9053\u5212\u5206\u534f\u8bae ( channel partioning )\u3001\u968f\u673a\u8bbf\u95ee\u534f\u8bae ( random access )\u3001\u8f6e\u6d41\u534f\u8bae ( taking-turns )\u3002 \u2003\u5bf9\u4e8e\u5e26\u5bbd\u4e3a $R$ bps \u7684\u5e7f\u64ad\u94fe\u8def\uff0c\u7406\u60f3\u7684 MAC \u534f\u8bae\u5e94\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a \u2003\u2460 \u5f53\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u53d1\u9001\u6570\u636e\uff0c\u5176\u541e\u5410\u91cf\u4e3a $R$ bps \uff1b \u2003\u2461 \u5f53\u6709 $M$ \u4e2a\u8282\u70b9\u53d1\u9001\u6570\u636e\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u541e\u5410\u91cf\u4e3a $R/M$ bps (\u5e73\u5747\u4f20\u8f93\u901f\u7387)\uff1b \u2003\u2462 \u534f\u8bae\u662f\u5206\u6563\u7684\uff1a\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u4e2a\u8282\u70b9\u7684\u5d29\u6e83\u800c\u5d29\u6e83\uff1b \u2003\u2463 \u534f\u8bae\u7684\u5b9e\u73b0\u7b80\u5355\u3002","title":"(2). \u591a\u8def\u8bbf\u95ee\u95ee\u9898"},{"location":"5-LinkLayer/5.3/#2_1","text":"\u5212\u5206\u5e7f\u64ad\u4fe1\u9053\u5e26\u5bbd\u901a\u8fc7\u591a\u8def\u590d\u7528\u6280\u672f\u5b9e\u73b0\u3002\u5f53\u7f51\u8def\u8d1f\u8f7d\u8f83\u91cd\u65f6\uff0c\u4fe1\u9053\u5212\u5206\u534f\u8bae\u6548\u7387\u8f83\u9ad8\uff1b\u800c\u5f53\u8d1f\u8f7d\u8f83\u8f7b\u65f6\uff0c\u6548\u7387\u8f83\u4f4e\u3002","title":"2. \u4fe1\u9053\u5212\u5206\u534f\u8bae"},{"location":"5-LinkLayer/5.3/#1-tdm","text":"TDM \u5c06\u65f6\u95f4\u5212\u5206\u4e3a\u65f6\u95f4\u5e27 ( time frame )\uff0c\u5e76\u628a\u6bcf\u4e2a\u65f6\u95f4\u5e27\u5212\u5206\u4e3a $N$ \u4e2a\u65f6\u9699 ( slot )\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u65f6\u9699\u5206\u7ed9 $N$ \u4e2a\u8282\u70b9\u4e2d\u7684\u4e00\u4e2a\u3002\u65f6\u9699\u957f\u5ea6\u901a\u5e38\u53ef\u4ee5\u4f7f\u4e00\u4e2a\u8282\u70b9\u53d1\u5b8c\u4e00\u4e2a\u94fe\u8def\u5c42\u5e27\u3002 \u2003 TDM \u907f\u514d\u4e86\u51b2\u7a81\uff0c\u4e14\u5341\u5206\u516c\u5e73\uff0c\u6bcf\u4e2a\u8282\u70b9\u5728\u6bcf\u4e2a\u5e27\u5185\u7684\u5e73\u5747\u4f20\u8f93\u901f\u7387\u4e3a $R/N$ bps \uff1b\u4f46\u6bcf\u4e2a\u8282\u70b9\u6700\u5927\u5e73\u5747\u901f\u7387\u4e3a $R/N$ bps \uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5360\u7528\u7279\u5b9a\u65f6\u9699\uff0c\u5f53\u53d1\u9001\u8282\u70b9\u5f88\u5c11\u65f6\u4fe1\u9053\u8d44\u6e90\u4e0d\u80fd\u5f97\u5230\u5145\u5206\u5229\u7528\u3002","title":"(1). TDM"},{"location":"5-LinkLayer/5.3/#2-fdm","text":"FDM \u5c06 $R$ bps \u4fe1\u9053\u5212\u5206\u4e3a\u4e0d\u540c\u9891\u6bb5\uff0c\u5e76\u672a\u6bcf\u4e2a\u8282\u70b9\u5206\u914d\u4e00\u4e2a\u9891\u7387\uff0c\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e86 $N$ \u4e2a\u5e76\u884c\u7684 $R/N$ bps \u7684\u4fe1\u9053\u3002 FDM \u7684\u4f18\u7f3a\u70b9\u4e0e TDM \u7c7b\u4f3c\u3002","title":"(2). FDM"},{"location":"5-LinkLayer/5.3/#3","text":"\u5728\u968f\u673a\u8bbf\u95ee\u534f\u8bae\u4e2d\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u8981\u53d1\u9001\u5206\u7ec4\u65f6\uff0c\u5229\u7528\u4fe1\u9053\u5168\u90e8\u5e26\u5bbd $R$\u3002\u5f53\u591a\u4e2a\u8282\u70b9\u540c\u65f6\u4f20\u8f93\u5f15\u8d77\u51b2\u7a81\uff0c\u968f\u673a\u8bbf\u95ee MAC \u534f\u8bae\u9700\u8981\u5b9a\u4e49\uff1a\u2460 \u5982\u4f55\u68c0\u6d4b\u51b2\u7a81\uff0c\u5982\u8d85\u65f6\uff1b\u2461 \u5982\u4f55\u4ece\u51b2\u7a81\u4e2d\u6062\u590d\uff0c\u5982\u91cd\u4f20\u3002 \u2003\u7531\u4e8e\u51b2\u7a81\u7684\u5b58\u5728\uff0c\u968f\u673a\u8bbf\u95ee\u534f\u8bae\u4e0e\u4fe1\u9053\u5212\u5206\u534f\u8bae\u6b63\u76f8\u53cd\uff0c\u9002\u7528\u4e8e\u7f51\u7edc\u8d1f\u8f7d\u8f83\u8f7b\u7684\u60c5\u51b5\u3002","title":"3. \u968f\u673a\u8bbf\u95ee\u534f\u8bae"},{"location":"5-LinkLayer/5.3/#1-aloha","text":"\u65f6\u9699 ALOHA \u534f\u8bae\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a \u6240\u6709\u5e27\u5927\u5c0f\u76f8\u7b49\uff0c\u4e3a $L$ bit \uff0c\u5e76\u4e14\u65f6\u95f4\u88ab\u5212\u5206\u4e3a\u7b49\u957f\u7684 $L/R$ \u79d2\u7684\u65f6\u9699 \u8282\u70b9\u53ea\u5728\u65f6\u9699\u8d77\u70b9\u4f20\u8f93\u5e27\uff0c\u4e14\u8282\u70b9\u4e4b\u95f4\u662f\u540c\u6b65\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u77e5\u9053\u65f6\u9699\u4f55\u65f6\u5f00\u59cb \u5982\u679c\u4e00\u4e2a\u65f6\u9699\u5185\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u6240\u6709\u8282\u70b9\u5728\u65f6\u9699\u7ed3\u675f\u524d\u53ef\u4ee5\u68c0\u6d4b\u5230\u8be5\u51b2\u7a81 \u2003\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u65f6\u9699 ALOHA \u7684\u64cd\u4f5c\uff1a \u5f53\u8282\u70b9\u6709\u4e00\u4e2a\u65b0\u5e27\u8981\u53d1\u9001\uff0c\u5b83\u7b49\u5f85\u4e0b\u4e00\u4e2a\u65f6\u9699\u5f00\u59cb\u4f20\u8f93\u8be5\u5e27 \u5982\u679c\u672a\u53d1\u751f\u51b2\u7a81\uff0c\u8282\u70b9\u65e0\u9700\u8003\u8651\u91cd\u4f20\uff1b\u5982\u679c\u51b2\u7a81\u53d1\u751f\uff0c\u8282\u70b9\u5728\u65f6\u9699\u7ed3\u675f\u524d\u68c0\u6d4b\u5230\u51b2\u7a81\uff0c\u5e76\u4ee5\u6982\u7387 $p$ \u5728\u540e\u7eed\u7684\u65f6\u9699\u4e2d\u91cd\u65b0\u53d1\u9001\u8be5\u5e27\uff0c\u76f4\u5230\u65e0\u51b2\u7a81\u53d1\u9001\u4e3a\u6b62\u3002 \u2003\u65f6\u9699 ALOHA \u7684\u4f18\u70b9\u662f\u9ad8\u5ea6\u5206\u6563\uff0c\u8282\u70b9\u4e4b\u95f4\u53ea\u9700\u540c\u6b65\u65f6\u9699\uff1b\u5728\u5355\u53d1\u9001\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\u5168\u90e8\u5e26\u5bbd\u90fd\u53ef\u4ee5\u88ab\u5360\u7528\uff1b\u5b9e\u73b0\u8db3\u591f\u7b80\u5355\u3002 \u2003\u4f46\u5728\u591a\u8282\u70b9\u4f20\u9001\u7684\u60c5\u51b5\u4e0b\uff0c\u65f6\u9699 ALOHA \u6548\u7387\u8f83\u4f4e\u3002\u5b9a\u4e49\u7a7a\u95f2\u65f6\u9699\u548c\u51b2\u7a81\u65f6\u9699\u4e3a\u88ab\u6d6a\u8d39\u6389\u7684\u65f6\u9699\uff0c\u5355\u8282\u70b9\u4f20\u8f93\u7684\u65f6\u9699\u4e3a\u6210\u529f\u65f6\u9699\uff0c\u65f6\u9699 ALOHA \u7684\u6548\u7387\u4e3a\uff1a\u5f53\u8282\u70b9\u6570\u5f88\u591a\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5927\u91cf\u7684\u5e27\u8981\u4f20\u8f93\u65f6\uff0c\u6210\u529f\u65f6\u9699\u6240\u5360\u7684\u6bd4\u4f8b\u3002\u7ed9\u5b9a\u8282\u70b9\u6570 $N$\u3001\u6982\u7387 $p$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65f6\u9699\u6765\u8bf4\uff0c\u5b83\u662f\u6210\u529f\u65f6\u9699\u7684\u6982\u7387\u4e3a $Np\\cdot (1-p)^{N-1}$\uff0c\u4e5f\u5373\u6548\u7387\u3002\u5f53 $N\\rightarrow \\infty$\u3001$p=p^*$\uff0c\u65f6\u9699 ALOHA \u53d6\u5f97\u7684\u6700\u5927\u6548\u7387\u4e3a $1/e\\approx0.37$ (\u7a7a\u95f2\u65f6\u9699: $0.37$\u3001\u51b2\u7a81\u65f6\u9699: $0.26$) \uff0c\u6240\u4ee5\u5171\u4eab\u4fe1\u9053\u7684\u6709\u6548\u4f20\u8f93\u901f\u7387\u4e3a $0.37R$ bps \u3002","title":"(1). \u65f6\u9699 ALOHA \u534f\u8bae"},{"location":"5-LinkLayer/5.3/#2-aloha","text":"\u53c8\u79f0\u7eaf ALOHA \u534f\u8bae\u3001\u975e\u65f6\u9699 ALOHA \u534f\u8bae\u3002\u5b83\u4e0e\u65f6\u9699 ALOHA \u534f\u8bae\u7684\u533a\u522b\u662f\u4e0d\u5212\u5206\u65f6\u9699\uff0c\u8282\u70b9\u4e4b\u95f4\u65e0\u9700\u540c\u6b65\uff0c\u5f53\u6709\u65b0\u7684\u5e27\u751f\u6210\uff0c\u8282\u70b9\u7acb\u5373\u5c06\u5176\u53d1\u9001\u3002 \u2003\u7eaf ALOHA \u534f\u8bae\u53d1\u751f\u51b2\u7a81\u7684\u53ef\u80fd\u6027\u66f4\u5927\u3002\u4ee4 $u=L/R$\uff0c\u5047\u8bbe\u67d0\u8282\u70b9\u5728 $t_0$ \u65f6\u523b\u53d1\u9001\u6570\u636e\uff0c\u5bf9\u4e8e\u65f6\u9699 ALOHA \u534f\u8bae\uff0c\u5176\u6613\u635f\u65f6\u95f4\u533a\u4ec5\u4e3a\u65f6\u9699 $[t_0, t_0+u]$\uff1b\u800c\u7eaf ALOHA \u534f\u8bae\u4e3a $[t_0-u,t_0+u]$\uff0c\u56e0\u6b64\u4e00\u4e2a\u8282\u70b9\u6210\u529f\u53d1\u9001\u7684\u6982\u7387\u4e3a $p(1-p)^{2(N-1)}$\uff0c\u5f53 $N\\rightarrow \\infty$\u3001$p=p^*$\uff0c\u7eaf ALOHA \u7684\u6700\u5927\u6548\u7387\u4e3a $1/2e\\approx 0.18$\u3002","title":"(2). ALOHA \u534f\u8bae"},{"location":"5-LinkLayer/5.3/#3-csma","text":"\u8f7d\u6ce2\u76d1\u542c\u591a\u8def\u8bbf\u95ee ( Carrier Sense Multiple Access, CSMA ) \u534f\u8bae\u65cf\u6539\u8fdb\u4e86 ALOHA \u534f\u8bae\u65cf\u7684\u7f3a\u70b9\uff0c\u5728\u53d1\u9001\u5e27\u4e4b\u524d\uff0c CSMA \u76d1\u542c\u4fe1\u9053 (\u8f7d\u6ce2)\uff1a\u5982\u679c\u4fe1\u9053\u7a7a\u95f2\uff0c\u5c31\u53d1\u9001\u5b8c\u6574\u5e27\uff0c\u5426\u5219\u63a8\u8fdf\u53d1\u9001\u3002 CSMA \u6709\u4ee5\u4e0b\u63a8\u8fdf\u7b56\u7565\uff1a $1$-\u575a\u6301 CSMA \u975e\u575a\u6301 CSMA $p$-\u575a\u6301 CSMA \u2003\u5373\u4f7f\u4f7f\u7528\u76d1\u542c\u673a\u5236\uff0c\u51b2\u7a81\u4ecd\u6709\u53ef\u80fd\u53d1\u751f\u3002\u4ee5\u4e0b\u9762\u7684\u65f6\u7a7a\u56fe\u4e3a\u4f8b\uff0c$t_0$ \u65f6\u8282\u70b9 B \u76d1\u542c\u5230\u4fe1\u9053\u662f\u7a7a\u95f2\u7684\uff0c\u53d1\u9001\u4e00\u4e2a\u5e27\uff1b$t_1$ \u65f6\uff0c\u5c3d\u7ba1\u4fe1\u9053\u5df2\u88ab\u5360\u7528\uff0c\u7531\u4e8e\u7aef\u5230\u7aef\u4fe1\u9053\u4f20\u64ad\u65f6\u5ef6\u7684\u5b58\u5728\uff0c D \u5e76\u4e0d\u80fd\u68c0\u6d4b\u5230\u4fe1\u9053\u5df2\u88ab\u5360\u7528\uff0c\u56e0\u6b64\u4e5f\u4f1a\u53d1\u9001\u4e00\u4e2a\u5e27\u3002 \u2003\u5bf9\u4e8e CSMA \uff0c\u5373\u4f7f\u968f\u540e B \u548c D \u5df2\u7ecf\u53d1\u73b0\u4e86\u51b2\u7a81\uff0c\u5b83\u4eec\u4e5f\u4f1a\u628a\u76f8\u5e94\u7684\u5e27\u5b8c\u6574\u53d1\u9001\uff1b\u5bf9\u4e8e\u5177\u6709\u51b2\u7a81\u68c0\u6d4b\u7684 CSMA ( CSMA/CD ) 1 \uff0c\u5728\u53d1\u73b0\u51b2\u7a81\u540e\u4f1a\u7acb\u523b\u505c\u6b62\u53d1\u9001\uff0c\u51cf\u5c11\u5bf9\u4fe1\u9053\u8d44\u6e90\u7684\u6d6a\u8d39\u3002\u5728\u786e\u8ba4\u4f20\u8f93\u5931\u8d25\u540e\uff0c\u53d1\u9001\u8282\u70b9\u4f1a\u7b49\u5f85\u4e00\u4e2a\u968f\u673a\u65f6\u95f4\u91cf\uff0c\u7136\u540e\u91cd\u65b0\u53d1\u9001\u3002 \u2003 CSMA/CD \u5728\u6b64\u60c5\u51b5\u4e0b\u7684\u7684\u51b2\u7a81\u68c0\u6d4b\u5728\u6709\u9650\u5c40\u57df\u7f51\u4e0b\u76f8\u5bf9\u5bb9\u6613\u5b9e\u73b0\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u68c0\u6d4b\u5230\u7684\u4fe1\u53f7\u5f3a\u5ea6\u662f\u5426\u5927\u4e8e\u53d1\u9001\u4fe1\u53f7\u7684\u6700\u5927\u5f3a\u5ea6\u5b9e\u73b0\uff1b\u5bf9\u4e8e\u65e0\u7ebf\u5c40\u57df\u7f51\uff0c\u5b9e\u73b0\u5341\u5206\u56f0\u96be\uff0c\u56e0\u4e3a\u4fe1\u53f7\u5f3a\u5ea6\u968f\u8ddd\u79bb\u8870\u51cf\u8f83\u5feb\uff0c\u56e0\u6b64\u5728\u65e0\u7ebf\u7f51\u4e2d\u8f83\u5c11\u4f7f\u7528\u3002 \u2003\u4e3a\u4fdd\u8bc1\u53ef\u9760\u6027\uff0c CSMA/CD \u5fc5\u987b\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u5728\u4f20\u8f93\u5ef6\u8fdf\u5185\u53ef\u4ee5\u68c0\u6d4b\u5230\u5df2\u5b58\u5728\u7684\u51b2\u7a81\u3002\u5982\u679c\u4f20\u8f93\u7684\u8fc7\u5feb\u6216\u4f20\u64ad\u5ef6\u8fdf\u8fc7\u957f\uff0c\u5747\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u68c0\u6d4b\u5230\u3002\u5047\u8bbe\u7f51\u7edc\u5e26\u5bbd $R$ bps \uff0c\u6570\u636e\u5e27\u6700\u5c0f\u957f\u5ea6\u4e3a $L_{min}$ bits \uff0c\u4fe1\u53f7\u4f20\u64ad\u901f\u5ea6\u4e3a $V$ m/s \uff0c\u8003\u8651\u5982\u4e0a\u56fe\u6240\u793a\u7684\u4e34\u754c\u60c5\u51b5\uff1a$AD=d_{max}$ \u4e3a\u6700\u957f\u94fe\u8def\uff0c A \u53d1\u9001\u7684\u4fe1\u53f7\u6070\u597d\u5728 $t_1$ \u4e4b\u540e\u5230\u8fbe D \uff0c\u6700\u540e A \u53c8\u6070\u597d\u5728\u4f20\u8f93\u5ef6\u8fdf\u5185\u68c0\u6d4b\u5230\u4e86\u51b2\u7a81\u3002\u56e0\u6b64\uff0c CSMA/CD \u9700\u8981\u6ee1\u8db3 $\\min{d_{trans}}=L_{min}/R\\leq 2\\cdot d_{max}/V=RTT_{max}$\u3002 \u2003 CSMA/CD \u7684\u6548\u7387\u8fd1\u4f3c\u4e3a\uff1a $$Efficiency=\\frac{1}{1+5\\cdot d_{prop}/d_{trans}}$$ \u5982\u679c $d_{prop}=0$\uff0c\u51b2\u7a81\u7684\u8282\u70b9\u4f1a\u7acb\u5373\u7ec8\u6b62\u4f20\u8f93\uff0c\u56e0\u6b64\u6548\u7387\u503c\u63a5\u8fd1 $1$\u3002","title":"(3). CSMA \u534f\u8bae"},{"location":"5-LinkLayer/5.3/#4","text":"\u8f6e\u8f6c\u8bbf\u95ee\u534f\u8bae\u7efc\u5408\u4e86\u524d\u4e24\u79cd\u534f\u8bae\u7684\u4f18\u70b9\uff1a\u2460 \u5f53\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u6d3b\u8dc3\uff0c\u5176\u541e\u5410\u91cf\u4e3a $R$ bps \uff1b\u2461 \u5f53\u6709 $N$ \u4e2a\u8282\u70b9\u6d3b\u8dc3\uff0c\u53ef\u4ee5\u89c4\u907f\u51b2\u7a81\uff0c\u6bcf\u4e2a\u8282\u70b9\u541e\u5410\u91cf\u63a5\u8fd1\u4e8e $R/N$ bps \u3002\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u8f6e\u8f6c\u8bbf\u95ee\u534f\u8bae\u3002 \u2003\u8f6e\u8be2\u534f\u8bae\u6307\u5b9a\u4e00\u4e2a\u8282\u70b9\u4e3a\u4e3b\u8282\u70b9\uff0c\u4e3b\u8282\u70b9\u4ee5\u53d1\u9001\u62a5\u6587\u7684\u65b9\u5f0f\u8f6e\u8be2 ( poll ) \u6bcf\u4e2a\u8282\u70b9\uff0c\u544a\u8bc9\u76f8\u5e94\u8282\u70b9\u53ef\u4ee5\u53d1\u9001\u591a\u5c11\u5e27\u3002\u5176\u4e3b\u8981\u7f3a\u70b9\u5728\u4e8e\u8f6e\u8be2\u7684\u5f00\u9500\u3001\u53d1\u9001\u8282\u70b9\u7684\u7b49\u5f85\u5ef6\u8fdf\u4ee5\u53ca\u5355\u70b9\u6545\u969c\u3002 \u2003\u5e94\u7528\uff1a\u84dd\u7259\u534f\u8bae\u3002 \u2003\u4ee4\u724c\u4f20\u9012\u534f\u8bae\u6307\u5b9a\u4e00\u4e2a\u79f0\u4e3a\u4ee4\u724c ( token ) \u7684\u7279\u6b8a\u5e27\u5728\u8282\u70b9\u4e4b\u95f4\u4ee5\u67d0\u79cd\u6b21\u5e8f\u4ea4\u6362\u3002\u67d0\u4e2a\u8282\u70b9\u83b7\u5f97\u4ee4\u724c\u540e\uff0c\u5982\u679c\u6709\u5e27\u8981\u53d1\u9001\uff0c\u5219\u53d1\u9001\u6700\u5927\u5e27\uff0c\u4e4b\u540e\u7ee7\u7eed\u4f20\u9012\u4ee4\u724c\u3002\u5176\u4e3b\u8981\u7f3a\u70b9\u4e5f\u5728\u4e8e\u4ee4\u724c\u7684\u5f00\u9500\u3001\u7b49\u5f85\u5ef6\u8fdf\u4ee5\u53ca\u5355\u70b9\u6545\u969c\u3002 \u2003\u5e94\u7528\uff1a FODI \u534f\u8bae\u3001\u4ee4\u724c\u73af\u534f\u8bae\u3002 \u6240\u6709\u7684 CSMA \u90fd\u6709\u51b2\u7a81\u68c0\u6d4b\u673a\u5236\uff0c\u8fd9\u6837\u547d\u540d\u53ea\u8868\u793a\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u4e0d\u540c\u3002 \u21a9","title":"4. \u8f6e\u8f6c\u8bbf\u95ee\u534f\u8bae"},{"location":"5-LinkLayer/5.4/","text":"1. \u94fe\u8def\u5c42\u5bfb\u5740\uff1a ARP \u534f\u8bae (1). MAC \u5730\u5740 \u2003\u4e3b\u673a\u548c\u8def\u7531\u5668\u7684\u63a5\u53e3 (\u9002\u914d\u5668) \u9664\u4e86\u5177\u6709\u4e00\u4e2a IP \u5730\u5740\u4ee5\u5916\uff0c\u8fd8\u5177\u6709\u4e00\u4e2a\u94fe\u8def\u5c42\u5730\u5740\uff0c\u79f0\u4e3a\u7269\u7406\u5730\u5740\u3001 LAN \u5730\u5740\u6216 MAC \u5730\u5740\u3002 MAC \u5730\u5740\u901a\u5e38\u4e3a $6$ \u4e2a\u5b57\u8282\uff0c\u7528\u901a\u8fc7\u201c-\u201d\u5206\u5272\u7684\u516d\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u8868\u793a\u3002 \u2003 MAC \u5730\u5740\u662f\u552f\u4e00\u7684\uff0c\u5728\u7f51\u5361\u51fa\u5382\u65f6\u5c31\u5199\u5165\u5230\u4e86\u5b83\u7684 ROM \u4e2d\u3002\u5f53\u4e00\u4e2a\u7f51\u5361\u5546\u8981\u751f\u4ea7\u9002\u914d\u5668\u65f6\uff0c\u5b83\u5411 IEEE \u652f\u4ed8\u8d39\u7528\uff0c\u8d2d\u4e70\u4e00\u5757 $24$ \u4f4d\u7684\u5730\u5740\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4efb\u610f\u8bbe\u5907\uff0c\u65e0\u8bba\u5230\u54ea\u91cc\u4f7f\u7528\uff0c\u5176 MAC \u5730\u5740\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\u3002 (2). ARP \u534f\u8bae \u2460 \u5b50\u7f51\u5185\u901a\u4fe1 \u2003\u5982\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u4e3b\u673a C \u8981\u5411\u4e3b\u673a A \u53d1\u9001 IP \u6570\u636e\u62a5\uff0c\u4f46\u4e3b\u673a C \u53ea\u77e5\u9053\u76ee\u7684 IP \u800c\u4e0d\u77e5\u9053\u76ee\u7684 MAC \u5730\u5740\u3002\u4e8e\u662f\uff0c\u4e3b\u673a C \u67e5\u8be2\u81ea\u5df1\u7684 ARP \u8868\uff0c ARP \u8868\u7684\u683c\u5f0f\u5982\u4e0b\uff1a @import \"/ComputerNetwork/css/orgtable.css\"; IP \u5730\u5740 MAC \u5730\u5740 TTL 222.222.222.221 88-B2-2F-54-1A-0F 13:45:00 222.222.222.223 5C-66-AB-90-75-B1 13:52:00 \u8868\u4e2d\u5305\u542b\u4e86 IP \u5230 MAC \u7684\u6620\u5c04\u5173\u7cfb\uff0c TTL \u4ee3\u8868\u8868\u9879\u7684\u5bff\u547d\uff0c\u901a\u5e38\uff0c\u4ece\u4e00\u4e2a\u8868\u9879\u88ab\u8bbe\u7f6e\u5f00\u59cb\uff0c\u5176\u5bff\u547d\u5927\u7ea6\u4e3a $20$ \u5206\u949f\u3002 \u2003\u5982\u679c C \u67e5\u8be2\u5230\u76ee\u7684 MAC \uff0c\u5219\u8fd9\u4e2a\u95ee\u9898\u5c31\u88ab\u89e3\u51b3\u4e86\uff1b\u5982\u679c ARP \u8868\u4e2d\u6ca1\u6709\u76f8\u5e94\u8868\u9879\uff0c\u53d1\u9001\u65b9\u5c31\u4f1a\u6784\u9020\u4e00\u4e2a ARP \u5206\u7ec4 ( ARP packet )\uff0c\u76ee\u7684 MAC \u88ab\u8bbe\u7f6e\u4e3a\u5e7f\u64ad\u5730\u5740 FF-FF-FF-FF-FF-FF \uff0c\u5c40\u57df\u7f51\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u68c0\u67e5\u81ea\u5df1\u7684 IP \u662f\u5426\u4e0e ARP \u8bf7\u6c42\u5206\u7ec4\u7684\u76ee\u7684 IP \u662f\u5426\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\uff0c\u5219\u8fd4\u56de\u76f8\u5e94\u7684\u6620\u5c04\u3002 \u2003 ARP \u534f\u8bae\u662f\u5373\u63d2\u5373\u7528\u7684\uff1a ARP \u81ea\u52a8\u5efa\u7acb\u800c\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u5982\u679c\u67d0\u4e3b\u673a\u4e0e\u5c40\u57df\u7f51\u65ad\u5f00\u8fde\u63a5\uff0c\u5b83\u7684\u76f8\u5e94\u8868\u9879\u4e5f\u4f1a\u88ab\u6e05\u7a7a\u3002 \u2003 ARP \u534f\u8bae\u662f\u4e00\u4e2a\u4ecb\u4e8e\u7f51\u7edc\u5c42\u4e0e\u94fe\u8def\u5c42\u4e4b\u95f4\u7684\u534f\u8bae\u3002 \u2461 \u5b50\u7f51\u95f4\u901a\u4fe1 \u2003\u5982\u56fe\uff0c\u5047\u8bbe\u4e3b\u673a $1$: 111.111.111.111 \u5411\u4e3b\u673a $2$: 222.222.222.222 \u53d1\u9001\u4e00\u4e2a\u6570\u636e\u62a5\u3002\u4e3b\u673a $1$ \u9996\u5148\u68c0\u6d4b\u51fa\u76ee\u7684 IP \u4e0d\u4e0e\u81ea\u5df1\u5728\u540c\u4e00\u5b50\u7f51\u5185\uff0c\u901a\u8fc7 ARP \u83b7\u5f97\u7f51\u5173\u7684 MAC \u5730\u5740\u540e\uff0c\u5411\u7f51\u5173\u53d1\u9001\u6b64\u6570\u636e\u62a5\uff1b\u4e4b\u540e\uff0c\u8def\u7531\u5668\u67e5\u8be2\u8f6c\u53d1\u8868\u53d1\u9001\u8be5\u5206\u7ec4\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u5230\u4e00\u4e2a\u65b0\u7684\u5e27\u4e2d\uff0c\u6b64\u65f6\uff0c\u5e27\u4e2d\u7684\u76ee\u7684 MAC \u662f\u5df2\u901a\u8fc7 ARP \u83b7\u5f97\u7684\u4e3b\u673a $2$ \u7684 MAC \u3002 2. \u4ee5\u592a\u7f51 \u2003\u4ee5\u592a\u7f51 ( Ethernet ) \u81ea 20 \u4e16\u7eaa 70 \u5e74\u4ee3\u88ab\u53d1\u660e\u4ee5\u6765\uff0c\u4e0d\u65ad\u6f14\u5316\u4e0e\u53d1\u5c55\uff0c\u76f4\u81f3\u73b0\u5728\u4ecd\u4fdd\u6301\u652f\u914d\u5730\u4f4d\u3002\u5b83\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u6709\u7ebf LAN \u6280\u672f\uff1a\u9020\u4ef7\u4f4e\u5ec9\uff0c\u4e00\u4e2a\u4ee5\u592a\u7f51 NIC \u4e0d\u8db3 \uffe5100 \uff1b\u5b83\u6bd4\u4ee4\u724c\u5c40\u57df\u7f51\u548c ATM \u66f4\u7b80\u5355\u3001\u4fbf\u5b9c\uff1b\u5b83\u53ef\u4ee5\u6ee1\u8db3\u7f51\u7edc\u5e26\u5bbd\u7684\u9700\u6c42\u3002\u5b83\u4ee5\u53e4\u65f6\u7684\u5047\u60f3\u7269\u8d28\u201c\u4ee5\u592a\u201d\u547d\u540d\u3002 \u200320 \u4e16\u7eaa 90 \u5e74\u4ee3\u4ee5\u524d\uff0c\u4ee5\u592a\u7f51\u4f7f\u7528\u603b\u7ebf\u62d3\u6251\u7ed3\u6784\uff0c\u540c\u8fc7\u540c\u8f74\u7535\u7f06\u603b\u7ebf\u4e92\u8fde\u8282\u70b9\uff0c\u662f\u4e00\u79cd\u5e7f\u64ad\u5c40\u57df\u7f51\uff1b90 \u5e74\u4ee3\u540e\u671f\uff0c\u51fa\u73b0\u4e86\u57fa\u4e8e\u96c6\u7ebf\u5668 ( hub ) \u7684\u661f\u5f62\u62d3\u6251\uff0c\u4f46\u5176\u672c\u8d28\u4e5f\u662f\u5e7f\u64ad\u5c40\u57df\u7f51\uff1b21 \u4e16\u7eaa\u521d\uff0c\u4f4d\u4e8e\u4e2d\u5fc3\u7684\u96c6\u7ebf\u5668\u88ab\u4ea4\u6362\u673a\u6240\u66ff\u4ee3\u3002 (1). \u4ee5\u592a\u7f51\u670d\u52a1 \u2003\u4ee5\u592a\u7f51\u63d0\u4f9b\u65e0\u8fde\u63a5\u3001\u4e0d\u53ef\u9760\u7684\u670d\u52a1\uff0c\u9047\u5230\u5dee\u9519\u5e27\u76f4\u63a5\u4e22\u5f03\uff0c\u4e22\u5f03\u5e27\u7684\u6570\u636e\u6062\u590d\u4f9d\u8d56\u4e8e\u9ad8\u5c42\u534f\u8bae\u3002 \u2003\u4ee5\u592a\u7f51\u7684 MAC \u534f\u8bae\u91c7\u7528 CSMA/CD \u3002\u5f53\u76d1\u542c\u7684\u94fe\u8def\u5904\u4e8e\u5360\u7528\u72b6\u6001\uff0c\u4ee5\u592a\u7f51\u7684\u63a8\u8fdf\u7b56\u7565\u91c7\u7528 $1$-\u575a\u6301 CSMA \uff1b\u5f53\u5728\u4f20\u8f93\u6570\u636e\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u68c0\u6d4b\u5230\u51b2\u7a81\uff0c\u5219\u786e\u8ba4\u53d1\u9001\u5e27\u6210\u529f\u53d1\u9001\uff1b\u5426\u5219\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u4e00\u4e2a\u963b\u585e\u4fe1\u53f7\u540e\u4e2d\u6b62\u53d1\u9001\uff0c\u7136\u540e\u6839\u636e\u4e8c\u8fdb\u5236\u6307\u6570\u9000\u907f\u7b97\u6cd5\u786e\u8ba4\u7b49\u5f85\u7684\u65f6\u95f4\u91cf\uff1a \u8bbe\u8fd9\u4e2a\u5e27\u7ecf\u5386\u4e86 $m$ \u6b21\u7684\u8fde\u7eed\u51b2\u7a81\uff0c\u53d6 $n=\\min{(m,10)}$ NIC \u4ece $\\lbrace0,1,...,2^{n-1}\\rbrace$ \u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u6570 $K$\uff0c\u7b49\u5f85 $K\\cdot 512$ bit \u7684\u4f20\u8f93\u5ef6\u8fdf\u65f6\u95f4\u540e\uff0c\u91cd\u65b0\u8fdb\u5165 \u76d1\u542c-\u7a7a\u95f2\u65f6\u4f20\u8f93 \u7684\u8fc7\u7a0b \u5176\u539f\u56e0\u5728\u4e8e\uff0c\u51b2\u7a81\u6b21\u6570\u591a\u610f\u5473\u7740\u7f51\u7edc\u8d1f\u8f7d\u9ad8\uff0c\u5e94\u5f53\u63d0\u5347\u968f\u673a\u65f6\u95f4\u7684\u8303\u56f4\uff0c\u51cf\u5c0f\u8282\u70b9\u4e4b\u95f4\u8fde\u7eed\u51b2\u7a81\u7684\u6982\u7387\u3002 (2). \u4ee5\u592a\u7f51\u5e27\u7684\u7ed3\u6784 \u2003\u2003 \u524d\u5bfc\u7801 ( Preamble )( 8B ): \u524d $7$ \u4e2a\u5b57\u8282\u5747\u4e3a 10101010 \uff0c\u7528\u4e8e\u540c\u6b65\u63a5\u6536\u7aef\u548c\u53d1\u9001\u7aef\u7684\u65f6\u949f\uff1b\u7b2c $8$ \u4e2a\u5b57\u8282\u4e3a 10101011 \uff0c\u7528\u4e8e\u5b9a\u754c\u3002 \u65f6\u949f\u540c\u6b65\uff1a\u540c\u6b65\u4e32\u884c\u901a\u4fe1\u9700\u8981\u901a\u8fc7\u76f8\u540c\u7684\u65f6\u949f\u9891\u7387\u6062\u590d\u6570\u636e\u4fe1\u606f\u3002\u867d\u7136\u53cc\u65b9\u53ef\u4ee5\u6839\u636e\u94fe\u8def\u7c7b\u578b\u6307\u5b9a\u9891\u7387\uff0c\u4f46\u5b9e\u9645\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u5fae\u5c0f\u504f\u5dee\uff0c\u56e0\u6b64\u9700\u8981\u540c\u6b65\u3002 \u4e0d\u505a\u7279\u6b8a\u58f0\u660e\uff0c\u524d\u5bfc\u7801\u957f\u5ea6\u4e0d\u7b97\u8fdb\u5e27\u957f\u5185\u3002 \u76ee\u7684 MAC \u3001\u6e90 MAC (\u5404 6B ): \u63a5\u6536\u65b9\u4f1a\u5339\u914d\u76ee\u7684 MAC \u548c\u81ea\u8eab\u7684 MAC \uff0c\u5982\u679c\u4e00\u81f4\u624d\u4f1a\u63a5\u6536\uff0c\u5426\u5219\u4e22\u5f03\u3002 \u7c7b\u578b ( Type )( 2B ): \u7528\u4e8e\u590d\u7528\u548c\u5206\u7528\uff0c\u6307\u793a\u4e86\u4e0a\u5c42\u534f\u8bae\uff0c\u5982 ARP \u4e3a 0x0806 \u3002 \u6570\u636e ( min:46B, max:1500B ): \u6700\u5c0f\u503c\u57fa\u4e8e CSMA/CD \u7684\u9650\u5236\uff0c\u5f53\u5c0f\u4e8e $46$ \u5b57\u8282\u65f6\u9700\u8981\u586b\u5145\uff0c\u7f51\u7edc\u5c42\u901a\u8fc7 IP \u7684\u957f\u5ea6\u5b57\u6bb5\u53bb\u9664\u586b\u5145\uff1b\u6700\u5927\u503c\u53d6\u81ea\u4ee5\u592a\u7f51\u7684 MTU \u3002 CRC ( 4B ): \u5faa\u73af\u5197\u4f59\u6821\u9a8c\u7801\u3002 \u2003\u4ee5\u592a\u7f51\u6807\u51c6\u7684\u4e0d\u540c\u901a\u5e38\u662f\u901f\u7387\u548c\u7269\u7406\u4ecb\u8d28\u7684\u4e0d\u540c\uff0c\u5e27\u7684\u683c\u5f0f\u548c\u4f7f\u7528\u7684 MAC \u534f\u8bae\u662f\u76f8\u540c\u7684\u3002 (3). \u4ea4\u6362\u673a \u2003\u4ea4\u6362\u673a\u7684\u529f\u80fd\u662f\u8f6c\u53d1\u94fe\u8def\u5c42\u5e27\uff0c\u5b83\u5bf9\u4e8e\u5b50\u7f51\u4e2d\u7684\u4e3b\u673a\u548c\u8def\u7531\u5668\u6765\u8bf4\u662f\u900f\u660e\u7684 ( transparent )\u3002\u5728\u4ea4\u6362\u4ee5\u592a\u7f51\u4e2d\uff0c\u4e3b\u673a\u548c\u8def\u7531\u5668\u901a\u8fc7\u72ec\u4eab\u94fe\u8def\u76f4\u8fde\u4ea4\u6362\u673a\uff0c\u6bcf\u6bb5\u94fe\u8def\u901a\u8fc7 CSMA/CD \u6536\u53d1\u5e27\uff0c\u4e14\u4e0d\u4f1a\u6709\u51b2\u7a81\u51fa\u73b0\uff1b\u6bcf\u6bb5\u94fe\u8def\u90fd\u652f\u6301\u5168\u53cc\u5de5\u901a\u4fe1\uff0c\u94fe\u8def\u4e4b\u95f4\u652f\u6301\u5e76\u884c\u901a\u4fe1\u3002\u7c7b\u4f3c\u4e8e\u8def\u7531\u5668\uff0c\u4ea4\u6362\u673a\u7684\u8f93\u51fa\u63a5\u53e3\u4e5f\u8bbe\u6709\u7f13\u5b58\u3002 \u2003\u4ea4\u6362\u673a\u7684\u529f\u80fd\u901a\u8fc7\u5b58\u50a8\u4e8e\u5185\u90e8\u7684\u8f6c\u53d1\u8868 ( switch table ) \u5b9e\u73b0\uff0c\u5176\u5f62\u5f0f\u5982\u4e0b\uff1a @import \"/ComputerNetwork/css/orgtable.css\"; MAC \u5730\u5740 \u63a5\u53e3 \u65f6\u95f4 01-12-23-34-45-56 2 13:45 ... ... ... \u2003\u57fa\u4e8e\u4ea4\u6362\u8868\uff0c\u4ea4\u6362\u673a\u5b9e\u73b0\u5b83\u7684\u4ee5\u4e0b\u529f\u80fd\u3002 \u2003\u2460 \u81ea\u5b66\u4e60\uff1a\u5047\u8bbe\u4ea4\u6362\u8868\u4e3a\u7a7a\uff0c\u6bcf\u5f53\u6709\u4e00\u4e2a\u5e27\u5230\u8fbe\u4ea4\u6362\u673a\uff0c\u4ea4\u6362\u673a\u4f1a\u8bb0\u5f55\u6e90 MAC \u3001\u5e27\u5230\u8fbe\u7684\u63a5\u53e3\u3001\u5230\u8fbe\u65f6\u95f4\u4e3a\u4e00\u4e2a\u65b0\u7684\u8868\u9879\u3002\u5982\u679c\u67d0\u4e2a\u8868\u9879\u8d85\u8fc7\u4e86\u4ea4\u6362\u673a\u8bbe\u5b9a\u7684\u8001\u5316\u671f\uff0c\u5219\u5220\u9664\u76f8\u5e94\u8868\u9879\u3002\u56e0\u6b64\uff0c\u4ea4\u6362\u673a\u662f\u5373\u63d2\u5373\u7528\u7684\uff0c\u4e0d\u9700\u8981\u7ba1\u7406\u5458\u7684\u5916\u90e8\u5e72\u9884\u3002 \u2003\u2461 \u8fc7\u6ee4\u548c\u8f6c\u53d1\uff1a\u5047\u8bbe\u67d0\u4e2a\u5e27\u5230\u8fbe\u4ea4\u6362\u673a\u7684 $x$ \u63a5\u53e3\uff0c\u53ef\u80fd\u51fa\u73b0\u4e09\u79cd\u60c5\u51b5\uff1a \u8868\u4e2d\u6ca1\u6709\u5bf9\u5e94\u8868\u9879\uff0c\u5219\u4ea4\u6362\u673a\u5411\u9664 $x$ \u4ee5\u5916\u7684\u6240\u6709\u63a5\u53e3\u5e7f\u64ad\u8be5\u5e27\uff1b \u4ea4\u6362\u673a\u4e2d\u6709\u5bf9\u5e94\u8868\u9879\uff0c\u4f46\u4e0e\u63a5\u53e3 $x$ \u5173\u8054\uff0c\u5219\u4ea4\u6362\u673a\u8ba4\u4e3a\u6e90\u4e0e\u76ee\u7684\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u7f51\u6bb5\uff0c\u65e0\u9700\u8f6c\u53d1\uff0c\u5c06\u5e27\u4e22\u5f03\uff1b \u4ea4\u6362\u673a\u4e2d\u6709\u76f8\u5e94\u8868\u9879\uff0c\u4e14\u4e0e\u63a5\u53e3 $y\\ne x$ \u5173\u8054\uff0c\u5219\u4ea4\u6362\u673a\u5c06\u5e27\u653e\u81f3 $y$ \u7684\u8f93\u51fa\u7f13\u5b58\u3002 (4). \u865a\u62df\u5c40\u57df\u7f51 \u2003\u2003\u2003\u2003\u2003\u2003 \u2003\u5982\u56fe\u662f\u4e00\u4e2a\u673a\u6784\u5982\u4e2d\u5c0f\u4f01\u4e1a\u3001\u5b66\u6821\u7b49\u7684\u5178\u578b\u5c40\u57df\u7f51\u7684\u7b80\u5316\u62d3\u6251\uff0c\u90e8\u95e8\u4e4b\u95f4\u901a\u8fc7\u4ea4\u6362\u673a\u7684\u4e92\u8fde\u800c\u4e92\u8fde\uff0c\u6574\u4e2a\u673a\u6784\u901a\u8fc7\u8def\u7531\u5668\u5212\u5206\u4e3a\u4e00\u4e2a IP \u5b50\u7f51\u3002\u5b50\u7f51\u5185\u4efb\u610f\u4e00\u4e2a\u63a5\u53e3\u5982\u679c\u53d1\u9001\u4e00\u4e2a\u5e7f\u64ad\u5e27 (\u5982 ARP\u3001DHCP )\uff0c\u8fd9\u4e9b\u4ea4\u6362\u673a\u4f1a\u628a\u5e7f\u64ad\u5e27\u8f6c\u53d1\u5230\u6240\u6709\u63a5\u53e3\u4e0a\uff0c\u56e0\u6b64\u6574\u4e2a\u5b50\u7f51\u662f\u4e00\u4e2a\u5e7f\u64ad\u57df\u3002 \u2003\u8fd9\u6837\u7684\u914d\u7f6e\u5e38\u5e38\u4f1a\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a \u73b0\u5b9e\u4e2d\u53ef\u80fd\u51fa\u4e8e\u6027\u80fd\u6216\u8005\u90e8\u95e8\u4e4b\u95f4\u7684\u5b89\u5168\u9690\u79c1\u89d2\u5ea6\uff0c\u9700\u8981\u5212\u5206\u591a\u4e2a\u5e7f\u64ad\u57df\uff1b \u5982\u679c\u6bcf\u4e2a\u90e8\u95e8\u7684\u4e3b\u673a\u90fd\u8f83\u5c11\uff0c\u65e0\u6cd5\u5145\u5206\u5229\u7528\u4ea4\u6362\u673a\u7684\u63a5\u53e3\uff1b \u5c5e\u4e8e\u591a\u4e2a\u90e8\u95e8\u7684\u4e3b\u673a\u3001\u90e8\u95e8\u4e4b\u95f4\u4e3b\u673a\u7684\u79fb\u52a8\u7b49\u95ee\u9898\u89e3\u51b3\u8d77\u6765\u56f0\u96be\uff0c\u7075\u6d3b\u6027\u4f4e\u3002 \u2003\u4e3a\u5b9e\u73b0\u5e7f\u64ad\u57df\u7684\u5212\u5206\uff0c\u53ef\u4ee5\u5f15\u5165\u8def\u7531\u5668\u5212\u5206\u5b50\u7f51\uff0c\u4f46\u8fd9\u4e0d\u662f\u6700\u7ecf\u6d4e\u7684\u89e3\u51b3\u529e\u6cd5\u3002 \u2003\u865a\u62df\u5c40\u57df\u7f51 ( VLAN ) \u6280\u672f\u56e0\u6b64\u800c\u4ea7\u751f\u3002\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u8f6f\u4ef6\u5bf9\u652f\u6301 VLAN \u7684\u4ea4\u6362\u673a\u7684\u63a5\u53e3\u8fdb\u884c\u5212\u5206\uff0c\u6bcf\u4e00\u7ec4\u4e3a\u540c\u4e00\u4e2a VLAN \uff0c\u6bcf\u4e2a VLAN \u7684\u7aef\u53e3\u5f62\u6210\u4e00\u4e2a\u5e7f\u64ad\u57df\u3002\u57fa\u4e8e\u7aef\u53e3\u7684\u5212\u5206\u662f\u5728\u8f6f\u4ef6\u5c42\u9762\u901a\u8fc7\u4ea4\u6362\u8868\u5b9e\u73b0\u7684\uff0c\u7c7b\u4f3c\u5730\u8fd8\u4ee5\u57fa\u4e8e MAC \u5730\u5740\u5212\u5206\u3002 \u2003\u5982\u679c\u8981\u5b9e\u73b0 VLAN \u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u901a\u5e38\u9700\u8981\u5728\u4e0d\u540c VLAN \u7684\u7aef\u53e3\u95f4\u518d\u8fde\u63a5\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u5bf9\u4e8e\u96c6\u6210\u4e86\u8def\u7531\u5668\u529f\u80fd\u7684\u4e09\u5c42\u4ea4\u6362\u673a\u5b9e\u73b0\u8fd9\u4e00\u70b9\u66f4\u4e3a\u65b9\u4fbf\u3002 \u2003\u5982\u679c VLAN \u7684\u5212\u5206\u9700\u8981\u901a\u8fc7\u591a\u4ea4\u6362\u673a\u5b9e\u73b0\uff0c\u5c31\u9700\u8981\u8fde\u63a5\u8fd9\u4e9b\u4ea4\u6362\u673a\u3002\u4e00\u79cd\u8fde\u7ebf\u7684\u65b9\u6cd5\u662f\u628a\u8de8\u8d8a\u4e0d\u540c\u4ea4\u6362\u673a\u7684 VLAN \u4e2d\u7684\u67d0\u4e24\u4e2a\u7aef\u53e3\u8fde\u7ebf\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u5176\u95ee\u9898\u5728\u4e8e\u4e0d\u5177\u6709\u6269\u5c55\u6027\uff0c\u5bf9\u4e8e $2$ \u53f0\u4ea4\u6362\u673a\u548c $N$ \u4e2a VLAN \uff0c\u5c06\u9700\u8981\u8fde\u63a5 $N$ \u6761\u7ebf\u3002 \u2003\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u8fde\u63a5\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u4e2d\u7ee7\u7aef\u53e3 ( trunk port )\uff0c\u7ecf\u8fc7 trunk \u7aef\u53e3\u8f6c\u53d1\u7684\u5e27\u5fc5\u987b\u9644\u52a0 VLAN \u7684 ID \uff0c IEEE \u4e13\u95e8\u4e3a\u6b64\u8bbe\u7f6e\u4e86 802.1q \u534f\u8bae\u3002 \u2003\u8fd9\u91cc\u53ea\u662f\u5bf9 VLAN \u4f5c\u7b80\u8981\u4ecb\u7ecd\uff0c\u5b9e\u9645\u7684 VLAN \u4e5f\u53ef\u4ee5\u57fa\u4e8e\u7f51\u7edc\u5c42\u800c\u5b9a\u4e49\u3001\u8de8\u8d8a IP \u8def\u7531\u5668\u6269\u5c55\u3002","title":"4.Switched LANs"},{"location":"5-LinkLayer/5.4/#1-arp","text":"","title":"1. \u94fe\u8def\u5c42\u5bfb\u5740\uff1aARP \u534f\u8bae"},{"location":"5-LinkLayer/5.4/#1-mac","text":"\u4e3b\u673a\u548c\u8def\u7531\u5668\u7684\u63a5\u53e3 (\u9002\u914d\u5668) \u9664\u4e86\u5177\u6709\u4e00\u4e2a IP \u5730\u5740\u4ee5\u5916\uff0c\u8fd8\u5177\u6709\u4e00\u4e2a\u94fe\u8def\u5c42\u5730\u5740\uff0c\u79f0\u4e3a\u7269\u7406\u5730\u5740\u3001 LAN \u5730\u5740\u6216 MAC \u5730\u5740\u3002 MAC \u5730\u5740\u901a\u5e38\u4e3a $6$ \u4e2a\u5b57\u8282\uff0c\u7528\u901a\u8fc7\u201c-\u201d\u5206\u5272\u7684\u516d\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u8868\u793a\u3002 \u2003 MAC \u5730\u5740\u662f\u552f\u4e00\u7684\uff0c\u5728\u7f51\u5361\u51fa\u5382\u65f6\u5c31\u5199\u5165\u5230\u4e86\u5b83\u7684 ROM \u4e2d\u3002\u5f53\u4e00\u4e2a\u7f51\u5361\u5546\u8981\u751f\u4ea7\u9002\u914d\u5668\u65f6\uff0c\u5b83\u5411 IEEE \u652f\u4ed8\u8d39\u7528\uff0c\u8d2d\u4e70\u4e00\u5757 $24$ \u4f4d\u7684\u5730\u5740\u7a7a\u95f4\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4efb\u610f\u8bbe\u5907\uff0c\u65e0\u8bba\u5230\u54ea\u91cc\u4f7f\u7528\uff0c\u5176 MAC \u5730\u5740\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\u3002","title":"(1). MAC \u5730\u5740"},{"location":"5-LinkLayer/5.4/#2-arp","text":"","title":"(2). ARP \u534f\u8bae"},{"location":"5-LinkLayer/5.4/#1","text":"\u5982\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u4e3b\u673a C \u8981\u5411\u4e3b\u673a A \u53d1\u9001 IP \u6570\u636e\u62a5\uff0c\u4f46\u4e3b\u673a C \u53ea\u77e5\u9053\u76ee\u7684 IP \u800c\u4e0d\u77e5\u9053\u76ee\u7684 MAC \u5730\u5740\u3002\u4e8e\u662f\uff0c\u4e3b\u673a C \u67e5\u8be2\u81ea\u5df1\u7684 ARP \u8868\uff0c ARP \u8868\u7684\u683c\u5f0f\u5982\u4e0b\uff1a @import \"/ComputerNetwork/css/orgtable.css\"; IP \u5730\u5740 MAC \u5730\u5740 TTL 222.222.222.221 88-B2-2F-54-1A-0F 13:45:00 222.222.222.223 5C-66-AB-90-75-B1 13:52:00 \u8868\u4e2d\u5305\u542b\u4e86 IP \u5230 MAC \u7684\u6620\u5c04\u5173\u7cfb\uff0c TTL \u4ee3\u8868\u8868\u9879\u7684\u5bff\u547d\uff0c\u901a\u5e38\uff0c\u4ece\u4e00\u4e2a\u8868\u9879\u88ab\u8bbe\u7f6e\u5f00\u59cb\uff0c\u5176\u5bff\u547d\u5927\u7ea6\u4e3a $20$ \u5206\u949f\u3002 \u2003\u5982\u679c C \u67e5\u8be2\u5230\u76ee\u7684 MAC \uff0c\u5219\u8fd9\u4e2a\u95ee\u9898\u5c31\u88ab\u89e3\u51b3\u4e86\uff1b\u5982\u679c ARP \u8868\u4e2d\u6ca1\u6709\u76f8\u5e94\u8868\u9879\uff0c\u53d1\u9001\u65b9\u5c31\u4f1a\u6784\u9020\u4e00\u4e2a ARP \u5206\u7ec4 ( ARP packet )\uff0c\u76ee\u7684 MAC \u88ab\u8bbe\u7f6e\u4e3a\u5e7f\u64ad\u5730\u5740 FF-FF-FF-FF-FF-FF \uff0c\u5c40\u57df\u7f51\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u68c0\u67e5\u81ea\u5df1\u7684 IP \u662f\u5426\u4e0e ARP \u8bf7\u6c42\u5206\u7ec4\u7684\u76ee\u7684 IP \u662f\u5426\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\uff0c\u5219\u8fd4\u56de\u76f8\u5e94\u7684\u6620\u5c04\u3002 \u2003 ARP \u534f\u8bae\u662f\u5373\u63d2\u5373\u7528\u7684\uff1a ARP \u81ea\u52a8\u5efa\u7acb\u800c\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u5982\u679c\u67d0\u4e3b\u673a\u4e0e\u5c40\u57df\u7f51\u65ad\u5f00\u8fde\u63a5\uff0c\u5b83\u7684\u76f8\u5e94\u8868\u9879\u4e5f\u4f1a\u88ab\u6e05\u7a7a\u3002 \u2003 ARP \u534f\u8bae\u662f\u4e00\u4e2a\u4ecb\u4e8e\u7f51\u7edc\u5c42\u4e0e\u94fe\u8def\u5c42\u4e4b\u95f4\u7684\u534f\u8bae\u3002","title":"\u2460 \u5b50\u7f51\u5185\u901a\u4fe1"},{"location":"5-LinkLayer/5.4/#2","text":"\u5982\u56fe\uff0c\u5047\u8bbe\u4e3b\u673a $1$: 111.111.111.111 \u5411\u4e3b\u673a $2$: 222.222.222.222 \u53d1\u9001\u4e00\u4e2a\u6570\u636e\u62a5\u3002\u4e3b\u673a $1$ \u9996\u5148\u68c0\u6d4b\u51fa\u76ee\u7684 IP \u4e0d\u4e0e\u81ea\u5df1\u5728\u540c\u4e00\u5b50\u7f51\u5185\uff0c\u901a\u8fc7 ARP \u83b7\u5f97\u7f51\u5173\u7684 MAC \u5730\u5740\u540e\uff0c\u5411\u7f51\u5173\u53d1\u9001\u6b64\u6570\u636e\u62a5\uff1b\u4e4b\u540e\uff0c\u8def\u7531\u5668\u67e5\u8be2\u8f6c\u53d1\u8868\u53d1\u9001\u8be5\u5206\u7ec4\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u5230\u4e00\u4e2a\u65b0\u7684\u5e27\u4e2d\uff0c\u6b64\u65f6\uff0c\u5e27\u4e2d\u7684\u76ee\u7684 MAC \u662f\u5df2\u901a\u8fc7 ARP \u83b7\u5f97\u7684\u4e3b\u673a $2$ \u7684 MAC \u3002","title":"\u2461 \u5b50\u7f51\u95f4\u901a\u4fe1"},{"location":"5-LinkLayer/5.4/#2_1","text":"\u4ee5\u592a\u7f51 ( Ethernet ) \u81ea 20 \u4e16\u7eaa 70 \u5e74\u4ee3\u88ab\u53d1\u660e\u4ee5\u6765\uff0c\u4e0d\u65ad\u6f14\u5316\u4e0e\u53d1\u5c55\uff0c\u76f4\u81f3\u73b0\u5728\u4ecd\u4fdd\u6301\u652f\u914d\u5730\u4f4d\u3002\u5b83\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u6709\u7ebf LAN \u6280\u672f\uff1a\u9020\u4ef7\u4f4e\u5ec9\uff0c\u4e00\u4e2a\u4ee5\u592a\u7f51 NIC \u4e0d\u8db3 \uffe5100 \uff1b\u5b83\u6bd4\u4ee4\u724c\u5c40\u57df\u7f51\u548c ATM \u66f4\u7b80\u5355\u3001\u4fbf\u5b9c\uff1b\u5b83\u53ef\u4ee5\u6ee1\u8db3\u7f51\u7edc\u5e26\u5bbd\u7684\u9700\u6c42\u3002\u5b83\u4ee5\u53e4\u65f6\u7684\u5047\u60f3\u7269\u8d28\u201c\u4ee5\u592a\u201d\u547d\u540d\u3002 \u200320 \u4e16\u7eaa 90 \u5e74\u4ee3\u4ee5\u524d\uff0c\u4ee5\u592a\u7f51\u4f7f\u7528\u603b\u7ebf\u62d3\u6251\u7ed3\u6784\uff0c\u540c\u8fc7\u540c\u8f74\u7535\u7f06\u603b\u7ebf\u4e92\u8fde\u8282\u70b9\uff0c\u662f\u4e00\u79cd\u5e7f\u64ad\u5c40\u57df\u7f51\uff1b90 \u5e74\u4ee3\u540e\u671f\uff0c\u51fa\u73b0\u4e86\u57fa\u4e8e\u96c6\u7ebf\u5668 ( hub ) \u7684\u661f\u5f62\u62d3\u6251\uff0c\u4f46\u5176\u672c\u8d28\u4e5f\u662f\u5e7f\u64ad\u5c40\u57df\u7f51\uff1b21 \u4e16\u7eaa\u521d\uff0c\u4f4d\u4e8e\u4e2d\u5fc3\u7684\u96c6\u7ebf\u5668\u88ab\u4ea4\u6362\u673a\u6240\u66ff\u4ee3\u3002","title":"2. \u4ee5\u592a\u7f51"},{"location":"5-LinkLayer/5.4/#1_1","text":"\u4ee5\u592a\u7f51\u63d0\u4f9b\u65e0\u8fde\u63a5\u3001\u4e0d\u53ef\u9760\u7684\u670d\u52a1\uff0c\u9047\u5230\u5dee\u9519\u5e27\u76f4\u63a5\u4e22\u5f03\uff0c\u4e22\u5f03\u5e27\u7684\u6570\u636e\u6062\u590d\u4f9d\u8d56\u4e8e\u9ad8\u5c42\u534f\u8bae\u3002 \u2003\u4ee5\u592a\u7f51\u7684 MAC \u534f\u8bae\u91c7\u7528 CSMA/CD \u3002\u5f53\u76d1\u542c\u7684\u94fe\u8def\u5904\u4e8e\u5360\u7528\u72b6\u6001\uff0c\u4ee5\u592a\u7f51\u7684\u63a8\u8fdf\u7b56\u7565\u91c7\u7528 $1$-\u575a\u6301 CSMA \uff1b\u5f53\u5728\u4f20\u8f93\u6570\u636e\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u68c0\u6d4b\u5230\u51b2\u7a81\uff0c\u5219\u786e\u8ba4\u53d1\u9001\u5e27\u6210\u529f\u53d1\u9001\uff1b\u5426\u5219\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u4e00\u4e2a\u963b\u585e\u4fe1\u53f7\u540e\u4e2d\u6b62\u53d1\u9001\uff0c\u7136\u540e\u6839\u636e\u4e8c\u8fdb\u5236\u6307\u6570\u9000\u907f\u7b97\u6cd5\u786e\u8ba4\u7b49\u5f85\u7684\u65f6\u95f4\u91cf\uff1a \u8bbe\u8fd9\u4e2a\u5e27\u7ecf\u5386\u4e86 $m$ \u6b21\u7684\u8fde\u7eed\u51b2\u7a81\uff0c\u53d6 $n=\\min{(m,10)}$ NIC \u4ece $\\lbrace0,1,...,2^{n-1}\\rbrace$ \u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u6570 $K$\uff0c\u7b49\u5f85 $K\\cdot 512$ bit \u7684\u4f20\u8f93\u5ef6\u8fdf\u65f6\u95f4\u540e\uff0c\u91cd\u65b0\u8fdb\u5165 \u76d1\u542c-\u7a7a\u95f2\u65f6\u4f20\u8f93 \u7684\u8fc7\u7a0b \u5176\u539f\u56e0\u5728\u4e8e\uff0c\u51b2\u7a81\u6b21\u6570\u591a\u610f\u5473\u7740\u7f51\u7edc\u8d1f\u8f7d\u9ad8\uff0c\u5e94\u5f53\u63d0\u5347\u968f\u673a\u65f6\u95f4\u7684\u8303\u56f4\uff0c\u51cf\u5c0f\u8282\u70b9\u4e4b\u95f4\u8fde\u7eed\u51b2\u7a81\u7684\u6982\u7387\u3002","title":"(1). \u4ee5\u592a\u7f51\u670d\u52a1"},{"location":"5-LinkLayer/5.4/#2_2","text":"\u524d\u5bfc\u7801 ( Preamble )( 8B ): \u524d $7$ \u4e2a\u5b57\u8282\u5747\u4e3a 10101010 \uff0c\u7528\u4e8e\u540c\u6b65\u63a5\u6536\u7aef\u548c\u53d1\u9001\u7aef\u7684\u65f6\u949f\uff1b\u7b2c $8$ \u4e2a\u5b57\u8282\u4e3a 10101011 \uff0c\u7528\u4e8e\u5b9a\u754c\u3002 \u65f6\u949f\u540c\u6b65\uff1a\u540c\u6b65\u4e32\u884c\u901a\u4fe1\u9700\u8981\u901a\u8fc7\u76f8\u540c\u7684\u65f6\u949f\u9891\u7387\u6062\u590d\u6570\u636e\u4fe1\u606f\u3002\u867d\u7136\u53cc\u65b9\u53ef\u4ee5\u6839\u636e\u94fe\u8def\u7c7b\u578b\u6307\u5b9a\u9891\u7387\uff0c\u4f46\u5b9e\u9645\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u5fae\u5c0f\u504f\u5dee\uff0c\u56e0\u6b64\u9700\u8981\u540c\u6b65\u3002 \u4e0d\u505a\u7279\u6b8a\u58f0\u660e\uff0c\u524d\u5bfc\u7801\u957f\u5ea6\u4e0d\u7b97\u8fdb\u5e27\u957f\u5185\u3002 \u76ee\u7684 MAC \u3001\u6e90 MAC (\u5404 6B ): \u63a5\u6536\u65b9\u4f1a\u5339\u914d\u76ee\u7684 MAC \u548c\u81ea\u8eab\u7684 MAC \uff0c\u5982\u679c\u4e00\u81f4\u624d\u4f1a\u63a5\u6536\uff0c\u5426\u5219\u4e22\u5f03\u3002 \u7c7b\u578b ( Type )( 2B ): \u7528\u4e8e\u590d\u7528\u548c\u5206\u7528\uff0c\u6307\u793a\u4e86\u4e0a\u5c42\u534f\u8bae\uff0c\u5982 ARP \u4e3a 0x0806 \u3002 \u6570\u636e ( min:46B, max:1500B ): \u6700\u5c0f\u503c\u57fa\u4e8e CSMA/CD \u7684\u9650\u5236\uff0c\u5f53\u5c0f\u4e8e $46$ \u5b57\u8282\u65f6\u9700\u8981\u586b\u5145\uff0c\u7f51\u7edc\u5c42\u901a\u8fc7 IP \u7684\u957f\u5ea6\u5b57\u6bb5\u53bb\u9664\u586b\u5145\uff1b\u6700\u5927\u503c\u53d6\u81ea\u4ee5\u592a\u7f51\u7684 MTU \u3002 CRC ( 4B ): \u5faa\u73af\u5197\u4f59\u6821\u9a8c\u7801\u3002 \u2003\u4ee5\u592a\u7f51\u6807\u51c6\u7684\u4e0d\u540c\u901a\u5e38\u662f\u901f\u7387\u548c\u7269\u7406\u4ecb\u8d28\u7684\u4e0d\u540c\uff0c\u5e27\u7684\u683c\u5f0f\u548c\u4f7f\u7528\u7684 MAC \u534f\u8bae\u662f\u76f8\u540c\u7684\u3002","title":"(2). \u4ee5\u592a\u7f51\u5e27\u7684\u7ed3\u6784"},{"location":"5-LinkLayer/5.4/#3","text":"\u4ea4\u6362\u673a\u7684\u529f\u80fd\u662f\u8f6c\u53d1\u94fe\u8def\u5c42\u5e27\uff0c\u5b83\u5bf9\u4e8e\u5b50\u7f51\u4e2d\u7684\u4e3b\u673a\u548c\u8def\u7531\u5668\u6765\u8bf4\u662f\u900f\u660e\u7684 ( transparent )\u3002\u5728\u4ea4\u6362\u4ee5\u592a\u7f51\u4e2d\uff0c\u4e3b\u673a\u548c\u8def\u7531\u5668\u901a\u8fc7\u72ec\u4eab\u94fe\u8def\u76f4\u8fde\u4ea4\u6362\u673a\uff0c\u6bcf\u6bb5\u94fe\u8def\u901a\u8fc7 CSMA/CD \u6536\u53d1\u5e27\uff0c\u4e14\u4e0d\u4f1a\u6709\u51b2\u7a81\u51fa\u73b0\uff1b\u6bcf\u6bb5\u94fe\u8def\u90fd\u652f\u6301\u5168\u53cc\u5de5\u901a\u4fe1\uff0c\u94fe\u8def\u4e4b\u95f4\u652f\u6301\u5e76\u884c\u901a\u4fe1\u3002\u7c7b\u4f3c\u4e8e\u8def\u7531\u5668\uff0c\u4ea4\u6362\u673a\u7684\u8f93\u51fa\u63a5\u53e3\u4e5f\u8bbe\u6709\u7f13\u5b58\u3002 \u2003\u4ea4\u6362\u673a\u7684\u529f\u80fd\u901a\u8fc7\u5b58\u50a8\u4e8e\u5185\u90e8\u7684\u8f6c\u53d1\u8868 ( switch table ) \u5b9e\u73b0\uff0c\u5176\u5f62\u5f0f\u5982\u4e0b\uff1a @import \"/ComputerNetwork/css/orgtable.css\"; MAC \u5730\u5740 \u63a5\u53e3 \u65f6\u95f4 01-12-23-34-45-56 2 13:45 ... ... ... \u2003\u57fa\u4e8e\u4ea4\u6362\u8868\uff0c\u4ea4\u6362\u673a\u5b9e\u73b0\u5b83\u7684\u4ee5\u4e0b\u529f\u80fd\u3002 \u2003\u2460 \u81ea\u5b66\u4e60\uff1a\u5047\u8bbe\u4ea4\u6362\u8868\u4e3a\u7a7a\uff0c\u6bcf\u5f53\u6709\u4e00\u4e2a\u5e27\u5230\u8fbe\u4ea4\u6362\u673a\uff0c\u4ea4\u6362\u673a\u4f1a\u8bb0\u5f55\u6e90 MAC \u3001\u5e27\u5230\u8fbe\u7684\u63a5\u53e3\u3001\u5230\u8fbe\u65f6\u95f4\u4e3a\u4e00\u4e2a\u65b0\u7684\u8868\u9879\u3002\u5982\u679c\u67d0\u4e2a\u8868\u9879\u8d85\u8fc7\u4e86\u4ea4\u6362\u673a\u8bbe\u5b9a\u7684\u8001\u5316\u671f\uff0c\u5219\u5220\u9664\u76f8\u5e94\u8868\u9879\u3002\u56e0\u6b64\uff0c\u4ea4\u6362\u673a\u662f\u5373\u63d2\u5373\u7528\u7684\uff0c\u4e0d\u9700\u8981\u7ba1\u7406\u5458\u7684\u5916\u90e8\u5e72\u9884\u3002 \u2003\u2461 \u8fc7\u6ee4\u548c\u8f6c\u53d1\uff1a\u5047\u8bbe\u67d0\u4e2a\u5e27\u5230\u8fbe\u4ea4\u6362\u673a\u7684 $x$ \u63a5\u53e3\uff0c\u53ef\u80fd\u51fa\u73b0\u4e09\u79cd\u60c5\u51b5\uff1a \u8868\u4e2d\u6ca1\u6709\u5bf9\u5e94\u8868\u9879\uff0c\u5219\u4ea4\u6362\u673a\u5411\u9664 $x$ \u4ee5\u5916\u7684\u6240\u6709\u63a5\u53e3\u5e7f\u64ad\u8be5\u5e27\uff1b \u4ea4\u6362\u673a\u4e2d\u6709\u5bf9\u5e94\u8868\u9879\uff0c\u4f46\u4e0e\u63a5\u53e3 $x$ \u5173\u8054\uff0c\u5219\u4ea4\u6362\u673a\u8ba4\u4e3a\u6e90\u4e0e\u76ee\u7684\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u7f51\u6bb5\uff0c\u65e0\u9700\u8f6c\u53d1\uff0c\u5c06\u5e27\u4e22\u5f03\uff1b \u4ea4\u6362\u673a\u4e2d\u6709\u76f8\u5e94\u8868\u9879\uff0c\u4e14\u4e0e\u63a5\u53e3 $y\\ne x$ \u5173\u8054\uff0c\u5219\u4ea4\u6362\u673a\u5c06\u5e27\u653e\u81f3 $y$ \u7684\u8f93\u51fa\u7f13\u5b58\u3002","title":"(3). \u4ea4\u6362\u673a"},{"location":"5-LinkLayer/5.4/#4","text":"\u5982\u56fe\u662f\u4e00\u4e2a\u673a\u6784\u5982\u4e2d\u5c0f\u4f01\u4e1a\u3001\u5b66\u6821\u7b49\u7684\u5178\u578b\u5c40\u57df\u7f51\u7684\u7b80\u5316\u62d3\u6251\uff0c\u90e8\u95e8\u4e4b\u95f4\u901a\u8fc7\u4ea4\u6362\u673a\u7684\u4e92\u8fde\u800c\u4e92\u8fde\uff0c\u6574\u4e2a\u673a\u6784\u901a\u8fc7\u8def\u7531\u5668\u5212\u5206\u4e3a\u4e00\u4e2a IP \u5b50\u7f51\u3002\u5b50\u7f51\u5185\u4efb\u610f\u4e00\u4e2a\u63a5\u53e3\u5982\u679c\u53d1\u9001\u4e00\u4e2a\u5e7f\u64ad\u5e27 (\u5982 ARP\u3001DHCP )\uff0c\u8fd9\u4e9b\u4ea4\u6362\u673a\u4f1a\u628a\u5e7f\u64ad\u5e27\u8f6c\u53d1\u5230\u6240\u6709\u63a5\u53e3\u4e0a\uff0c\u56e0\u6b64\u6574\u4e2a\u5b50\u7f51\u662f\u4e00\u4e2a\u5e7f\u64ad\u57df\u3002 \u2003\u8fd9\u6837\u7684\u914d\u7f6e\u5e38\u5e38\u4f1a\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a \u73b0\u5b9e\u4e2d\u53ef\u80fd\u51fa\u4e8e\u6027\u80fd\u6216\u8005\u90e8\u95e8\u4e4b\u95f4\u7684\u5b89\u5168\u9690\u79c1\u89d2\u5ea6\uff0c\u9700\u8981\u5212\u5206\u591a\u4e2a\u5e7f\u64ad\u57df\uff1b \u5982\u679c\u6bcf\u4e2a\u90e8\u95e8\u7684\u4e3b\u673a\u90fd\u8f83\u5c11\uff0c\u65e0\u6cd5\u5145\u5206\u5229\u7528\u4ea4\u6362\u673a\u7684\u63a5\u53e3\uff1b \u5c5e\u4e8e\u591a\u4e2a\u90e8\u95e8\u7684\u4e3b\u673a\u3001\u90e8\u95e8\u4e4b\u95f4\u4e3b\u673a\u7684\u79fb\u52a8\u7b49\u95ee\u9898\u89e3\u51b3\u8d77\u6765\u56f0\u96be\uff0c\u7075\u6d3b\u6027\u4f4e\u3002 \u2003\u4e3a\u5b9e\u73b0\u5e7f\u64ad\u57df\u7684\u5212\u5206\uff0c\u53ef\u4ee5\u5f15\u5165\u8def\u7531\u5668\u5212\u5206\u5b50\u7f51\uff0c\u4f46\u8fd9\u4e0d\u662f\u6700\u7ecf\u6d4e\u7684\u89e3\u51b3\u529e\u6cd5\u3002 \u2003\u865a\u62df\u5c40\u57df\u7f51 ( VLAN ) \u6280\u672f\u56e0\u6b64\u800c\u4ea7\u751f\u3002\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u8f6f\u4ef6\u5bf9\u652f\u6301 VLAN \u7684\u4ea4\u6362\u673a\u7684\u63a5\u53e3\u8fdb\u884c\u5212\u5206\uff0c\u6bcf\u4e00\u7ec4\u4e3a\u540c\u4e00\u4e2a VLAN \uff0c\u6bcf\u4e2a VLAN \u7684\u7aef\u53e3\u5f62\u6210\u4e00\u4e2a\u5e7f\u64ad\u57df\u3002\u57fa\u4e8e\u7aef\u53e3\u7684\u5212\u5206\u662f\u5728\u8f6f\u4ef6\u5c42\u9762\u901a\u8fc7\u4ea4\u6362\u8868\u5b9e\u73b0\u7684\uff0c\u7c7b\u4f3c\u5730\u8fd8\u4ee5\u57fa\u4e8e MAC \u5730\u5740\u5212\u5206\u3002 \u2003\u5982\u679c\u8981\u5b9e\u73b0 VLAN \u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u901a\u5e38\u9700\u8981\u5728\u4e0d\u540c VLAN \u7684\u7aef\u53e3\u95f4\u518d\u8fde\u63a5\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u5bf9\u4e8e\u96c6\u6210\u4e86\u8def\u7531\u5668\u529f\u80fd\u7684\u4e09\u5c42\u4ea4\u6362\u673a\u5b9e\u73b0\u8fd9\u4e00\u70b9\u66f4\u4e3a\u65b9\u4fbf\u3002 \u2003\u5982\u679c VLAN \u7684\u5212\u5206\u9700\u8981\u901a\u8fc7\u591a\u4ea4\u6362\u673a\u5b9e\u73b0\uff0c\u5c31\u9700\u8981\u8fde\u63a5\u8fd9\u4e9b\u4ea4\u6362\u673a\u3002\u4e00\u79cd\u8fde\u7ebf\u7684\u65b9\u6cd5\u662f\u628a\u8de8\u8d8a\u4e0d\u540c\u4ea4\u6362\u673a\u7684 VLAN \u4e2d\u7684\u67d0\u4e24\u4e2a\u7aef\u53e3\u8fde\u7ebf\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u5176\u95ee\u9898\u5728\u4e8e\u4e0d\u5177\u6709\u6269\u5c55\u6027\uff0c\u5bf9\u4e8e $2$ \u53f0\u4ea4\u6362\u673a\u548c $N$ \u4e2a VLAN \uff0c\u5c06\u9700\u8981\u8fde\u63a5 $N$ \u6761\u7ebf\u3002 \u2003\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u8fde\u63a5\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u4e2d\u7ee7\u7aef\u53e3 ( trunk port )\uff0c\u7ecf\u8fc7 trunk \u7aef\u53e3\u8f6c\u53d1\u7684\u5e27\u5fc5\u987b\u9644\u52a0 VLAN \u7684 ID \uff0c IEEE \u4e13\u95e8\u4e3a\u6b64\u8bbe\u7f6e\u4e86 802.1q \u534f\u8bae\u3002 \u2003\u8fd9\u91cc\u53ea\u662f\u5bf9 VLAN \u4f5c\u7b80\u8981\u4ecb\u7ecd\uff0c\u5b9e\u9645\u7684 VLAN \u4e5f\u53ef\u4ee5\u57fa\u4e8e\u7f51\u7edc\u5c42\u800c\u5b9a\u4e49\u3001\u8de8\u8d8a IP \u8def\u7531\u5668\u6269\u5c55\u3002","title":"(4). \u865a\u62df\u5c40\u57df\u7f51"},{"location":"5-LinkLayer/5.5/","text":"1. PPP \u534f\u8bae \u2003\u70b9\u5bf9\u70b9 ( Point-To-Point, PPP ) \u534f\u8bae\u662f\u4e00\u4e2a\u57fa\u4e8e\u70b9\u5bf9\u70b9\u94fe\u8def\u7684\u3001\u5e7f\u6cdb\u5e94\u7528\u7684\u94fe\u8def\u5c42\u534f\u8bae\u3002 PPP \u8fd0\u884c\u7684\u70b9\u5bf9\u70b9\u94fe\u8def\u53ef\u80fd\u662f\u4e00\u6761\u4e32\u884c\u7684\u7535\u8bdd\u62e8\u53f7\u7ebf\u3001\u4e00\u6761 SONET/SDH \u94fe\u8def\u6216 ISDN \u7535\u8def\u7b49\u3002\u5b83\u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\u3002 (1). PPP \u8bbe\u8ba1\u7684\u521d\u59cb\u8981\u6c42 \u2003 IETF \u5bf9 PPP \u7684\u8bbe\u8ba1\u63d0\u51fa\u4e86\u5982\u4e0b\u7684\u521d\u59cb\u8981\u6c42\uff1a \u7ec4\u5e27\uff1a\u53ef\u4ee5\u627f\u8f7d\u4efb\u4f55\u7f51\u7edc\u5c42\u534f\u8bae\u3001\u53ef\u4ee5\u5411\u4e0a\u5c42\u5b9e\u73b0\u5206\u7528\uff1b \u6bd4\u7279\u900f\u660e\u4f20\u8f93\uff1a\u5e27\u7684\u6570\u636e\u57df\u652f\u6301\u4efb\u4f55\u6bd4\u7279\u6a21\u5f0f\uff1b \u5dee\u9519\u68c0\u6d4b\uff0c\u4e14\u65e0\u9700\u7ea0\u6b63\uff1b \u68c0\u6d4b\u8fde\u63a5\u6d3b\u6027\uff1a\u53ef\u4ee5\u68c0\u6d4b\u5e76\u901a\u77e5\u7f51\u7edc\u5c42\u94fe\u8def\u5931\u6548\uff1b \u7f51\u7edc\u5c42\u5730\u5740\u534f\u5546\uff1a\u7aef\u8282\u70b9\u53ef\u4ee5\u5f7c\u6b64\u914d\u7f6e\u7f51\u7edc\u5730\u5740\u3002 \u5e76\u4e14\uff0c\u5176\u5b9e\u73b0\u65e0\u9700\u8003\u8651\u6d41\u91cf\u63a7\u5236\u3001\u65e0\u9700\u652f\u6301\u591a\u70b9\u94fe\u8def\uff0c\u70b9\u5bf9\u70b9\u94fe\u8def\u4e0d\u5b58\u5728\u4e71\u5e8f\u95ee\u9898\uff0c\u5dee\u9519\u6062\u590d\u3001\u6d41\u91cf\u63a7\u5236\u7b49\u4ea4\u7531\u9ad8\u5c42\u534f\u8bae\u5904\u7406\u3002 (2). PPP \u5e27\u7ed3\u6784 table.gridtable { font-family: Consolas; font-size:11px; color:#333333; margin-left: 0px; border-width: 1px; border-color: #666666; border-collapse: collapse; height: 1%; width: 700px; text-align: center; } table.gridtable td { border-width: 1px; padding: 8px; border-style: solid; border-color: #666666; background-color: #ffffff; } flag (1B) address (1B) control (1B) protocol (1 or 2B) info (variable) check (2 or 4B) flag (1B) \u6807\u5fd7\uff1a\u7528 01111110 \u4f5c\u4e3a\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u5b9a\u754c\u7b26 ( delimiter ) \u5730\u5740\uff1a\u4e3a\u5c06\u6765\u7684\u6269\u5c55\u800c\u8bbe\u7f6e\uff0c\u76ee\u524d\u4e3a 11111111 \u63a7\u5236\uff1a\u4e3a\u5c06\u6765\u7684\u6269\u5c55\u800c\u8bbe\u7f6e\uff0c\u76ee\u524d\u4e3a 00000011 \u534f\u8bae\uff1a\u4e0a\u5c42\u534f\u8bae\uff0c\u7528\u4e8e\u5206\u7528 \u4fe1\u606f\uff1a\u4e0a\u5c42\u6570\u636e\u5305\u3002\u9ed8\u8ba4\u6700\u5927\u957f\u5ea6\u4e3a $1500$ \u5b57\u8282\uff0c\u53ef\u4ee5\u5728\u94fe\u8def\u521d\u6b21\u914d\u7f6e\u65f6\u6539\u53d8\u3002 \u6821\u9a8c\uff1a CRC \u6821\u9a8c \u2003 PPP \u901a\u8fc7\u534f\u5546\u6700\u591a\u53ef\u4ee5\u8282\u7701 $5$ \u4e2a\u5b57\u8282\u3002 (3). \u5b57\u8282\u586b\u5145 \u2003\u6570\u636e\u5e27\u9700\u8981\u4f7f\u7528 01111110 \u6807\u5fd7\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u4e14\u4e0a\u5c42\u6570\u636e\u5305\u4e2d\u53ef\u80fd\u51fa\u73b0\u76f8\u540c\u7684\u5b57\u8282\uff0c\u7531\u4e8e (1) \u4e2d\u63d0\u5230\u7684\u6bd4\u7279\u900f\u660e\u4f20\u8f93\u7684\u9700\u6c42\uff0c\u4e0d\u80fd\u901a\u8fc7\u7981\u6b62\u4e0a\u5c42\u6570\u636e\u4f7f\u7528 01111110 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u6b64\u4f7f\u7528\u5b57\u8282\u586b\u5145 ( byte stuffing )\u3002 \u53d1\u9001\u65b9\uff1a\u5b9a\u4e49\u8f6c\u4e49\u5b57\u8282 <01111101> \uff0c\u5728\u6570\u636e\u4e2d\u6240\u6709\u7684 <01111110> \u548c <01111101> \u524d\u586b\u5145\u8f6c\u4e49\u5b57\u8282 \u63a5\u6536\u65b9\uff1a \u5355\u4e2a <01111110> : \u6807\u5fd7 \u5355\u4e2a <01111101> : \u586b\u5145\u5b57\u8282 \u8fde\u7eed\u4e24\u4e2a <01111101> : \u4e22\u5f03\u7b2c $1$ \u4e2a\uff0c\u7b2c $2$ \u4e2a\u4f5c\u4e3a\u6570\u636e\u63a5\u6536 (4). PPP \u6570\u636e\u63a7\u5236 \u2003 PPP \u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\uff0c\u5728\u4ea4\u6362\u7f51\u7edc\u5c42\u6570\u636e\u4e4b\u524d\uff0c\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u5fc5\u987b\uff1a \u914d\u7f6e PPP \u94fe\u8def\uff1a\u6700\u5927\u5e27\u957f\u3001\u8eab\u4efd\u8ba4\u8bc1 \u5b66\u4e60\u3001\u914d\u7f6e\u7f51\u7edc\u5c42\u4fe1\u606f \u5bf9\u4e8e IP \u534f\u8bae\uff0c\u901a\u8fc7\u4ea4\u6362 IPCP ( IP Control ) \u534f\u8bae\u7684\u62a5\u6587\u5b8c\u6210\u76f8\u5173\u4fe1\u606f\u914d\u7f6e","title":"5.PPP"},{"location":"5-LinkLayer/5.5/#1-ppp","text":"\u70b9\u5bf9\u70b9 ( Point-To-Point, PPP ) \u534f\u8bae\u662f\u4e00\u4e2a\u57fa\u4e8e\u70b9\u5bf9\u70b9\u94fe\u8def\u7684\u3001\u5e7f\u6cdb\u5e94\u7528\u7684\u94fe\u8def\u5c42\u534f\u8bae\u3002 PPP \u8fd0\u884c\u7684\u70b9\u5bf9\u70b9\u94fe\u8def\u53ef\u80fd\u662f\u4e00\u6761\u4e32\u884c\u7684\u7535\u8bdd\u62e8\u53f7\u7ebf\u3001\u4e00\u6761 SONET/SDH \u94fe\u8def\u6216 ISDN \u7535\u8def\u7b49\u3002\u5b83\u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\u3002","title":"1. PPP \u534f\u8bae"},{"location":"5-LinkLayer/5.5/#1-ppp_1","text":"IETF \u5bf9 PPP \u7684\u8bbe\u8ba1\u63d0\u51fa\u4e86\u5982\u4e0b\u7684\u521d\u59cb\u8981\u6c42\uff1a \u7ec4\u5e27\uff1a\u53ef\u4ee5\u627f\u8f7d\u4efb\u4f55\u7f51\u7edc\u5c42\u534f\u8bae\u3001\u53ef\u4ee5\u5411\u4e0a\u5c42\u5b9e\u73b0\u5206\u7528\uff1b \u6bd4\u7279\u900f\u660e\u4f20\u8f93\uff1a\u5e27\u7684\u6570\u636e\u57df\u652f\u6301\u4efb\u4f55\u6bd4\u7279\u6a21\u5f0f\uff1b \u5dee\u9519\u68c0\u6d4b\uff0c\u4e14\u65e0\u9700\u7ea0\u6b63\uff1b \u68c0\u6d4b\u8fde\u63a5\u6d3b\u6027\uff1a\u53ef\u4ee5\u68c0\u6d4b\u5e76\u901a\u77e5\u7f51\u7edc\u5c42\u94fe\u8def\u5931\u6548\uff1b \u7f51\u7edc\u5c42\u5730\u5740\u534f\u5546\uff1a\u7aef\u8282\u70b9\u53ef\u4ee5\u5f7c\u6b64\u914d\u7f6e\u7f51\u7edc\u5730\u5740\u3002 \u5e76\u4e14\uff0c\u5176\u5b9e\u73b0\u65e0\u9700\u8003\u8651\u6d41\u91cf\u63a7\u5236\u3001\u65e0\u9700\u652f\u6301\u591a\u70b9\u94fe\u8def\uff0c\u70b9\u5bf9\u70b9\u94fe\u8def\u4e0d\u5b58\u5728\u4e71\u5e8f\u95ee\u9898\uff0c\u5dee\u9519\u6062\u590d\u3001\u6d41\u91cf\u63a7\u5236\u7b49\u4ea4\u7531\u9ad8\u5c42\u534f\u8bae\u5904\u7406\u3002","title":"(1). PPP \u8bbe\u8ba1\u7684\u521d\u59cb\u8981\u6c42"},{"location":"5-LinkLayer/5.5/#2-ppp","text":"table.gridtable { font-family: Consolas; font-size:11px; color:#333333; margin-left: 0px; border-width: 1px; border-color: #666666; border-collapse: collapse; height: 1%; width: 700px; text-align: center; } table.gridtable td { border-width: 1px; padding: 8px; border-style: solid; border-color: #666666; background-color: #ffffff; } flag (1B) address (1B) control (1B) protocol (1 or 2B) info (variable) check (2 or 4B) flag (1B) \u6807\u5fd7\uff1a\u7528 01111110 \u4f5c\u4e3a\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u5b9a\u754c\u7b26 ( delimiter ) \u5730\u5740\uff1a\u4e3a\u5c06\u6765\u7684\u6269\u5c55\u800c\u8bbe\u7f6e\uff0c\u76ee\u524d\u4e3a 11111111 \u63a7\u5236\uff1a\u4e3a\u5c06\u6765\u7684\u6269\u5c55\u800c\u8bbe\u7f6e\uff0c\u76ee\u524d\u4e3a 00000011 \u534f\u8bae\uff1a\u4e0a\u5c42\u534f\u8bae\uff0c\u7528\u4e8e\u5206\u7528 \u4fe1\u606f\uff1a\u4e0a\u5c42\u6570\u636e\u5305\u3002\u9ed8\u8ba4\u6700\u5927\u957f\u5ea6\u4e3a $1500$ \u5b57\u8282\uff0c\u53ef\u4ee5\u5728\u94fe\u8def\u521d\u6b21\u914d\u7f6e\u65f6\u6539\u53d8\u3002 \u6821\u9a8c\uff1a CRC \u6821\u9a8c \u2003 PPP \u901a\u8fc7\u534f\u5546\u6700\u591a\u53ef\u4ee5\u8282\u7701 $5$ \u4e2a\u5b57\u8282\u3002","title":"(2). PPP \u5e27\u7ed3\u6784"},{"location":"5-LinkLayer/5.5/#3","text":"\u6570\u636e\u5e27\u9700\u8981\u4f7f\u7528 01111110 \u6807\u5fd7\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u4e14\u4e0a\u5c42\u6570\u636e\u5305\u4e2d\u53ef\u80fd\u51fa\u73b0\u76f8\u540c\u7684\u5b57\u8282\uff0c\u7531\u4e8e (1) \u4e2d\u63d0\u5230\u7684\u6bd4\u7279\u900f\u660e\u4f20\u8f93\u7684\u9700\u6c42\uff0c\u4e0d\u80fd\u901a\u8fc7\u7981\u6b62\u4e0a\u5c42\u6570\u636e\u4f7f\u7528 01111110 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u6b64\u4f7f\u7528\u5b57\u8282\u586b\u5145 ( byte stuffing )\u3002 \u53d1\u9001\u65b9\uff1a\u5b9a\u4e49\u8f6c\u4e49\u5b57\u8282 <01111101> \uff0c\u5728\u6570\u636e\u4e2d\u6240\u6709\u7684 <01111110> \u548c <01111101> \u524d\u586b\u5145\u8f6c\u4e49\u5b57\u8282 \u63a5\u6536\u65b9\uff1a \u5355\u4e2a <01111110> : \u6807\u5fd7 \u5355\u4e2a <01111101> : \u586b\u5145\u5b57\u8282 \u8fde\u7eed\u4e24\u4e2a <01111101> : \u4e22\u5f03\u7b2c $1$ \u4e2a\uff0c\u7b2c $2$ \u4e2a\u4f5c\u4e3a\u6570\u636e\u63a5\u6536","title":"(3). \u5b57\u8282\u586b\u5145"},{"location":"5-LinkLayer/5.5/#4-ppp","text":"PPP \u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\uff0c\u5728\u4ea4\u6362\u7f51\u7edc\u5c42\u6570\u636e\u4e4b\u524d\uff0c\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u5fc5\u987b\uff1a \u914d\u7f6e PPP \u94fe\u8def\uff1a\u6700\u5927\u5e27\u957f\u3001\u8eab\u4efd\u8ba4\u8bc1 \u5b66\u4e60\u3001\u914d\u7f6e\u7f51\u7edc\u5c42\u4fe1\u606f \u5bf9\u4e8e IP \u534f\u8bae\uff0c\u901a\u8fc7\u4ea4\u6362 IPCP ( IP Control ) \u534f\u8bae\u7684\u62a5\u6587\u5b8c\u6210\u76f8\u5173\u4fe1\u606f\u914d\u7f6e","title":"(4). PPP \u6570\u636e\u63a7\u5236"},{"location":"5-LinkLayer/5.6/","text":"","title":"5.6"}]}